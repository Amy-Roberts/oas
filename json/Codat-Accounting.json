{
  "openapi": "3.1.0",
  "x-stoplight": {
    "id": "tfrhp9p2h6on2"
  },
  "info": {
    "title": "Accounting API",
    "version": "2.1.0",
    "summary": "Codat's financial insights API",
    "contact": {
      "email": "support@codat.io",
      "name": "Codat",
      "url": "https://codat.io"
    },
    "description": "Accounting data",
    "termsOfService": "https://www.codat.io/msa/"
  },
  "servers": [
    {
      "url": "https://api.codat.io",
      "description": "Codat"
    }
  ],
  "tags": [
    {
      "name": "Account transactions",
      "description": "Account transactions"
    },
    {
      "name": "Accounts",
      "description": "Accounts"
    },
    {
      "name": "Bill credit notes",
      "description": "Bill credit notes"
    },
    {
      "name": "Bill payments",
      "description": "Bill payments"
    },
    {
      "name": "Bills",
      "description": "Bills"
    },
    {
      "name": "Credit notes",
      "description": "Credit notes"
    },
    {
      "name": "Customers",
      "description": "Customers"
    },
    {
      "name": "Direct costs",
      "description": "Direct costs"
    },
    {
      "name": "Direct incomes",
      "description": "Direct incomes"
    },
    {
      "name": "Financials",
      "description": "Financials"
    },
    {
      "name": "Info",
      "description": "Info"
    },
    {
      "name": "Invoices",
      "description": "Invoices"
    },
    {
      "name": "Items",
      "description": "Items"
    },
    {
      "name": "Journal entries",
      "description": "Journal entries"
    },
    {
      "name": "Journals",
      "description": "Journals"
    },
    {
      "name": "Payment methods",
      "description": "Payment methods"
    },
    {
      "name": "Payments",
      "description": "Payments"
    },
    {
      "name": "Purchase orders",
      "description": "Purchase orders"
    },
    {
      "name": "Sales orders",
      "description": "Sales orders"
    },
    {
      "name": "Suppliers",
      "description": "Suppliers"
    },
    {
      "name": "Tax rates",
      "description": "Tax rates"
    },
    {
      "name": "Tracking categories",
      "description": "Tracking categories"
    },
    {
      "name": "Transfers",
      "description": "Transfers"
    },
    {
      "name": "Bank accounts",
      "description": "Bank accounts"
    }
  ],
  "paths": {
    "/companies/{companyId}/connections/{connectionId}/data/accountTransactions": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Account transactions"
        ],
        "summary": "List account transactions",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AccountTransactionPagedResponse",
                  "required": [
                    "pageNumber",
                    "pageSize",
                    "totalResults"
                  ],
                  "type": "object",
                  "properties": null,
                  "results": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AccountTransaction"
                    },
                    "nullable": true
                  },
                  "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "pageSize": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "totalResults": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "_links": {
                    "type": "object",
                    "additionalProperties": {
                      "title": "HalLink",
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "additionalProperties": false
                    },
                    "nullable": true
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the account transactions for a given company.",
        "operationId": "list-account-transactions"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/accountTransactions/{accountTransactionId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "name": "accountTransactionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Account transactions"
        ],
        "summary": "Get account transaction",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountTransaction"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "operationId": "get-account-transaction",
        "description": "Gets the account transactions for a given company.Gets the specified account transaction for a given company and connection."
      }
    },
    "/companies/{companyId}/data/accounts": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get chart of accounts",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AccountPagedResponseModel",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Account"
                      },
                      "nullable": true
                    },
                    "pageNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "_links": {
                      "title": "AccountPagedResponseLinksModel",
                      "type": "object",
                      "properties": {
                        "self": {
                          "title": "AccountPagedResponseHrefModel",
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "current": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1accounts/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "next": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1accounts/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "previous": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1accounts/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "description": "Used to represent what can be returned by an endpoint that supports paging.\r\nUsable with the [ProducesResponseType] attribute on a controller action."
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest chart of accounts for a company",
        "operationId": "get-accounts"
      }
    },
    "/companies/{companyId}/data/accounts/{accountId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/components/parameters/accountId"
        }
      ],
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get account",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AccountResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "nullable": true
                    },
                    "nominalCode": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "fullyQualifiedCategory": {
                      "type": "string",
                      "nullable": true
                    },
                    "fullyQualifiedName": {
                      "type": "string",
                      "nullable": true
                    },
                    "currency": {
                      "type": "string",
                      "nullable": true
                    },
                    "currentBalance": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    },
                    "type": {
                      "title": "AccountTypeResponse",
                      "enum": [
                        "Unknown",
                        "Asset",
                        "Expense",
                        "Income",
                        "Liability",
                        "Equity"
                      ],
                      "type": "string"
                    },
                    "status": {
                      "title": "AccountStatusResponse",
                      "enum": [
                        "Unknown",
                        "Active",
                        "Archived",
                        "Pending"
                      ],
                      "type": "string"
                    },
                    "isBankAccount": {
                      "type": "boolean"
                    },
                    "modifiedDate": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "sourceModifiedDate": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "validDatatypeLinks": {
                      "type": "array",
                      "items": {
                        "title": "ValidDatatypeLinksResponse",
                        "type": "object",
                        "properties": {
                          "property": {
                            "type": "string",
                            "nullable": true
                          },
                          "links": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "nullable": true
                          }
                        },
                        "additionalProperties": false
                      },
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets a single account corresponding to the supplied Id",
        "operationId": "get-account"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/accounts": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Post account",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AccountPushOperation",
                  "required": [
                    "companyId",
                    "dataConnectionKey",
                    "pushOperationKey",
                    "requestedOnUtc",
                    "status",
                    "statusCode"
                  ],
                  "type": "object",
                  "properties": {
                    "changes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/changes/items"
                      },
                      "nullable": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Account"
                    },
                    "dataType": {
                      "type": "string",
                      "nullable": true
                    },
                    "companyId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "pushOperationKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "dataConnectionKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requestedOnUtc": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "completedOnUtc": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "timeoutInMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "timeoutInSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true,
                      "deprecated": true
                    },
                    "status": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "errorMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "validation": {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/validation"
                    },
                    "statusCode": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts an individual account for a given company.",
        "operationId": "post-account"
      }
    },
    "/companies/{companyId}/data/billCreditNotes": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Bill credit notes"
        ],
        "summary": "List bill credit notes",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BillCreditNotePagedResponseModel",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BillCreditNote"
                      },
                      "nullable": true
                    },
                    "pageNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "_links": {
                      "title": "BillCreditNotePagedResponseLinksModel",
                      "type": "object",
                      "properties": {
                        "self": {
                          "title": "BillCreditNotePagedResponseHrefModel",
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "current": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1billCreditNotes/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "next": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1billCreditNotes/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "previous": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1billCreditNotes/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "description": "Used to represent what can be returned by an endpoint that supports paging.\r\nUsable with the [ProducesResponseType] attribute on a controller action."
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets a list of all bill credit notes for a company, with pagination",
        "operationId": "list-bill-credit-notes"
      }
    },
    "/companies/{companyId}/data/billCreditNotes/{billCreditNoteId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "name": "billCreditNoteId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Bill credit notes"
        ],
        "summary": "Get billCreditNote",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillCreditNote"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets a single billCreditNote corresponding to the supplied Id",
        "deprecated": true,
        "operationId": "get-bill-credit-note"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/billCreditNotes": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Bill credit notes"
        ],
        "summary": "Create billCreditNote",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillCreditNote"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BillCreditNotePushOperation",
                  "required": [
                    "companyId",
                    "dataConnectionKey",
                    "pushOperationKey",
                    "requestedOnUtc",
                    "status",
                    "statusCode"
                  ],
                  "type": "object",
                  "properties": {
                    "changes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/changes/items"
                      },
                      "nullable": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/BillCreditNote"
                    },
                    "dataType": {
                      "type": "string",
                      "nullable": true
                    },
                    "companyId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "pushOperationKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "dataConnectionKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requestedOnUtc": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "completedOnUtc": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "timeoutInMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "timeoutInSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true,
                      "deprecated": true
                    },
                    "status": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "errorMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "validation": {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/validation"
                    },
                    "statusCode": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new billCreditNote to the accounting package for a given company.",
        "operationId": "post-bill-credit-note"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/billCreditNotes/{billCreditNoteId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "name": "billCreditNoteId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "tags": [
          "Bill credit notes"
        ],
        "summary": "Update billCreditNote",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          },
          {
            "$ref": "#/components/parameters/forceUpdate"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillCreditNote"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1billCreditNotes/post/responses/200/content/application~1json/schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts an updated billCreditNote to the accounting package for a given company.",
        "operationId": "update-bill-credit-note"
      }
    },
    "/companies/{companyId}/data/billPayments": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Bill payments"
        ],
        "summary": "List billPayments",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BillPaymentPagedResponseModel",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BillPayment"
                      },
                      "nullable": true
                    },
                    "pageNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "_links": {
                      "title": "BillPaymentPagedResponseLinksModel",
                      "type": "object",
                      "properties": {
                        "self": {
                          "title": "BillPaymentPagedResponseHrefModel",
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "current": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1billPayments/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "next": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1billPayments/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "previous": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1billPayments/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "description": "Used to represent what can be returned by an endpoint that supports paging.\r\nUsable with the [ProducesResponseType] attribute on a controller action."
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest billPayments for a company, with pagination",
        "operationId": "list-bill-payments"
      }
    },
    "/companies/{companyId}/data/billPayments/{billPaymentId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "name": "billPaymentId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Bill payments"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillPayment"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Get billPayment",
        "deprecated": true,
        "description": "Get a bill payment",
        "operationId": "get-bill-payments"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/billPayments": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Bill payments"
        ],
        "summary": "Create billPayment",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillPayment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BillPaymentPushOperation",
                  "required": [
                    "companyId",
                    "dataConnectionKey",
                    "pushOperationKey",
                    "requestedOnUtc",
                    "status",
                    "statusCode"
                  ],
                  "type": "object",
                  "properties": {
                    "changes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/changes/items"
                      },
                      "nullable": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/BillPayment"
                    },
                    "dataType": {
                      "type": "string",
                      "nullable": true
                    },
                    "companyId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "pushOperationKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "dataConnectionKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requestedOnUtc": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "completedOnUtc": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "timeoutInMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "timeoutInSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true,
                      "deprecated": true
                    },
                    "status": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "errorMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "validation": {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/validation"
                    },
                    "statusCode": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new bill payment to the accounting package for a given company.",
        "operationId": "post-bill-payment"
      }
    },
    "/companies/{companyId}/data/bills": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Bills"
        ],
        "summary": "List bills",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "minimum": 0,
              "example": 1,
              "default": 1
            },
            "description": "Page Number"
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "number",
              "default": 100,
              "example": 100,
              "minimum": 1,
              "maximum": 5000
            },
            "description": "Number of records to return in a page"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Codat Query String"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "-modifiedDate"
            },
            "description": "Field to order results by"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BillPagedResponseModel",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Bill"
                      },
                      "nullable": true
                    },
                    "pageNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "_links": {
                      "title": "BillPagedResponseLinksModel",
                      "type": "object",
                      "properties": {
                        "self": {
                          "title": "BillPagedResponseHrefModel",
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "current": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "next": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "previous": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "description": "Used to represent what can be returned by an endpoint that supports paging.\r\nUsable with the [ProducesResponseType] attribute on a controller action."
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest bills for a company, with pagination",
        "operationId": "list-bills"
      }
    },
    "/companies/{companyId}/data/bills/{billId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/billId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Bills"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bill"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Get bill",
        "description": "Get bill",
        "operationId": "get-bill"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/bills": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "name": "connectionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "2e9d2c44-f675-40ba-8049-353bfcb5e171"
          },
          "description": "Unique identifier for a company's data connection"
        }
      ],
      "post": {
        "tags": [
          "Bills"
        ],
        "summary": "Create bill",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bill"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BillPushOperation",
                  "required": [
                    "companyId",
                    "dataConnectionKey",
                    "pushOperationKey",
                    "requestedOnUtc",
                    "status",
                    "statusCode"
                  ],
                  "type": "object",
                  "properties": {
                    "changes": {
                      "type": "array",
                      "items": {
                        "title": "PushOperationChange",
                        "type": "object",
                        "properties": {
                          "type": {
                            "title": "PushChangeType",
                            "enum": [
                              "Unknown",
                              "Created",
                              "Modified",
                              "Deleted",
                              "AttachmentUploaded"
                            ],
                            "type": "string"
                          },
                          "recordRef": {
                            "title": "PushOperationRecordRef",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "nullable": true
                              },
                              "dataType": {
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "attachmentId": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "additionalProperties": false
                      },
                      "nullable": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Bill"
                    },
                    "dataType": {
                      "type": "string",
                      "nullable": true
                    },
                    "companyId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "pushOperationKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "dataConnectionKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requestedOnUtc": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "completedOnUtc": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "timeoutInMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "timeoutInSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true,
                      "deprecated": true
                    },
                    "status": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "errorMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "validation": {
                      "title": "ValidationResult",
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "title": "ValidationItem",
                            "type": "object",
                            "properties": {
                              "itemId": {
                                "type": "string",
                                "nullable": true
                              },
                              "message": {
                                "type": "string",
                                "nullable": true
                              },
                              "validatorName": {
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "nullable": true
                        },
                        "warnings": {
                          "type": "array",
                          "items": {
                            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/validation/properties/errors/items"
                          },
                          "nullable": true
                        }
                      },
                      "additionalProperties": false
                    },
                    "statusCode": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new bill to the accounting package for a given company.",
        "operationId": "post-bill"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/bills/{billId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/billId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "put": {
        "tags": [
          "Bills"
        ],
        "summary": "Update bill",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          },
          {
            "$ref": "#/components/parameters/forceUpdate"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bill"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts an updated bill to the accounting package for a given company.",
        "operationId": "update-bill"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/bills/{billId}/attachments": {
      "parameters": [
        {
          "$ref": "#/components/parameters/billId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Bills"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AttachmentsDataset",
                  "type": "object",
                  "properties": {
                    "attachments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1bills~1%7BbillId%7D~1attachments~1%7BattachmentId%7D/get/responses/200/content/application~1json/schema"
                      },
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "operationId": "get-bill-attachments",
        "summary": "List bill attachments",
        "description": "Get bill attachments"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/bills/{billId}/attachments/{attachmentId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/billId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Bills"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/attachmentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AttachmentsDataset_Attachment",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "contentType": {
                      "type": "string",
                      "nullable": true
                    },
                    "dateCreated": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "fileSize": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "modifiedDate": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "sourceModifiedDate": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "includeWhenSent": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Get bill attachment",
        "description": "Get bill attachment",
        "operationId": "get-bill-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/bills/{billId}/attachments/{attachmentId}/download": {
      "parameters": [
        {
          "$ref": "#/components/parameters/billId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Bills"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/attachmentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Download bill attachment",
        "description": "Download bill attachment",
        "operationId": "download-bill-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/bills/{billId}/attachments": {
      "parameters": [
        {
          "$ref": "#/components/parameters/billId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Bills"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Create bill attachments",
        "description": "Post bill attachments",
        "operationId": "post-bill-attachments"
      }
    },
    "/companies/{companyId}/data/creditNotes": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Credit notes"
        ],
        "summary": "List creditNotes",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "CreditNotePagedResponseModel",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CreditNote"
                      },
                      "nullable": true
                    },
                    "pageNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "_links": {
                      "title": "CreditNotePagedResponseLinksModel",
                      "type": "object",
                      "properties": {
                        "self": {
                          "title": "CreditNotePagedResponseHrefModel",
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "current": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1creditNotes/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "next": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1creditNotes/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "previous": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1creditNotes/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "description": "Used to represent what can be returned by an endpoint that supports paging.\r\nUsable with the [ProducesResponseType] attribute on a controller action."
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets a list of all credit notes for a company, with pagination",
        "operationId": "list-credit-notes"
      }
    },
    "/companies/{companyId}/data/creditNotes/{creditNoteId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "name": "creditNoteId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Credit notes"
        ],
        "summary": "Get creditNote",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditNote"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets a single creditNote corresponding to the supplied Id",
        "operationId": "get-credit-note",
        "deprecated": true,
        "x-internal": true
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/creditNotes": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Credit notes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditNote"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "CreditNotePushOperation",
                  "required": [
                    "companyId",
                    "dataConnectionKey",
                    "pushOperationKey",
                    "requestedOnUtc",
                    "status",
                    "statusCode"
                  ],
                  "type": "object",
                  "properties": {
                    "changes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/changes/items"
                      },
                      "nullable": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/CreditNote"
                    },
                    "dataType": {
                      "type": "string",
                      "nullable": true
                    },
                    "companyId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "pushOperationKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "dataConnectionKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requestedOnUtc": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "completedOnUtc": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "timeoutInMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "timeoutInSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true,
                      "deprecated": true
                    },
                    "status": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "errorMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "validation": {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/validation"
                    },
                    "statusCode": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Create creditNote",
        "description": "Push credit note",
        "operationId": "push-credit-note"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/creditNotes/{creditNoteId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "name": "creditNoteId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "tags": [
          "Credit notes"
        ],
        "summary": "Update creditNote",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          },
          {
            "$ref": "#/components/parameters/forceUpdate"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditNote"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1creditNotes/post/responses/200/content/application~1json/schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts an updated credit note to the accounting package for a given company.",
        "operationId": "post-credit-note"
      }
    },
    "/companies/{companyId}/data/customers": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "List customers",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "CustomerPagedResponseModel",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Customer"
                      },
                      "nullable": true
                    },
                    "pageNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "_links": {
                      "title": "CustomerPagedResponseLinksModel",
                      "type": "object",
                      "properties": {
                        "self": {
                          "title": "CustomerPagedResponseHrefModel",
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "current": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1customers/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "next": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1customers/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "previous": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1customers/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "description": "Used to represent what can be returned by an endpoint that supports paging.\r\nUsable with the [ProducesResponseType] attribute on a controller action."
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest customers for a company, with pagination",
        "operationId": "get-customers"
      }
    },
    "/companies/{companyId}/data/customers/{customerId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "name": "customerId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get customer",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets a single customer corresponding to the supplied Id",
        "operationId": "get-customer",
        "x-internal": true,
        "deprecated": true
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/customers": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Create customer",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "CustomerPushOperation",
                  "required": [
                    "companyId",
                    "dataConnectionKey",
                    "pushOperationKey",
                    "requestedOnUtc",
                    "status",
                    "statusCode"
                  ],
                  "type": "object",
                  "properties": {
                    "changes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/changes/items"
                      },
                      "nullable": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    },
                    "dataType": {
                      "type": "string",
                      "nullable": true
                    },
                    "companyId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "pushOperationKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "dataConnectionKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requestedOnUtc": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "completedOnUtc": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "timeoutInMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "timeoutInSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true,
                      "deprecated": true
                    },
                    "status": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "errorMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "validation": {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/validation"
                    },
                    "statusCode": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "operationId": "post-customer",
        "description": "Posts an individual customer for a given company."
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/customers/{customerId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "name": "customerId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "Update customer",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          },
          {
            "$ref": "#/components/parameters/forceUpdate"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1customers/post/responses/200/content/application~1json/schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts an updated customer for a given company.",
        "operationId": "update-customer"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/customers/{customerId}/attachments": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "name": "customerId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1bills~1%7BbillId%7D~1attachments/get/responses/200/content/application~1json/schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "List customer attachments",
        "description": "Get customer attachments",
        "operationId": "get-customer-attachments"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/customers/{customerId}/attachments/{attachmentId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "name": "customerId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "$ref": "#/components/parameters/attachmentId"
        }
      ],
      "get": {
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1bills~1%7BbillId%7D~1attachments~1%7BattachmentId%7D/get/responses/200/content/application~1json/schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Get customer attachment",
        "description": "Get  customer attachment",
        "operationId": "get-customer-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/customers/{customerId}/attachments/{attachmentId}/download": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "name": "customerId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "$ref": "#/components/parameters/attachmentId"
        }
      ],
      "get": {
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Download customer attachment",
        "description": "Download customer attachment",
        "operationId": "download-customer-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/directCosts": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Direct costs"
        ],
        "summary": "List directCosts",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DirectCostPagedResponseModel",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DirectCost"
                      },
                      "nullable": true
                    },
                    "pageNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "_links": {
                      "title": "DirectCostPagedResponseLinksModel",
                      "type": "object",
                      "properties": {
                        "self": {
                          "title": "DirectCostPagedResponseHrefModel",
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "current": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1directCosts/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "next": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1directCosts/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "previous": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1directCosts/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "description": "Used to represent what can be returned by an endpoint that supports paging.\r\nUsable with the [ProducesResponseType] attribute on a controller action."
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the direct costs for the company.",
        "operationId": "get-direct-costs"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/directCosts/{directCostId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "$ref": "#/components/parameters/directCostId"
        }
      ],
      "get": {
        "tags": [
          "Direct costs"
        ],
        "summary": "Get directCost",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectCost"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the specified direct cost for a given company.",
        "operationId": "get-direct-cost",
        "deprecated": true,
        "x-internal": true
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/directCosts": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Direct costs"
        ],
        "summary": "Create directCost",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DirectCost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DirectCostPushOperation",
                  "required": [
                    "companyId",
                    "dataConnectionKey",
                    "pushOperationKey",
                    "requestedOnUtc",
                    "status",
                    "statusCode"
                  ],
                  "type": "object",
                  "properties": {
                    "changes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/changes/items"
                      },
                      "nullable": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/DirectCost"
                    },
                    "dataType": {
                      "type": "string",
                      "nullable": true
                    },
                    "companyId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "pushOperationKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "dataConnectionKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requestedOnUtc": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "completedOnUtc": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "timeoutInMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "timeoutInSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true,
                      "deprecated": true
                    },
                    "status": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "errorMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "validation": {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/validation"
                    },
                    "statusCode": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new direct cost to the accounting package for a given company.",
        "operationId": "post-direct-cost"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/directCosts/{directCostId}/attachment": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "$ref": "#/components/parameters/directCostId"
        }
      ],
      "post": {
        "tags": [
          "Direct costs"
        ],
        "summary": "Create directCost attachment",
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new direct cost attachment for a given company.",
        "operationId": "post-direct-cost-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/directCosts/{directCostId}/attachments/{attachmentId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "$ref": "#/components/parameters/directCostId"
        }
      ],
      "get": {
        "tags": [
          "Direct costs"
        ],
        "summary": "Get directCost attachment",
        "parameters": [
          {
            "$ref": "#/components/parameters/attachmentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1bills~1%7BbillId%7D~1attachments~1%7BattachmentId%7D/get/responses/200/content/application~1json/schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the specified direct cost attachment for a given company.",
        "operationId": "get-direct-cost-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/directCosts/{directCostId}/attachments/{attachmentId}/download": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "$ref": "#/components/parameters/directCostId"
        }
      ],
      "get": {
        "tags": [
          "Direct costs"
        ],
        "summary": "Download directCost attachment",
        "parameters": [
          {
            "$ref": "#/components/parameters/attachmentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Downloads an attachment for the specified direct cost for a given company.",
        "operationId": "download-direct-cost-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/directCosts/{directCostId}/attachments": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "$ref": "#/components/parameters/directCostId"
        }
      ],
      "get": {
        "tags": [
          "Direct costs"
        ],
        "summary": "List directCost attachments",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1bills~1%7BbillId%7D~1attachments/get/responses/200/content/application~1json/schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets all attachments for the specified direct cost for a given company.",
        "operationId": "list-direct-cost-attachments"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/directIncomes": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Direct incomes"
        ],
        "summary": "Get directIncomes",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DirectIncomePagedResponseModel",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DirectIncome"
                      },
                      "nullable": true
                    },
                    "pageNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "_links": {
                      "title": "DirectIncomePagedResponseLinksModel",
                      "type": "object",
                      "properties": {
                        "self": {
                          "title": "DirectIncomePagedResponseHrefModel",
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "current": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1directIncomes/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "next": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1directIncomes/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "previous": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1directIncomes/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "description": "Used to represent what can be returned by an endpoint that supports paging.\r\nUsable with the [ProducesResponseType] attribute on a controller action."
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the direct incomes for a given company.",
        "operationId": "get-direct-incomes"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/directIncomes/{directIncomeId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Direct incomes"
        ],
        "summary": "Get directIncome",
        "parameters": [
          {
            "name": "directIncomeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectIncome"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the specified direct income for a given company and connection.",
        "operationId": "get-direct-income",
        "deprecated": true,
        "x-internal": true
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/directIncomes": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Direct incomes"
        ],
        "summary": "Create directIncome",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DirectIncome"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DirectIncomePushOperation",
                  "required": [
                    "companyId",
                    "dataConnectionKey",
                    "pushOperationKey",
                    "requestedOnUtc",
                    "status",
                    "statusCode"
                  ],
                  "type": "object",
                  "properties": {
                    "changes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/changes/items"
                      },
                      "nullable": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/DirectIncome"
                    },
                    "dataType": {
                      "type": "string",
                      "nullable": true
                    },
                    "companyId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "pushOperationKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "dataConnectionKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requestedOnUtc": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "completedOnUtc": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "timeoutInMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "timeoutInSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true,
                      "deprecated": true
                    },
                    "status": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "errorMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "validation": {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/validation"
                    },
                    "statusCode": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new direct income to the accounting package for a given company.",
        "operationId": "post-direct-income"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/directIncomes/{directIncomeId}/attachment": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Direct incomes"
        ],
        "summary": "Create directIncome attachment",
        "parameters": [
          {
            "name": "directIncomeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new direct income attachment for a given company.",
        "operationId": "post-direct-income-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/directIncomes/{directIncomeId}/attachments/{attachmentId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "$ref": "#/components/parameters/directIncomeId"
        },
        {
          "$ref": "#/components/parameters/attachmentId"
        }
      ],
      "get": {
        "tags": [
          "Direct incomes"
        ],
        "summary": "Get directIncome attachment",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1bills~1%7BbillId%7D~1attachments~1%7BattachmentId%7D/get/responses/200/content/application~1json/schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the specified direct income attachment for a given company.",
        "operationId": "get-direct-income-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/directIncomes/{directIncomeId}/attachments/{attachmentId}/download": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "$ref": "#/components/parameters/directIncomeId"
        },
        {
          "$ref": "#/components/parameters/attachmentId"
        }
      ],
      "get": {
        "tags": [
          "Direct incomes"
        ],
        "summary": "Download directIncome attachment",
        "parameters": [
          {
            "$ref": "#/components/parameters/attachmentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Downloads an attachment for the specified direct income for a given company.",
        "operationId": "download-direct-income-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/directIncomes/{directIncomeId}/attachments": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "$ref": "#/components/parameters/directIncomeId"
        }
      ],
      "get": {
        "tags": [
          "Direct incomes"
        ],
        "summary": "List attachments for directIncome",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1bills~1%7BbillId%7D~1attachments/get/responses/200/content/application~1json/schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets all attachments for the specified direct income for a given company.",
        "operationId": "list-direct-income-attachments"
      }
    },
    "/companies/{companyId}/data/financials/balanceSheet": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Financials"
        ],
        "summary": "Get balance sheet",
        "parameters": [
          {
            "name": "periodLength",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "periodsToCompare",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startMonth",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BalanceSheetResponse",
                  "required": [
                    "currency",
                    "reports"
                  ],
                  "type": "object",
                  "properties": {
                    "currency": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "reports": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BalanceSheet"
                      }
                    },
                    "mostRecentAvailableMonth": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "earliestAvailableMonth": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest balance sheet for a company.",
        "operationId": "get-balance-sheet"
      }
    },
    "/companies/{companyId}/data/financials/profitAndLoss": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Financials"
        ],
        "summary": "Get profit and loss",
        "parameters": [
          {
            "name": "periodLength",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "periodsToCompare",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startMonth",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ProfitAndLossResponse",
                  "required": [
                    "currency",
                    "reportBasis",
                    "reports"
                  ],
                  "type": "object",
                  "properties": {
                    "reports": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProfitAndLossReport"
                      }
                    },
                    "reportBasis": {
                      "title": "ProfitAndLossReportingType",
                      "enum": [
                        "Unknown",
                        "Accrual",
                        "Cash"
                      ],
                      "type": "string"
                    },
                    "currency": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "mostRecentAvailableMonth": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "earliestAvailableMonth": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest profit and loss for a company.",
        "operationId": "get-profit-and-loss"
      }
    },
    "/companies/{companyId}/data/financials/cashFlowStatement": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Financials"
        ],
        "summary": "Get cash flow statement",
        "parameters": [
          {
            "name": "periodLength",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "periodsToCompare",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startMonth",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "CashFlowStatementResponse",
                  "required": [
                    "currency",
                    "reportBasis",
                    "reportInput",
                    "reports"
                  ],
                  "type": "object",
                  "properties": {
                    "reports": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CashFlowStatement"
                      }
                    },
                    "reportBasis": {
                      "title": "CashFlowStatementReportingBasis",
                      "enum": [
                        "Unknown",
                        "Accrual",
                        "Cash"
                      ],
                      "type": "string"
                    },
                    "reportInput": {
                      "title": "CashFlowStatementReportingData",
                      "enum": [
                        "Unknown",
                        "Indirect",
                        "Direct"
                      ],
                      "type": "string"
                    },
                    "currency": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "mostRecentAvailableMonth": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "earliestAvailableMonth": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest cash flow statement for a company.",
        "operationId": "get-cash-flow-statement"
      }
    },
    "/companies/{companyId}/data/info": {
      "parameters": [
        {
          "name": "companyId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "8a210b68-6988-11ed-a1eb-0242ac120002"
          },
          "description": "Unique identifier for your SMB in Codat"
        }
      ],
      "get": {
        "tags": [
          "Info"
        ],
        "summary": "Get company info",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "CompanyDataset",
                  "type": "object",
                  "properties": {
                    "companyName": {
                      "type": "string",
                      "nullable": true
                    },
                    "accountingPlatformRef": {
                      "type": "string",
                      "nullable": true
                    },
                    "companyLegalName": {
                      "type": "string",
                      "nullable": true
                    },
                    "addresses": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Customer/properties/addresses/items"
                      },
                      "nullable": true
                    },
                    "phoneNumbers": {
                      "type": "array",
                      "items": {
                        "title": "Phone",
                        "required": [
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string",
                            "nullable": true
                          },
                          "type": {
                            "title": "PhoneType",
                            "enum": [
                              "Unknown",
                              "Primary",
                              "Landline",
                              "Mobile",
                              "Fax"
                            ],
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "nullable": true
                    },
                    "webLinks": {
                      "type": "array",
                      "items": {
                        "title": "WebLink",
                        "required": [
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "type": {
                            "title": "WebLinkType",
                            "enum": [
                              "Unknown",
                              "Website",
                              "Social"
                            ],
                            "type": "string"
                          },
                          "url": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "additionalProperties": false
                      },
                      "nullable": true
                    },
                    "ledgerLockDate": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "registrationNumber": {
                      "type": "string",
                      "nullable": true
                    },
                    "taxNumber": {
                      "type": "string",
                      "nullable": true
                    },
                    "financialYearStartDate": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "baseCurrency": {
                      "type": "string",
                      "nullable": true
                    },
                    "sourceUrls": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string",
                        "nullable": true
                      },
                      "nullable": true
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "contractVersion": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest basic info for a company.",
        "operationId": "get-company-info"
      },
      "post": {
        "tags": [
          "Info"
        ],
        "summary": "Initiates the process of synchronising basic info for company",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DataSet",
                  "required": [
                    "companyId",
                    "connectionId",
                    "id",
                    "isCompleted",
                    "isErrored",
                    "progress",
                    "requested",
                    "status"
                  ],
                  "type": "object",
                  "properties": {
                    "datasetLogsUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "companyId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "connectionId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "dataType": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "title": "DatasetStatus",
                      "enum": [
                        "Initial",
                        "Queued",
                        "Fetching",
                        "MapQueued",
                        "Mapping",
                        "Complete",
                        "FetchError",
                        "MapError",
                        "InternalError",
                        "ProcessingQueued",
                        "Processing",
                        "ProcessingError",
                        "ValidationQueued",
                        "Validating",
                        "ValidationError",
                        "AuthError",
                        "Cancelled",
                        "NotSupported",
                        "RateLimitError",
                        "PermissionsError",
                        "PrerequisiteNotMet"
                      ],
                      "type": "string"
                    },
                    "errorMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "requested": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "completed": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "progress": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "isCompleted": {
                      "type": "boolean"
                    },
                    "isErrored": {
                      "type": "boolean"
                    },
                    "validationinformationUrl": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Initiates the process of synchronising basic info for a company",
        "operationId": "post-sync-info"
      }
    },
    "/companies/{companyId}/data/invoices": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "List invoices",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "InvoicePagedResponseModel",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invoice"
                      },
                      "nullable": true
                    },
                    "pageNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "_links": {
                      "title": "InvoicePagedResponseLinksModel",
                      "type": "object",
                      "properties": {
                        "self": {
                          "title": "InvoicePagedResponseHrefModel",
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "current": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1invoices/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "next": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1invoices/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "previous": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1invoices/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        }
                      }
                    }
                  },
                  "additionalProperties": false,
                  "description": "Used to represent what can be returned by an endpoint that supports paging.\r\nUsable with the [ProducesResponseType] attribute on a controller action."
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest invoices for a company, with pagination",
        "operationId": "list-invoices"
      }
    },
    "/companies/{companyId}/data/invoices/{invoiceId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Invoices"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/invoiceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Get invoice",
        "deprecated": true,
        "description": "Get invoice",
        "operationId": "get-invoice"
      }
    },
    "/companies/{companyId}/data/invoices/{invoiceId}/pdf": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Invoices"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/invoiceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Get invoice as PDF",
        "description": "Get invoice as PDF",
        "operationId": "get-invoice-pdf"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/invoices/{invoiceId}/attachments": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Invoices"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/invoiceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1bills~1%7BbillId%7D~1attachments/get/responses/200/content/application~1json/schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Get invoice attachments",
        "description": "Get invoice attachments",
        "operationId": "get-invoice-attachments"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/invoices/{invoiceId}/attachments/{attachmentId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Invoices"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/invoiceId"
          },
          {
            "$ref": "#/components/parameters/attachmentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1bills~1%7BbillId%7D~1attachments~1%7BattachmentId%7D/get/responses/200/content/application~1json/schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Get invoice attachment",
        "description": "Get invoice attachments",
        "operationId": "get-invoice-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/invoices/{invoiceId}/attachments/{attachmentId}/download": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Invoices"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/invoiceId"
          },
          {
            "$ref": "#/components/parameters/attachmentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Download invoice attachment",
        "description": "Download invoice attachments",
        "operationId": "donwload-invoice-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/invoices": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Create invoice",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invoice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "InvoicePushOperation",
                  "required": [
                    "companyId",
                    "dataConnectionKey",
                    "pushOperationKey",
                    "requestedOnUtc",
                    "status",
                    "statusCode"
                  ],
                  "type": "object",
                  "properties": {
                    "changes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/changes/items"
                      },
                      "nullable": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Invoice"
                    },
                    "dataType": {
                      "type": "string",
                      "nullable": true
                    },
                    "companyId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "pushOperationKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "dataConnectionKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requestedOnUtc": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "completedOnUtc": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "timeoutInMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "timeoutInSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true,
                      "deprecated": true
                    },
                    "status": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "errorMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "validation": {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/validation"
                    },
                    "statusCode": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new invoice to the accounting package for a given company.",
        "operationId": "post-invoice"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/invoices/{invoiceId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "put": {
        "tags": [
          "Invoices"
        ],
        "summary": "Update invoice",
        "parameters": [
          {
            "$ref": "#/components/parameters/invoiceId"
          },
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          },
          {
            "$ref": "#/components/parameters/forceUpdate"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invoice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1invoices/post/responses/200/content/application~1json/schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts an updated invoice to the accounting package for a given company.",
        "operationId": "update-invoice"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/invoices/{invoiceId}/attachment": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Invoices"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/invoiceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Push invoice attachment",
        "description": "Push invoice attachment",
        "operationId": "push-invoice-attachment"
      }
    },
    "/companies/{companyId}/data/items": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "List items",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ItemPagedResponseModel",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Item"
                      },
                      "nullable": true
                    },
                    "pageNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "_links": {
                      "title": "ItemPagedResponseLinksModel",
                      "type": "object",
                      "properties": {
                        "self": {
                          "title": "ItemPagedResponseHrefModel",
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "current": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1items/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "next": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1items/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "previous": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1items/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "description": "Used to represent what can be returned by an endpoint that supports paging.\r\nUsable with the [ProducesResponseType] attribute on a controller action."
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the items for a given company.",
        "operationId": "list-items"
      }
    },
    "/companies/{companyId}/data/items/{itemId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Get item",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "operationId": "get-item",
        "description": "Gets the specified item for a given company.",
        "x-internal": true,
        "deprecated": true
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/items": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Items"
        ],
        "summary": "Create item",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ItemPushOperation",
                  "required": [
                    "companyId",
                    "dataConnectionKey",
                    "pushOperationKey",
                    "requestedOnUtc",
                    "status",
                    "statusCode"
                  ],
                  "type": "object",
                  "properties": {
                    "changes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/changes/items"
                      },
                      "nullable": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Item"
                    },
                    "dataType": {
                      "type": "string",
                      "nullable": true
                    },
                    "companyId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "pushOperationKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "dataConnectionKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requestedOnUtc": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "completedOnUtc": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "timeoutInMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "timeoutInSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true,
                      "deprecated": true
                    },
                    "status": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "errorMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "validation": {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/validation"
                    },
                    "statusCode": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new item to the accounting package for a given company.",
        "operationId": "post-item"
      }
    },
    "/companies/{companyId}/data/journalEntries": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Journal entries"
        ],
        "summary": "List journal entries",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "JournalEntryPagedResponseModel",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/JournalEntry"
                      },
                      "nullable": true
                    },
                    "pageNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "_links": {
                      "title": "JournalEntryPagedResponseLinksModel",
                      "type": "object",
                      "properties": {
                        "self": {
                          "title": "JournalEntryPagedResponseHrefModel",
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "current": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1journalEntries/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "next": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1journalEntries/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "previous": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1journalEntries/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "description": "Used to represent what can be returned by an endpoint that supports paging.\r\nUsable with the [ProducesResponseType] attribute on a controller action."
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest journal entries for a company, with pagination",
        "operationId": "list-journal-entries"
      }
    },
    "/companies/{companyId}/data/journalEntries/{journalEntryId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Journal entries"
        ],
        "summary": "Get journalEntry",
        "parameters": [
          {
            "name": "journalEntryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntry"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets a single JournalEntry corresponding to the supplied Id",
        "operationId": "get-journal-entry",
        "deprecated": true,
        "x-internal": true
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/journalEntries": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Journal entries"
        ],
        "summary": "Create journalEntry",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JournalEntry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "JournalEntryPushOperation",
                  "required": [
                    "companyId",
                    "dataConnectionKey",
                    "pushOperationKey",
                    "requestedOnUtc",
                    "status",
                    "statusCode"
                  ],
                  "type": "object",
                  "properties": {
                    "changes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/changes/items"
                      },
                      "nullable": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/JournalEntry"
                    },
                    "dataType": {
                      "type": "string",
                      "nullable": true
                    },
                    "companyId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "pushOperationKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "dataConnectionKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requestedOnUtc": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "completedOnUtc": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "timeoutInMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "timeoutInSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true,
                      "deprecated": true
                    },
                    "status": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "errorMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "validation": {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/validation"
                    },
                    "statusCode": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new journalEntry to the accounting package for a given company.",
        "operationId": "post-journal-entry"
      }
    },
    "/companies/{companyId}/data/journals": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Journals"
        ],
        "summary": "List journals",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "JournalPagedResponseModel",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Journal"
                      },
                      "nullable": true
                    },
                    "pageNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "_links": {
                      "title": "JournalPagedResponseLinksModel",
                      "type": "object",
                      "properties": {
                        "self": {
                          "title": "JournalPagedResponseHrefModel",
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "current": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1journals/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "next": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1journals/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "previous": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1journals/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "description": "Used to represent what can be returned by an endpoint that supports paging.\r\nUsable with the [ProducesResponseType] attribute on a controller action."
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest journals for a company, with pagination",
        "operationId": "list-journals"
      }
    },
    "/companies/{companyId}/data/journals/{journalId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Journals"
        ],
        "summary": "Get journal",
        "parameters": [
          {
            "name": "journalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1journals/get/responses/200/content/application~1json/schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets a single journal corresponding to the supplied Id",
        "operationId": "get-journal",
        "x-internal": true,
        "deprecated": true
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/journals": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Journals"
        ],
        "summary": "Create journal",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Journal"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "JournalPushOperation",
                  "required": [
                    "companyId",
                    "dataConnectionKey",
                    "pushOperationKey",
                    "requestedOnUtc",
                    "status",
                    "statusCode"
                  ],
                  "type": "object",
                  "properties": {
                    "changes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/changes/items"
                      },
                      "nullable": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Journal"
                    },
                    "dataType": {
                      "type": "string",
                      "nullable": true
                    },
                    "companyId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "pushOperationKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "dataConnectionKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requestedOnUtc": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "completedOnUtc": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "timeoutInMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "timeoutInSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true,
                      "deprecated": true
                    },
                    "status": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "errorMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "validation": {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/validation"
                    },
                    "statusCode": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new journal to the accounting package for a given company.",
        "operationId": "push-journal"
      }
    },
    "/companies/{companyId}/data/paymentMethods": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Payment methods"
        ],
        "summary": "List all paymentMethods",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaymentMethodPagedResponseModel",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PaymentMethod"
                      },
                      "nullable": true
                    },
                    "pageNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "_links": {
                      "title": "PaymentMethodPagedResponseLinksModel",
                      "type": "object",
                      "properties": {
                        "self": {
                          "title": "PaymentMethodPagedResponseHrefModel",
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "current": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1paymentMethods/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "next": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1paymentMethods/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "previous": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1paymentMethods/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "description": "Used to represent what can be returned by an endpoint that supports paging.\r\nUsable with the [ProducesResponseType] attribute on a controller action."
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the payment methods for a given company.",
        "operationId": "list-payment-methods",
        "deprecated": true,
        "x-internal": true
      }
    },
    "/companies/{companyId}/data/paymentMethods/{paymentMethodId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "name": "paymentMethodId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Payment methods"
        ],
        "summary": "Get payment method",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the specified payment method for a given company.",
        "operationId": "get-payment-method",
        "deprecated": true,
        "x-internal": true
      }
    },
    "/companies/{companyId}/data/payments": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "List payments",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaymentPagedResponseModel",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Payment"
                      },
                      "nullable": true
                    },
                    "pageNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "_links": {
                      "title": "PaymentPagedResponseLinksModel",
                      "type": "object",
                      "properties": {
                        "self": {
                          "title": "PaymentPagedResponseHrefModel",
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "current": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1payments/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "next": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1payments/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "previous": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1payments/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "description": "Used to represent what can be returned by an endpoint that supports paging.\r\nUsable with the [ProducesResponseType] attribute on a controller action."
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest payments for a company, with pagination",
        "operationId": "list-payments"
      }
    },
    "/companies/{companyId}/data/payments/{paymentId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Get payment",
        "description": "Get payment",
        "deprecated": true,
        "x-internal": true,
        "operationId": "get-payment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/payments": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Create payment",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaymentPushOperation",
                  "required": [
                    "companyId",
                    "dataConnectionKey",
                    "pushOperationKey",
                    "requestedOnUtc",
                    "status",
                    "statusCode"
                  ],
                  "type": "object",
                  "properties": {
                    "changes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/changes/items"
                      },
                      "nullable": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Payment"
                    },
                    "dataType": {
                      "type": "string",
                      "nullable": true
                    },
                    "companyId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "pushOperationKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "dataConnectionKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requestedOnUtc": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "completedOnUtc": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "timeoutInMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "timeoutInSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true,
                      "deprecated": true
                    },
                    "status": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "errorMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "validation": {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/validation"
                    },
                    "statusCode": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new payment to the accounting package for a given company.",
        "operationId": "post-payment"
      }
    },
    "/companies/{companyId}/data/purchaseOrders": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Purchase orders"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PurchaseOrderPagedResponseModel",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PurchaseOrder"
                      },
                      "nullable": true
                    },
                    "pageNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "_links": {
                      "title": "PurchaseOrderPagedResponseLinksModel",
                      "type": "object",
                      "properties": {
                        "self": {
                          "title": "PurchaseOrderPagedResponseHrefModel",
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "current": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1purchaseOrders/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "next": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1purchaseOrders/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "previous": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1purchaseOrders/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "description": "Used to represent what can be returned by an endpoint that supports paging.\r\nUsable with the [ProducesResponseType] attribute on a controller action."
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "List purchaseOrders",
        "description": "Get purchase orders",
        "operationId": "list-purchase-orders"
      }
    },
    "/companies/{companyId}/data/purchaseOrders/{purchaseOrderId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Purchase orders"
        ],
        "parameters": [
          {
            "name": "purchaseOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrder"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "x-internal": true,
        "deprecated": true,
        "summary": "Get purchaseOrder",
        "description": "Get purchase order",
        "operationId": "get-purchase-order"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/purchaseOrders": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Purchase orders"
        ],
        "summary": "Create purchaseOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PurchaseOrderPushOperation",
                  "required": [
                    "companyId",
                    "dataConnectionKey",
                    "pushOperationKey",
                    "requestedOnUtc",
                    "status",
                    "statusCode"
                  ],
                  "type": "object",
                  "properties": {
                    "changes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/changes/items"
                      },
                      "nullable": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/PurchaseOrder"
                    },
                    "dataType": {
                      "type": "string",
                      "nullable": true
                    },
                    "companyId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "pushOperationKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "dataConnectionKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requestedOnUtc": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "completedOnUtc": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "timeoutInMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "timeoutInSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true,
                      "deprecated": true
                    },
                    "status": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "errorMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "validation": {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/validation"
                    },
                    "statusCode": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new purchase order to the accounting package for a given company.",
        "operationId": "post-purchase-order"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/purchaseOrders/{purchaseOrderId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "name": "purchaseOrderId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "tags": [
          "Purchase orders"
        ],
        "summary": "Update purchaseOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          },
          {
            "$ref": "#/components/parameters/forceUpdate"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1purchaseOrders/post/responses/200/content/application~1json/schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts an updated purchase order to the accounting package for a given company.",
        "operationId": "update-purchase-order"
      }
    },
    "/companies/{companyId}/data/salesOrders": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Sales orders"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "SalesOrderPagedResponseModel",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SalesOrder"
                      },
                      "nullable": true
                    },
                    "pageNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "_links": {
                      "title": "SalesOrderPagedResponseLinksModel",
                      "type": "object",
                      "properties": {
                        "self": {
                          "title": "SalesOrderPagedResponseHrefModel",
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "current": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1salesOrders/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "next": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1salesOrders/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "previous": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1salesOrders/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "description": "Used to represent what can be returned by an endpoint that supports paging.\r\nUsable with the [ProducesResponseType] attribute on a controller action."
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "List salesOrders",
        "description": "Get sales orders",
        "operationId": "list-sales-orders"
      }
    },
    "/companies/{companyId}/data/salesOrders/{salesOrderId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Sales orders"
        ],
        "parameters": [
          {
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Get salesOrder",
        "description": "Get sales order",
        "deprecated": true,
        "x-internal": true,
        "operationId": "get-sales-order"
      }
    },
    "/companies/{companyId}/data/suppliers": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Suppliers"
        ],
        "summary": "List suppliers",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "SupplierPagedResponseModel",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Supplier"
                      },
                      "nullable": true
                    },
                    "pageNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "_links": {
                      "title": "SupplierPagedResponseLinksModel",
                      "type": "object",
                      "properties": {
                        "self": {
                          "title": "SupplierPagedResponseHrefModel",
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "current": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1suppliers/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "next": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1suppliers/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "previous": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1suppliers/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "description": "Used to represent what can be returned by an endpoint that supports paging.\r\nUsable with the [ProducesResponseType] attribute on a controller action."
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest suppliers for a company, with pagination",
        "operationId": "list-suppliers"
      }
    },
    "/companies/{companyId}/data/suppliers/{supplierId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/supplierId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Get supplier",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets a single supplier corresponding to the supplied Id",
        "deprecated": true,
        "x-internal": true,
        "operationId": "get-supplier"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/suppliers": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Suppliers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "SupplierPushOperation",
                  "required": [
                    "companyId",
                    "dataConnectionKey",
                    "pushOperationKey",
                    "requestedOnUtc",
                    "status",
                    "statusCode"
                  ],
                  "type": "object",
                  "properties": {
                    "changes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/changes/items"
                      },
                      "nullable": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Supplier"
                    },
                    "dataType": {
                      "type": "string",
                      "nullable": true
                    },
                    "companyId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "pushOperationKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "dataConnectionKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requestedOnUtc": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "completedOnUtc": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "timeoutInMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "timeoutInSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true,
                      "deprecated": true
                    },
                    "status": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "errorMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "validation": {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/validation"
                    },
                    "statusCode": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Create suppliers",
        "description": "Push suppliers",
        "operationId": "post-suppliers"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/suppliers/{supplierId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/supplierId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "put": {
        "tags": [
          "Suppliers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          },
          {
            "$ref": "#/components/parameters/forceUpdate"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1suppliers/post/responses/200/content/application~1json/schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Update supplier",
        "description": "Push supplier",
        "operationId": "put-supplier"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/suppliers/{supplierId}/attachments": {
      "parameters": [
        {
          "$ref": "#/components/parameters/supplierId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Suppliers"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1bills~1%7BbillId%7D~1attachments/get/responses/200/content/application~1json/schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "List supplier attachments",
        "description": "Get supplier attachments",
        "operationId": "list-supplier-attachments"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/suppliers/{supplierId}/attachments/{attachmentId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/supplierId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "$ref": "#/components/parameters/attachmentId"
        }
      ],
      "get": {
        "tags": [
          "Suppliers"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1bills~1%7BbillId%7D~1attachments~1%7BattachmentId%7D/get/responses/200/content/application~1json/schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Get supplier attachment",
        "description": "Get supplier attachment",
        "operationId": "get-supplier-attachment"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/suppliers/{supplierId}/attachments/{attachmentId}/download": {
      "parameters": [
        {
          "$ref": "#/components/parameters/supplierId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "$ref": "#/components/parameters/attachmentId"
        }
      ],
      "get": {
        "tags": [
          "Suppliers"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "summary": "Download supplier attachment",
        "description": "Download supplier attachment",
        "operationId": "download-supplier-attachment"
      }
    },
    "/companies/{companyId}/data/taxRates": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Tax rates"
        ],
        "summary": "List all tax rates",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "TaxRatePagedResponseModel",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TaxRate"
                      },
                      "nullable": true
                    },
                    "pageNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "_links": {
                      "title": "TaxRatePagedResponseLinksModel",
                      "type": "object",
                      "properties": {
                        "self": {
                          "title": "TaxRatePagedResponseHrefModel",
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "current": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1taxRates/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "next": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1taxRates/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "previous": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1taxRates/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "description": "Used to represent what can be returned by an endpoint that supports paging.\r\nUsable with the [ProducesResponseType] attribute on a controller action."
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest tax rates for a given company.",
        "operationId": "list-tax-rates"
      }
    },
    "/companies/{companyId}/data/taxRates/{taxRateId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "name": "taxRateId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Tax rates"
        ],
        "summary": "Get tax rate",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRate"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the specified tax rate for a given company.",
        "operationId": "get-tax-rate",
        "deprecated": true,
        "x-internal": true
      }
    },
    "/companies/{companyId}/data/trackingCategories": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Tracking categories"
        ],
        "summary": "List tracking categories",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "TrackingCategoryPagedResponseModel",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "title": "TrackingCategory",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The identifier for the item, unique per tracking category",
                            "nullable": true
                          },
                          "parentId": {
                            "type": "string",
                            "description": "The identifier for this item's immediate parent",
                            "nullable": true
                          },
                          "modifiedDate": {
                            "type": "string",
                            "description": "The date the record was last updated in the system cache",
                            "format": "date-time",
                            "nullable": true
                          },
                          "sourceModifiedDate": {
                            "type": "string",
                            "description": "The date the record was last changed in the originating system",
                            "format": "date-time",
                            "nullable": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the tracking category",
                            "nullable": true
                          },
                          "hasChildren": {
                            "type": "boolean",
                            "description": "Boolean value indicating whether this category has SubCategories"
                          },
                          "status": {
                            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1trackingCategories~1%7BtrackingCategoryId%7D/get/responses/200/content/application~1json/schema/properties/status"
                          }
                        },
                        "additionalProperties": false,
                        "description": "Details of a category used for tracking transactions.\n\n:::note Language tip\n\nParameters used to track types of spend in various parts of an organization can be called  **dimensions**, **projects**, **classes**, or **locations** in different accounting platforms. In Codat, we refer to these as tracking categories.\n:::\n\nExplore the <a className=\"external\" href=\"https://api.codat.io/swagger/index.html#/TrackingCategories\" target=\"_blank\">Tracking Categories</a> endpoints in Swagger.\n\nView the coverage for tracking categories in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=trackingCategories\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nTracking categories are used to monitor cost centres and control budgets that sit outside the standard chart of accounts. Customers may use tracking categories to group together and track the income and costs of specific departments, projects, locations or customers.\n\nFrom their accounting system, customers can: \n\n- Create and maintain tracking categories and tracking category types.\n- View all tracking categories that are available for use.\n- View the relationships between the categories.\n- Assign invoices, bills, credit notes, or bill credit notes to one or more categories.\n- View the categories that a transaction belongs to.\n- View all transactions in a tracking category.\n\nFrom the [TrackingCategories](https://api.codat.io/swagger/index.html#/TrackingCategories) endpoints, you can retrieve: \n\n- A [list of the latest tracking categories](https://api.codat.io/swagger/index.html#/TrackingCategories/TrackingCategories_ListPaged) for a company.\n- The details of a [specific tracking category](https://api.codat.io/swagger/index.html#/TrackingCategories/TrackingCategories_Single).\n\n:::note Example use case\n\nMonitor the budget for your annual conference using a tracking category called 'AnnualConference2020' with the **type** set to **Costing**.\n:::"
                      },
                      "nullable": true
                    },
                    "pageNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "_links": {
                      "title": "TrackingCategoryPagedResponseLinksModel",
                      "type": "object",
                      "properties": {
                        "self": {
                          "title": "TrackingCategoryPagedResponseHrefModel",
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "current": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1trackingCategories/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "next": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1trackingCategories/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "previous": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1trackingCategories/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "description": "Used to represent what can be returned by an endpoint that supports paging.\r\nUsable with the [ProducesResponseType] attribute on a controller action."
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest tracking categories for a given company.",
        "operationId": "list-tracking-categories"
      }
    },
    "/companies/{companyId}/data/trackingCategories/{trackingCategoryId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "name": "trackingCategoryId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Tracking categories"
        ],
        "summary": "Get tracking categories",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "TrackingCategoryTree",
                  "type": "object",
                  "properties": {
                    "subCategories": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1trackingCategories~1%7BtrackingCategoryId%7D/get/responses/200/content/application~1json/schema"
                      },
                      "nullable": true
                    },
                    "id": {
                      "type": "string",
                      "description": "The identifier for the item, unique per tracking category",
                      "nullable": true
                    },
                    "parentId": {
                      "type": "string",
                      "description": "The identifier for this item's immediate parent",
                      "nullable": true
                    },
                    "modifiedDate": {
                      "type": "string",
                      "description": "The date the record was last updated in the system cache",
                      "format": "date-time",
                      "nullable": true
                    },
                    "sourceModifiedDate": {
                      "type": "string",
                      "description": "The date the record was last changed in the originating system",
                      "format": "date-time",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the tracking category",
                      "nullable": true
                    },
                    "hasChildren": {
                      "type": "boolean",
                      "description": "Boolean value indicating whether this category has SubCategories"
                    },
                    "status": {
                      "title": "TrackingCategoryStatus",
                      "enum": [
                        "Unknown",
                        "Active",
                        "Archived"
                      ],
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the specified tracking categories for a given company.",
        "operationId": "get-tracking-category",
        "deprecated": true,
        "x-internal": true
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/transfers": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Transfers"
        ],
        "summary": "List transfers",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "TransferPagedResponseModel",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Transfer"
                      },
                      "nullable": true
                    },
                    "pageNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "_links": {
                      "title": "TransferPagedResponseLinksModel",
                      "type": "object",
                      "properties": {
                        "self": {
                          "title": "TransferPagedResponseHrefModel",
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "current": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1transfers/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "next": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1transfers/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "previous": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1transfers/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "description": "Used to represent what can be returned by an endpoint that supports paging.\r\nUsable with the [ProducesResponseType] attribute on a controller action."
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the transfers for a given company.",
        "operationId": "list-transfers"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/transfers/{transferId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "name": "transferId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Transfers"
        ],
        "summary": "Get transfer",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transfer"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the specified transfer for a given company.",
        "operationId": "get-transfer",
        "deprecated": true,
        "x-internal": true
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/transfers": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Transfers"
        ],
        "summary": "Create transfer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transfer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "TransferPushOperation",
                  "required": [
                    "companyId",
                    "dataConnectionKey",
                    "pushOperationKey",
                    "requestedOnUtc",
                    "status",
                    "statusCode"
                  ],
                  "type": "object",
                  "properties": {
                    "changes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/changes/items"
                      },
                      "nullable": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Transfer"
                    },
                    "dataType": {
                      "type": "string",
                      "nullable": true
                    },
                    "companyId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "pushOperationKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "dataConnectionKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requestedOnUtc": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "completedOnUtc": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "timeoutInMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "timeoutInSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true,
                      "deprecated": true
                    },
                    "status": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "errorMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "validation": {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/validation"
                    },
                    "statusCode": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new transfer to the accounting package for a given company.",
        "operationId": "post-transfer"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/bankAccounts": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Bank accounts"
        ],
        "summary": "List bankAccounts",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BankAccountPagedResponseModel",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BankAccount"
                      },
                      "nullable": true
                    },
                    "pageNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "_links": {
                      "title": "BankAccountPagedResponseLinksModel",
                      "type": "object",
                      "properties": {
                        "self": {
                          "title": "BankAccountPagedResponseHrefModel",
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "current": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1bankAccounts/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "next": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1bankAccounts/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "previous": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1bankAccounts/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "description": "Used to represent what can be returned by an endpoint that supports paging.\r\nUsable with the [ProducesResponseType] attribute on a controller action."
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the list of bank accounts for a given connection",
        "operationId": "list-bank-accounts"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/bankAccounts/{accountId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Bank accounts"
        ],
        "summary": "Get bankAccount",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the bank account with a given ID",
        "deprecated": true,
        "x-internal": true,
        "operationId": "get-bank-account"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/data/bankAccounts/{accountId}/bankTransactions": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Bank accounts"
        ],
        "summary": "List bankTransactions for bankAccount",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BankTransactionPagedResponseModel",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BankTransaction"
                      },
                      "nullable": true
                    },
                    "pageNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "_links": {
                      "title": "BankTransactionPagedResponseLinksModel",
                      "type": "object",
                      "properties": {
                        "self": {
                          "title": "BankTransactionPagedResponseHrefModel",
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "current": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1bankAccounts~1%7BaccountId%7D~1bankTransactions/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "next": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1bankAccounts~1%7BaccountId%7D~1bankTransactions/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "previous": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1bankAccounts~1%7BaccountId%7D~1bankTransactions/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "description": "Used to represent what can be returned by an endpoint that supports paging.\r\nUsable with the [ProducesResponseType] attribute on a controller action."
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets bank transactions for a given bank account ID",
        "operationId": "list-all-bank-transactions"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/options/bankAccounts/{accountId}/bankTransactions": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "get": {
        "tags": [
          "Bank accounts"
        ],
        "summary": "List push options for bankAccount bankTransactions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PushOption",
                  "required": [
                    "description",
                    "displayName",
                    "required",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "OptionType",
                      "enum": [
                        "Array",
                        "Object",
                        "String",
                        "Number",
                        "Boolean",
                        "DateTime",
                        "File",
                        "MultiPart"
                      ],
                      "type": "string"
                    },
                    "displayName": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "description": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "options": {
                      "type": "array",
                      "items": {
                        "title": "PushOptionChoice",
                        "required": [
                          "description",
                          "displayName",
                          "required",
                          "type",
                          "value"
                        ],
                        "type": "object",
                        "properties": {
                          "value": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1options~1bankAccounts~1%7BaccountId%7D~1bankTransactions/get/responses/200/content/application~1json/schema/properties/type"
                          },
                          "displayName": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "description": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "options": {
                            "type": "array",
                            "items": {
                              "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1options~1bankAccounts~1%7BaccountId%7D~1bankTransactions/get/responses/200/content/application~1json/schema/properties/options/items"
                            },
                            "nullable": true
                          },
                          "required": {
                            "type": "boolean"
                          },
                          "validation": {
                            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1options~1bankAccounts~1%7BaccountId%7D~1bankTransactions/get/responses/200/content/application~1json/schema/properties/validation"
                          },
                          "rel": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "additionalProperties": false
                      },
                      "nullable": true
                    },
                    "required": {
                      "type": "boolean"
                    },
                    "validation": {
                      "title": "PushValidationInfo",
                      "type": "object",
                      "properties": {
                        "warnings": {
                          "type": "array",
                          "items": {
                            "title": "PushFieldValidation",
                            "required": [
                              "details",
                              "field"
                            ],
                            "type": "object",
                            "properties": {
                              "field": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "details": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "ref": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "nullable": true
                        },
                        "information": {
                          "type": "array",
                          "items": {
                            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1options~1bankAccounts~1%7BaccountId%7D~1bankTransactions/get/responses/200/content/application~1json/schema/properties/validation/properties/warnings/items"
                          },
                          "nullable": true
                        }
                      },
                      "additionalProperties": false
                    },
                    "rel": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the options of pushing bank account transactions.",
        "operationId": "get-bank-account-push-options"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/bankAccounts": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Bank accounts"
        ],
        "summary": "Create bank account",
        "parameters": [
          {
            "$ref": "#/components/parameters/allowSyncOnPushComplete"
          },
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccount"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BankAccountPushOperation",
                  "required": [
                    "companyId",
                    "dataConnectionKey",
                    "pushOperationKey",
                    "requestedOnUtc",
                    "status",
                    "statusCode"
                  ],
                  "type": "object",
                  "properties": {
                    "changes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/changes/items"
                      },
                      "nullable": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/BankAccount"
                    },
                    "dataType": {
                      "type": "string",
                      "nullable": true
                    },
                    "companyId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "pushOperationKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "dataConnectionKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requestedOnUtc": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "completedOnUtc": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "timeoutInMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "timeoutInSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true,
                      "deprecated": true
                    },
                    "status": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "errorMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "validation": {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/validation"
                    },
                    "statusCode": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts a new bank account to the accounting package for a given company.",
        "operationId": "post-bank-account"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/bankAccounts/{bankAccountId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        },
        {
          "$ref": "#/components/parameters/bankAccountId"
        }
      ],
      "put": {
        "tags": [
          "Bank accounts"
        ],
        "summary": "Update bank account",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          },
          {
            "$ref": "#/components/parameters/forceUpdate"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccount"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bankAccounts/post/responses/200/content/application~1json/schema"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts an updated bank account to the accounting package for a given company.",
        "operationId": "put-bank-account"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/bankAccounts/{accountId}/bankTransactions": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/parameters/1"
        }
      ],
      "post": {
        "tags": [
          "Bank accounts"
        ],
        "summary": "Create bank transactions",
        "parameters": [
          {
            "$ref": "#/components/parameters/allowSyncOnPushComplete"
          },
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransactions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BankTransactionsPushOperation",
                  "required": [
                    "companyId",
                    "dataConnectionKey",
                    "pushOperationKey",
                    "requestedOnUtc",
                    "status",
                    "statusCode"
                  ],
                  "type": "object",
                  "properties": {
                    "changes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/changes/items"
                      },
                      "nullable": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/BankTransactions"
                    },
                    "dataType": {
                      "type": "string",
                      "nullable": true
                    },
                    "companyId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "pushOperationKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "dataConnectionKey": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requestedOnUtc": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "completedOnUtc": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "timeoutInMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "timeoutInSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true,
                      "deprecated": true
                    },
                    "status": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "errorMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "validation": {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1push~1bills/post/responses/200/content/application~1json/schema/properties/validation"
                    },
                    "statusCode": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Posts bank transactions to the accounting package for a given company.",
        "operationId": "post-bank-transactions"
      }
    },
    "/companies/{companyId}/data/bankAccounts/{accountId}": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/components/parameters/accountId"
        }
      ],
      "get": {
        "tags": [
          "Bank accounts"
        ],
        "summary": "Get bankAccount",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BankStatementAccount",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "nullable": true
                    },
                    "accountName": {
                      "type": "string",
                      "nullable": true
                    },
                    "fromDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "toDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "nominalCode": {
                      "type": "string",
                      "nullable": true
                    },
                    "sortCode": {
                      "type": "string",
                      "nullable": true
                    },
                    "accountNumber": {
                      "type": "string",
                      "nullable": true
                    },
                    "iban": {
                      "type": "string",
                      "nullable": true
                    },
                    "currency": {
                      "type": "string",
                      "nullable": true
                    },
                    "balance": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    },
                    "availableBalance": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    },
                    "modifiedDate": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "sourceModifiedDate": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "overdraftLimit": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    },
                    "institution": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the bank account for given account ID.",
        "operationId": "get-all-bank-account",
        "x-internal": true
      }
    },
    "/companies/{companyId}/data/bankAccounts/{accountId}/transactions": {
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/parameters/0"
        },
        {
          "$ref": "#/components/parameters/accountId"
        }
      ],
      "get": {
        "tags": [
          "Bank accounts"
        ],
        "summary": "List all bankTransactions",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BankStatementLinePagedResponseModel",
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BankTransactions/properties/transactions/items"
                      },
                      "nullable": true
                    },
                    "pageNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalResults": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "_links": {
                      "title": "BankStatementLinePagedResponseLinksModel",
                      "type": "object",
                      "properties": {
                        "self": {
                          "title": "BankStatementLinePagedResponseHrefModel",
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "current": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bankAccounts~1%7BaccountId%7D~1transactions/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "next": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bankAccounts~1%7BaccountId%7D~1transactions/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        },
                        "previous": {
                          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bankAccounts~1%7BaccountId%7D~1transactions/get/responses/200/content/application~1json/schema/properties/_links/properties/self"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "description": "Used to represent what can be returned by an endpoint that supports paging.\r\nUsable with the [ProducesResponseType] attribute on a controller action."
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets the latest bank transactions for given account ID and company.",
        "operationId": "list-bank-transactions"
      }
    }
  },
  "components": {
    "schemas": {
      "Account": {
        "title": "Account",
        "x-stoplight": {
          "id": "i321t20nhtrul"
        },
        "type": "object",
        "required": [
          "isBankAccount",
          "status",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "nominalCode": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "fullyQualifiedCategory": {
            "type": "string",
            "nullable": true
          },
          "fullyQualifiedName": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "currentBalance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "type": {
            "title": "AccountType",
            "x-stoplight": {
              "id": "juremc0qvyi1f"
            },
            "type": "string",
            "enum": [
              "Unknown",
              "Asset",
              "Expense",
              "Income",
              "Liability",
              "Equity"
            ]
          },
          "status": {
            "title": "AccountStatus",
            "x-stoplight": {
              "id": "nqfuow9iah2e8"
            },
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            }
          },
          "isBankAccount": {
            "type": "boolean"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "validDatatypeLinks": {
            "type": "array",
            "items": {
              "title": "ValidDatatypeLinks",
              "x-stoplight": {
                "id": "a9yqkfcnmdrz4"
              },
              "type": "object",
              "properties": {
                "property": {
                  "type": "string",
                  "nullable": true
                },
                "links": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "nullable": true
                }
              },
              "additionalProperties": false
            },
            "nullable": true
          },
          "metadata": {
            "title": "Metadata",
            "x-stoplight": {
              "id": "5w87edtkzb05j"
            },
            "type": "object",
            "properties": {
              "isDeleted": {
                "type": "boolean",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false,
        "description": "> **Language tip:** Accounts are also referred to as **chart of accounts** and **general ledger**.\n\nExplore the <a className=\"external\" href=\"https://api.codat.io/swagger/index.html#/Accounts\" target=\"_blank\">Accounts</a> endpoints in Swagger.\n\nView the coverage for accounts in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=chartOfAccounts\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nAccounts are the categories a business uses to record accounting transactions. From the Accounts endpoints, you can retrieve [a list of all accounts for a specified company](https://api.codat.io/swagger/index.html#/Accounts/Accounts_List). \n\nThe categories for an account include:\n  * Asset\n  * Expense\n  * Income\n  * Liability\n  * Equity.\n\n> **Accounts with no category**\n> \n> If an account is pulled from the chart of accounts and its nominal code does not lie within the category layout for the company's accounts, then the **type** is `Unknown`. The **fullyQualifiedCategory** and **fullyQualifiedName** fields return `null`.\n> \n> This approach gives a true representation of the company's accounts whilst preventing distorting financials such as a company's profit and loss and balance sheet reports."
      },
      "AccountTransaction": {
        "title": "AccountTransaction",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "transactionId": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "bankAccountRef": {
            "$ref": "#/components/schemas/Payment/properties/accountRef"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "title": "AccountTransactionStatus",
            "enum": [
              "Unknown",
              "Unreconciled",
              "Reconciled",
              "Void"
            ],
            "type": "string"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "currencyRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lines": {
            "type": "array",
            "items": {
              "title": "AccountTransactionLine",
              "type": "object",
              "properties": null,
              "description": {
                "type": "string",
                "nullable": true
              },
              "recordRef": {
                "$ref": "#/components/schemas/Transfer/properties/depositedRecordRefs/items"
              },
              "amount": {
                "type": "number",
                "format": "double"
              },
              "additionalProperties": false
            },
            "nullable": true
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          }
        },
        "additionalProperties": false,
        "description": "> **Language tip:** In Codat, account transactions represent all transactions posted to a bank account within an accounting platform. For bank transactions posted within a banking platform, refer to [Banking transactions](https://docs.codat.io/docs/datamodel-banking-banking-transactions).\n\n> View the coverage for account transactions in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=accountTransactions\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nIn Codat’s data model, account transactions represent bank activity within an accounting platform. All transactions that go through a bank account are recorded as account transactions.\n\nAccount transactions are created as a result of different business activities, for example:\n\n* Payments: for example, receiving money for payment against an invoice.\n* Bill payments: for example, spending money for a payment against a bill.\n* Direct costs: for example, withdrawing money from a bank account, either for cash purposes or to make a payment.\n* Direct incomes: for example, selling an item directly to a contact and receiving payment at point of sale.\n* Transfers: for example, transferring money between two bank accounts.\n\nAccount transactions is the parent data type of [payments](https://docs.codat.io/docs/datamodel-accounting-payments), [bill payments](https://docs.codat.io/docs/datamodel-accounting-billpayments), [direct costs](https://docs.codat.io/docs/datamodel-accounting-directcosts), [direct incomes](https://docs.codat.io/docs/datamodel-accounting-directincomes), and [transfers](https://docs.codat.io/docs/datamodel-accounting-transfers).\n\nPerform the following tasks using the <a className=\"external\" href=\"https://api.codat.io/swagger/index.html#/AccountTransactions\" target=\"_blank\">Account transactions</a> endpoints:\n\n* <a className=\"external\" href=\"https://api.codat.io/swagger/index.html#/AccountTransactions/get_companies__companyId__connections__connectionId__data_accountTransactions\" target=\"_blank\">Get a list of account transactions</a>\n* <a className=\"external\" href=\"https://api.codat.io/swagger/index.html#/AccountTransactions/get_companies__companyId__connections__connectionId__data_accountTransactions__accountTransactionId_\" target=\"_blank\">Get a single account transaction</a>"
      },
      "BalanceSheet": {
        "title": "BalanceSheet",
        "required": [
          "netAssets"
        ],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "assets": {
            "title": "ReportLine",
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "accountId": {
                "type": "string",
                "nullable": true
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "value": {
                "type": "number",
                "format": "double"
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceSheet/properties/assets"
                },
                "nullable": true
              }
            },
            "additionalProperties": false
          },
          "liabilities": {
            "$ref": "#/components/schemas/BalanceSheet/properties/assets"
          },
          "netAssets": {
            "type": "number",
            "format": "double"
          },
          "equity": {
            "$ref": "#/components/schemas/BalanceSheet/properties/assets"
          }
        },
        "additionalProperties": false,
        "description": "> View the coverage for balance sheet in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=balanceSheet\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nThe balance sheet gives interested parties an idea of the company's financial position, in addition to displaying what the company owns and owes.\n\n> **Balance sheet or profit and loss report?**\n>\n> A profit and loss report summarises the total revenue, expenses, and profit or loss during a specified time period. A balance sheet report shows the financial position of a company at a specific moment in time.\n\n**Structure of this report**\nThis report will reflect the structure and line descriptions that the business has set in their own accounting platform.\n\n**History**\nBy default, Codat pulls (up to) 24 months of balance sheets for a company. You can adjust this to fetch more history, where available, by updating the `monthsToSync` value for `balanceSheet` on the [data type settings endpoint](https://docs.codat.io/reference/post_profile-syncsettings).\n\n**Want to pull this in a standardised structure?**\nOur [Enhanced Financials](https://docs.codat.io/docs/assess-enhanced-financials) endpoints provide the same report under standardized headings, allowing you to pull it in the same format for all of your business customers."
      },
      "BankAccount": {
        "title": "BankAccount",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "accountType": {
            "title": "BankAccountType",
            "enum": [
              "Unknown",
              "Credit",
              "Debit"
            ],
            "type": "string"
          },
          "nominalCode": {
            "type": "string",
            "nullable": true
          },
          "sortCode": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "iBan": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "balance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "institution": {
            "type": "string",
            "nullable": true
          },
          "availableBalance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "overdraftLimit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          }
        },
        "additionalProperties": false,
        "description": "> **Accessing Bank Accounts through Banking API**\n> \n> This datatype was originally used for accessing bank account data both in accounting integrations and open banking aggregators. \n> \n> To view bank account data through the Banking API, please refer to the new datatype [here](https://docs.codat.io/docs/data-model-banking-banking-accounts)\n\n> View the coverage for bank accounts in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=bankAccounts\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nA list of bank accounts associated with a company and a specific [data connection](https://api.codat.io/swagger/index.html#/Connection/get_companies__companyId__connections__connectionId_).\n\nBank accounts data includes:\n* The name and ID of the account in the accounting platform.\n* The currency and balance of the account.\n* The sort code and account number."
      },
      "BankTransaction": {
        "title": "BankTransaction",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "accountId": {
            "type": "string",
            "nullable": true
          },
          "clearedOnDate": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "counterparty": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "reconciled": {
            "type": "boolean"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "balance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "transactionType": {
            "title": "TransactionType",
            "enum": [
              "Unknown",
              "Credit",
              "Debit",
              "Int",
              "Div",
              "Fee",
              "SerChg",
              "Dep",
              "Atm",
              "Pos",
              "Xfer",
              "Check",
              "Payment",
              "Cash",
              "DirectDep",
              "DirectDebit",
              "RepeatPmt",
              "Other"
            ],
            "type": "string"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "> **Accessing Bank Accounts through Banking API**\n> \n> This datatype was originally used for accessing bank account data both in accounting integrations and open banking aggregators. \n> \n> To view bank account data through the Banking API, please refer to the new datatype [here](https://docs.codat.io/docs/data-model-banking-banking-transactions)\n\n> View the coverage for bank transactions in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=bankTransactions\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nTransactional banking data for a specific company and account.\n\nBank transactions include the:\n* Amount of the transaction.\n* Current account balance.\n* Transaction type, for example, credit, debit, or transfer."
      },
      "BankTransactions": {
        "title": "BankTransactions",
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "nullable": true
          },
          "transactions": {
            "type": "array",
            "items": {
              "title": "BankStatementLine",
              "required": [
                "amount",
                "balance",
                "date",
                "reconciled",
                "transactionType"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "nullable": true
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "counterparty": {
                  "type": "string",
                  "nullable": true
                },
                "reference": {
                  "type": "string",
                  "nullable": true
                },
                "reconciled": {
                  "type": "boolean"
                },
                "amount": {
                  "type": "number",
                  "format": "double"
                },
                "balance": {
                  "type": "number",
                  "format": "double"
                },
                "transactionType": {
                  "$ref": "#/components/schemas/BankTransaction/properties/transactionType"
                },
                "modifiedDate": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "sourceModifiedDate": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                }
              },
              "additionalProperties": false
            },
            "nullable": true
          },
          "contractVersion": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "> **Accessing Bank Accounts through Banking API**\n> \n> This datatype was originally used for accessing bank account data both in accounting integrations and open banking aggregators. \n>\n> To view bank account data through the Banking API, please refer to the new datatype [here](https://docs.codat.io/docs/data-model-banking-banking-transactions)\n\n> View the coverage for bank transactions in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=bankTransactions\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nTransactional banking data for a specific company and account.\n\nBank transactions include the:\n* Amount of the transaction.\n* Current account balance.\n* Transaction type, for example, credit, debit, or transfer."
      },
      "Bill": {
        "title": "Bill",
        "required": [
          "issueDate",
          "status",
          "subTotal",
          "taxAmount",
          "totalAmount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "supplierRef": {
            "title": "SupplierRef",
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "minLength": 1,
                "type": "string"
              },
              "supplierName": {
                "type": "string",
                "nullable": true
              }
            },
            "additionalProperties": false
          },
          "purchaseOrderRefs": {
            "type": "array",
            "items": {
              "title": "PurchaseOrderRef",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "nullable": true
                },
                "purchaseOrderNumber": {
                  "type": "string",
                  "nullable": true
                }
              },
              "additionalProperties": false
            },
            "nullable": true
          },
          "issueDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "currencyRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lineItems": {
            "type": "array",
            "items": {
              "title": "BillLineItem",
              "required": [
                "quantity",
                "unitAmount"
              ],
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "unitAmount": {
                  "type": "number",
                  "format": "double"
                },
                "quantity": {
                  "type": "number",
                  "format": "double"
                },
                "discountAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "subTotal": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "taxAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "totalAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "discountPercentage": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "accountRef": {
                  "$ref": "#/components/schemas/Payment/properties/accountRef"
                },
                "taxRateRef": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1items/get/responses/200/content/application~1json/schema/properties/results/items/properties/billItem/properties/taxRateRef"
                },
                "itemRef": {
                  "title": "ItemRef",
                  "required": [
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                },
                "trackingCategoryRefs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transfer/properties/trackingCategoryRefs/items"
                  },
                  "nullable": true
                },
                "tracking": {
                  "title": "AccountsPayableTracking",
                  "required": [
                    "categoryRefs",
                    "isBilledTo",
                    "isRebilledTo"
                  ],
                  "type": "object",
                  "properties": {
                    "categoryRefs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Transfer/properties/trackingCategoryRefs/items"
                      }
                    },
                    "customerRef": {
                      "$ref": "#/components/schemas/Invoice/properties/customerRef"
                    },
                    "projectRef": {
                      "title": "ProjectRef",
                      "required": [
                        "id"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "additionalProperties": false
                    },
                    "isBilledTo": {
                      "title": "AccountsPayableIsBilledToType",
                      "enum": [
                        "Unknown",
                        "NotApplicable",
                        "Customer",
                        "Project"
                      ],
                      "type": "string"
                    },
                    "isRebilledTo": {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/properties/results/items/properties/lineItems/items/properties/tracking/properties/isBilledTo"
                    }
                  },
                  "additionalProperties": false
                },
                "isDirectCost": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "nullable": true
          },
          "withholdingTax": {
            "type": "array",
            "items": {
              "title": "WithholdingTax",
              "required": [
                "amount",
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "minLength": 1,
                  "type": "string"
                },
                "amount": {
                  "type": "number",
                  "format": "double"
                }
              },
              "additionalProperties": false
            },
            "nullable": true
          },
          "status": {
            "title": "BillStatus",
            "enum": [
              "Unknown",
              "Open",
              "PartiallyPaid",
              "Paid",
              "Void",
              "Draft"
            ],
            "type": "string"
          },
          "subTotal": {
            "type": "number",
            "format": "double"
          },
          "taxAmount": {
            "type": "number",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "amountDue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "paymentAllocations": {
            "type": "array",
            "items": {
              "title": "DetailedPaymentAllocation",
              "required": [
                "allocation",
                "payment"
              ],
              "type": "object",
              "properties": {
                "payment": {
                  "title": "PaymentAllocationPayment",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "nullable": true
                    },
                    "note": {
                      "type": "string",
                      "nullable": true
                    },
                    "reference": {
                      "type": "string",
                      "nullable": true
                    },
                    "accountRef": {
                      "$ref": "#/components/schemas/Payment/properties/accountRef"
                    },
                    "currency": {
                      "type": "string",
                      "nullable": true
                    },
                    "currencyRate": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    },
                    "paidOnDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "totalAmount": {
                      "type": "number",
                      "format": "double"
                    }
                  },
                  "additionalProperties": false
                },
                "allocation": {
                  "title": "Allocation",
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string",
                      "nullable": true
                    },
                    "currencyRate": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                    },
                    "allocatedOnDate": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "totalAmount": {
                      "type": "number",
                      "format": "double"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "nullable": true
          },
          "metadata": {
            "title": "Metadata",
            "x-stoplight": {
              "id": "70eec7b9v3qnk"
            },
            "type": "object",
            "properties": {
              "metadata": {
                "type": "object",
                "description": "Additional information about the entity",
                "readOnly": true,
                "properties": {
                  "isDeleted": {
                    "type": "boolean",
                    "description": "Indicates whether the record has been deleted in the third-party system this record originiated from",
                    "examples": [
                      false,
                      true
                    ],
                    "readOnly": true
                  }
                }
              }
            }
          },
          "supplementalData": {
            "title": "DataInterfaces.SupplementalData",
            "type": "object",
            "properties": {
              "content": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {}
                },
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false,
        "x-stoplight": {
          "id": "97df9142501fa"
        },
        "description": "> **Invoices or bills?**\n>\n> In Codat, bills are for accounts payable only. For the accounts receivable equivalent of bills, see [Invoices](https://docs.codat.io/docs/datamodel-accounting-invoices).\n\nView the coverage for bills in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=bills\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nIn Codat, a bill contains details of:\n* When the bill was recorded in the accounting system.\n* How much the bill is for and the currency of the amount.\n* Who the bill was received from — the *supplier*.\n* What the bill is for — the *line items*.\n\nSome accounting platforms give a separate name to purchases where the payment is made immediately, such as something bought with a credit card or online payment. One example of this would be QuickBooks Online's *expenses*.\n\nYou can find these types of transactions in our [Direct costs](https://docs.codat.io/docs/datamodel-accounting-directcosts) data model."
      },
      "BillCreditNote": {
        "title": "BillCreditNote",
        "required": [
          "discountPercentage",
          "remainingCredit",
          "status",
          "subTotal",
          "totalAmount",
          "totalDiscount",
          "totalTaxAmount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "billCreditNoteNumber": {
            "type": "string",
            "nullable": true
          },
          "supplierRef": {
            "$ref": "#/components/schemas/Bill/properties/supplierRef"
          },
          "withholdingTax": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bill/properties/withholdingTax/items"
            },
            "nullable": true
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "totalDiscount": {
            "type": "number",
            "format": "double"
          },
          "subTotal": {
            "type": "number",
            "format": "double"
          },
          "totalTaxAmount": {
            "type": "number",
            "format": "double"
          },
          "discountPercentage": {
            "type": "number",
            "format": "double"
          },
          "remainingCredit": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "$ref": "#/components/schemas/CreditNote/properties/status"
          },
          "issueDate": {
            "type": "string",
            "format": "date-time"
          },
          "allocatedOnDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "currencyRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lineItems": {
            "type": "array",
            "items": {
              "title": "BillCreditNoteLineItem",
              "required": [
                "quantity",
                "unitAmount"
              ],
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "unitAmount": {
                  "type": "number",
                  "format": "double"
                },
                "quantity": {
                  "type": "number",
                  "format": "double"
                },
                "discountAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "subTotal": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "taxAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "totalAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "accountRef": {
                  "$ref": "#/components/schemas/Payment/properties/accountRef"
                },
                "discountPercentage": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "taxRateRef": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1items/get/responses/200/content/application~1json/schema/properties/results/items/properties/billItem/properties/taxRateRef"
                },
                "itemRef": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/properties/results/items/properties/lineItems/items/properties/itemRef"
                },
                "trackingCategoryRefs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transfer/properties/trackingCategoryRefs/items"
                  },
                  "nullable": true
                },
                "tracking": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/properties/results/items/properties/lineItems/items/properties/tracking"
                }
              },
              "additionalProperties": false
            },
            "nullable": true
          },
          "paymentAllocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bill/properties/paymentAllocations/items"
            },
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          },
          "supplementalData": {
            "$ref": "#/components/schemas/Bill/properties/supplementalData"
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "> **Bill credit notes or credit notes?**\n> \n> In Codat, bill credit notes represent accounts payable only. For accounts receivable, see [Credit notes](https://docs.codat.io/docs/datamodel-accounting-creditnotes).\n\nView the coverage for bill credit notes in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=billCreditNotes\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nA bill credit note is issued by a supplier for the purpose of recording credit. For example, if a supplier was unable to fulfil an order that was placed by a business, or delivered damaged goods, they would issue a bill credit note. A bill credit note reduces the amount a business owes to the supplier. It can be refunded to the business or used to pay off future bills.\n\nIn the Codat API, a bill credit note is an accounts payable record issued by a [supplier](https://docs.codat.io/docs/datamodel-accounting-suppliers). \n\nA bill credit note includes details of:\n* The original and remaining credit.\n* Any allocations of the credit against other records, such as [bills](https://docs.codat.io/docs/datamodel-accounting-bills).\n* The supplier that issued the bill credit note."
      },
      "BillPayment": {
        "title": "BillPayment",
        "required": [
          "date"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "supplierRef": {
            "$ref": "#/components/schemas/Bill/properties/supplierRef"
          },
          "accountRef": {
            "$ref": "#/components/schemas/Payment/properties/accountRef"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "currencyRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "paymentMethodRef": {
            "$ref": "#/components/schemas/Payment/properties/paymentMethodRef"
          },
          "lines": {
            "type": "array",
            "items": {
              "title": "BillPaymentLine",
              "required": [
                "amount"
              ],
              "type": "object",
              "properties": {
                "amount": {
                  "type": "number",
                  "format": "double"
                },
                "links": {
                  "type": "array",
                  "items": {
                    "title": "BillPaymentLineLink",
                    "required": [
                      "type"
                    ],
                    "type": "object",
                    "properties": {
                      "type": {
                        "title": "BillPaymentLinkType",
                        "enum": [
                          "Unknown",
                          "Unlinked",
                          "Bill",
                          "Other",
                          "CreditNote",
                          "BillPayment",
                          "PaymentOnAccount",
                          "Refund",
                          "ManualJournal",
                          "Discount"
                        ],
                        "type": "string"
                      },
                      "id": {
                        "type": "string",
                        "nullable": true
                      },
                      "amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                      },
                      "currencyRate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  },
                  "nullable": true
                },
                "allocatedOnDate": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                }
              },
              "additionalProperties": false
            },
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          },
          "supplementalData": {
            "$ref": "#/components/schemas/Bill/properties/supplementalData"
          }
        },
        "additionalProperties": false,
        "description": "> **Bill payments or payments?**  \n> \n> In Codat, bill payments represent accounts payable only. For accounts receivable, see [payments](https://docs.codat.io/docs/datamodel-accounting-payments), which includes [invoices](https://docs.codat.io/docs/datamodel-accounting-invoices) and [credit notes](https://docs.codat.io/docs/datamodel-accounting-creditnotes).\n\n> View the coverage for bill payments in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=billPayments\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nBill payments include all accounts payable transaction data. This includes [bills](https://docs.codat.io/docs/datamodel-accounting-bills) and [credit notes against bills](https://docs.codat.io/docs/datamodel-accounting-billcreditnotes).\n\nA bill payment in Codat usually represents an allocation of money within any customer accounts payable account. This includes but is not strictly limited to:\n\n- A payment made against a bill—for example, a credit card payment, cheque payment, or cash payment.\n- An allocation of a supplier's credit note, to a bill or perhaps a refund.\n- A bill payment made directly to an accounts payable account. This could be an overpayment or a prepayment, or a refund of a payment made directly to an accounts payable account.\n\nDepending on the bill payments which are allowed by the underlying accounting package, some of these types may be combined. Please see the [Example data](#example-data) section for samples of what these cases look like.\n\nIn Codat, a bill payment contains details of:\n\n- When the bill payment was recorded in the accounting system.\n- How much it is for and in the currency.\n- Who the payment has been paid to, the _supplier_.\n- The types of bill payments, the _line items_.  \n\nSome accounting platforms give a separate name to purchases where the payment is made immediately, such as something bought with a credit card or online payment. One example of this would be QuickBooks Online's _expenses_. You can find these types of transactions in our [Direct costs](https://docs.codat.io/docs/datamodel-accounting-directcosts) data model.\n\nBill payments is a child data type of [account transactions](https://docs.codat.io/docs/datamodel-accounting-account-transactions)."
      },
      "CashFlowStatement": {
        "title": "CashFlowStatement",
        "type": "object",
        "properties": {
          "fromDate": {
            "type": "string",
            "format": "date-time"
          },
          "toDate": {
            "type": "string",
            "format": "date-time"
          },
          "cashReceipts": {
            "$ref": "#/components/schemas/BalanceSheet/properties/assets"
          },
          "cashPayments": {
            "$ref": "#/components/schemas/BalanceSheet/properties/assets"
          }
        },
        "additionalProperties": false,
        "description": "> View the coverage for cash flow statement in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=cashFlowStatement\" target=\"_blank\">Data coverage explorer</a>.\n\n> ** Operating activities only**  \n> \n> Currently, the cash flow statement shows cash that flows into and out of the company from operating activities *only*. Operating activities generate cash from the sale of goods or services.\n\n## Overview\n\nA cash flow statement is a financial report that records all cash that is received or spent by a company during a given period. It gives you a clearer picture of the company’s performance, and their ability to pay creditors and finance growth.\n\n> **Cash flow statement or balance sheet?**\n> \n> Look at the cash flow statement to understand a company's ability to pay its bills. Although the balance sheet may show healthy earnings at a specific point in time, the cash flow statement allows you to see whether the company is meeting its financial commitments, such as paying creditors or its employees."
      },
      "CreditNote": {
        "title": "CreditNote",
        "required": [
          "discountPercentage",
          "remainingCredit",
          "status",
          "subTotal",
          "totalAmount",
          "totalDiscount",
          "totalTaxAmount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "creditNoteNumber": {
            "type": "string",
            "nullable": true
          },
          "customerRef": {
            "$ref": "#/components/schemas/Invoice/properties/customerRef"
          },
          "withholdingTax": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bill/properties/withholdingTax/items"
            },
            "nullable": true
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "totalDiscount": {
            "type": "number",
            "format": "double"
          },
          "subTotal": {
            "type": "number",
            "format": "double"
          },
          "additionalTaxAmount": {
            "type": "number",
            "format": "double"
          },
          "additionalTaxPercentage": {
            "type": "number",
            "format": "double"
          },
          "totalTaxAmount": {
            "type": "number",
            "format": "double"
          },
          "discountPercentage": {
            "type": "number",
            "format": "double"
          },
          "remainingCredit": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "title": "CreditNoteStatus",
            "enum": [
              "Unknown",
              "Draft",
              "Submitted",
              "Paid",
              "Void",
              "PartiallyPaid"
            ],
            "type": "string"
          },
          "issueDate": {
            "type": "string",
            "format": "date-time"
          },
          "allocatedOnDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "currencyRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lineItems": {
            "type": "array",
            "items": {
              "title": "CreditNoteLineItem",
              "required": [
                "quantity",
                "unitAmount"
              ],
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "unitAmount": {
                  "type": "number",
                  "format": "double"
                },
                "quantity": {
                  "type": "number",
                  "format": "double"
                },
                "discountAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "subTotal": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "taxAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "totalAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "accountRef": {
                  "$ref": "#/components/schemas/Payment/properties/accountRef"
                },
                "discountPercentage": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "taxRateRef": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1items/get/responses/200/content/application~1json/schema/properties/results/items/properties/billItem/properties/taxRateRef"
                },
                "itemRef": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/properties/results/items/properties/lineItems/items/properties/itemRef"
                },
                "trackingCategoryRefs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transfer/properties/trackingCategoryRefs/items"
                  },
                  "nullable": true
                },
                "tracking": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1invoices/get/responses/200/content/application~1json/schema/properties/results/items/properties/lineItems/items/properties/tracking"
                },
                "isDirectIncome": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "nullable": true
          },
          "paymentAllocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bill/properties/paymentAllocations/items"
            },
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          },
          "supplementalData": {
            "$ref": "#/components/schemas/Bill/properties/supplementalData"
          }
        },
        "additionalProperties": false,
        "description": "> View the coverage for credit notes in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=creditNotes\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nThink of a credit note as a voucher issued to a customer. It is a reduction that can be applied against one or multiple invoices. A credit note can either reduce the amount owed or cancel out an invoice entirely.\n\nIn the Codat system a credit note is issued to a [customer's](https://docs.codat.io/docs/datamodel-accounting-customers) accounts receivable. \n\nIt contains details of:\n* The amount of credit remaining and its status.\n* Payment allocations against the payments type, in this case an invoice.\n* Which customers the credit notes have been issued to."
      },
      "Customer": {
        "title": "Customer",
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "defaultCurrency": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "title": "Address",
              "required": [
                "type"
              ],
              "type": "object",
              "properties": {
                "type": {
                  "title": "AddressType",
                  "enum": [
                    "Unknown",
                    "Billing",
                    "Delivery"
                  ],
                  "type": "string"
                },
                "line1": {
                  "type": "string",
                  "nullable": true
                },
                "line2": {
                  "type": "string",
                  "nullable": true
                },
                "city": {
                  "type": "string",
                  "nullable": true
                },
                "region": {
                  "type": "string",
                  "nullable": true
                },
                "country": {
                  "type": "string",
                  "nullable": true
                },
                "postalCode": {
                  "type": "string",
                  "nullable": true
                }
              },
              "additionalProperties": false
            },
            "nullable": true
          },
          "contacts": {
            "type": "array",
            "items": {
              "title": "Contact",
              "required": [
                "status"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "nullable": true
                },
                "email": {
                  "type": "string",
                  "nullable": true
                },
                "phone": {
                  "type": "array",
                  "items": {
                    "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1info/get/responses/200/content/application~1json/schema/properties/phoneNumbers/items"
                  },
                  "nullable": true
                },
                "address": {
                  "$ref": "#/components/schemas/Customer/properties/addresses/items"
                },
                "status": {
                  "$ref": "#/components/schemas/Customer/properties/status"
                },
                "modifiedDate": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                }
              },
              "additionalProperties": false
            },
            "nullable": true
          },
          "registrationNumber": {
            "type": "string",
            "nullable": true
          },
          "taxNumber": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "title": "CustomerStatus",
            "enum": [
              "Unknown",
              "Active",
              "Archived"
            ],
            "type": "string"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          },
          "supplementalData": {
            "$ref": "#/components/schemas/Bill/properties/supplementalData"
          }
        },
        "additionalProperties": false,
        "description": "> View the coverage for customers in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=customers\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nA customer is a person or organisation that buys goods or services. From the Customers endpoints, you can retrieve a [list of all the customers of a company](https://api.codat.io/swagger/index.html#/Customers/get_companies__companyId__data_customers).\n\nCustomers' data links to accounts receivable [invoices](https://docs.codat.io/docs/datamodel-accounting-invoices).\n"
      },
      "DirectCost": {
        "title": "DirectCost",
        "required": [
          "currency",
          "issueDate",
          "lineItems",
          "paymentAllocations",
          "subTotal",
          "taxAmount",
          "totalAmount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "contactRef": {
            "$ref": "#/components/schemas/Transfer/properties/contactRef"
          },
          "issueDate": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "minLength": 1,
            "type": "string"
          },
          "currencyRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lineItems": {
            "type": "array",
            "items": {
              "title": "DirectCostLineItem",
              "required": [
                "quantity",
                "unitAmount"
              ],
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "unitAmount": {
                  "type": "number",
                  "format": "double"
                },
                "quantity": {
                  "type": "number",
                  "format": "double"
                },
                "discountAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "discountPercentage": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "subTotal": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "taxAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "totalAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "accountRef": {
                  "$ref": "#/components/schemas/Payment/properties/accountRef"
                },
                "taxRateRef": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1items/get/responses/200/content/application~1json/schema/properties/results/items/properties/billItem/properties/taxRateRef"
                },
                "itemRef": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/properties/results/items/properties/lineItems/items/properties/itemRef"
                },
                "trackingCategoryRefs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transfer/properties/trackingCategoryRefs/items"
                  },
                  "nullable": true
                },
                "tracking": {
                  "title": "InvoiceableTracking",
                  "required": [
                    "recordRefs"
                  ],
                  "type": "object",
                  "properties": {
                    "recordRefs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/JournalEntry/properties/recordRef"
                      }
                    },
                    "invoiceTo": {
                      "$ref": "#/components/schemas/JournalEntry/properties/recordRef"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "paymentAllocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bill/properties/paymentAllocations/items"
            }
          },
          "subTotal": {
            "type": "number",
            "format": "double"
          },
          "taxAmount": {
            "type": "number",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          },
          "supplementalData": {
            "$ref": "#/components/schemas/Bill/properties/supplementalData"
          }
        },
        "additionalProperties": false,
        "description": "> **Language tip: ** Direct costs may also be referred to as **Spend transactions**, **Spend money transactions**, or **Payments** in various accounting platforms.\n\n> View the coverage for direct costs in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=directCosts\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nDirect costs include:\n  * Purchasing an item and paying it off at the point of the purchase\n  * Receiving cash from a refunded item if the refund is made by the supplier\n  * Withdrawing money from a bank account \n  * Writing a cheque\n\nFrom the Direct Costs endpoints, you can: \n\n  * [Get a list of all direct costs for a specific company ](https://api.codat.io/swagger/index.html#/DirectCosts/get_companies__companyId__connections__connectionId__data_directCosts)\n  * [Get a single direct cost for a specific company ](https://api.codat.io/swagger/index.html#/DirectCosts/get_companies__companyId__connections__connectionId__data_directCosts__directCostId_)\n  * [Add a new direct cost to a specific company's accounting package](https://api.codat.io/swagger/index.html#/DirectCosts/post_companies__companyId__connections__connectionId__push_directCosts)\n\nDirect costs is a child data type of [account transactions](https://docs.codat.io/docs/datamodel-accounting-account-transactions)."
      },
      "DirectIncome": {
        "title": "DirectIncome",
        "required": [
          "currency",
          "issueDate",
          "lineItems",
          "paymentAllocations",
          "subTotal",
          "taxAmount",
          "totalAmount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "contactRef": {
            "$ref": "#/components/schemas/Transfer/properties/contactRef"
          },
          "issueDate": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "minLength": 1,
            "type": "string"
          },
          "currencyRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lineItems": {
            "type": "array",
            "items": {
              "title": "DirectIncomeLineItem",
              "required": [
                "quantity",
                "unitAmount"
              ],
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "unitAmount": {
                  "type": "number",
                  "format": "double"
                },
                "quantity": {
                  "type": "number",
                  "format": "double"
                },
                "discountAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "discountPercentage": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "subTotal": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "taxAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "totalAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "accountRef": {
                  "$ref": "#/components/schemas/Payment/properties/accountRef"
                },
                "taxRateRef": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1items/get/responses/200/content/application~1json/schema/properties/results/items/properties/billItem/properties/taxRateRef"
                },
                "itemRef": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/properties/results/items/properties/lineItems/items/properties/itemRef"
                },
                "trackingCategoryRefs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transfer/properties/trackingCategoryRefs/items"
                  },
                  "nullable": true
                }
              },
              "additionalProperties": false
            }
          },
          "paymentAllocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bill/properties/paymentAllocations/items"
            }
          },
          "subTotal": {
            "type": "number",
            "format": "double"
          },
          "taxAmount": {
            "type": "number",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          },
          "supplementalData": {
            "$ref": "#/components/schemas/Bill/properties/supplementalData"
          }
        },
        "additionalProperties": false,
        "description": "> **Language tip:**  Direct incomes may also be referred to as **Receive transactions**, **Receive money transactions**, **Sales receipts**, or **Cash sales** in various accounting platforms.\n\n> View the coverage for direct incomes in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=directIncomes\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nDirect incomes include: \n\n- Selling an item directly to a contact, and receiving payment at the point of the sale.\n- Refunding an item in cash to a contact.\n- Depositing money into a bank account.\n\nFrom the Direct Incomes endpoints, you can: \n\n- [Get a list of all direct incomes for a specific company](https://api-uat.codat.io/swagger/index.html#/DirectIncomes/get_companies__companyId__connections__connectionId__data_directIncomes)\n- [Get a single direct income for a specific company and connection](https://api-uat.codat.io/swagger/index.html#/DirectIncomes/get_companies__companyId__connections__connectionId__data_directIncomes__directIncomeId_)\n- [Add a new direct income to a specific company's accounting package](https://api-uat.codat.io/swagger/index.html#/DirectIncomes/post_companies__companyId__connections__connectionId__push_directIncomes)\n\nDirect incomes is a child data type of [account transactions](https://docs.codat.io/docs/datamodel-accounting-account-transactions).\n"
      },
      "Invoice": {
        "title": "Invoice",
        "required": [
          "amountDue",
          "issueDate",
          "status",
          "totalAmount",
          "totalTaxAmount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "invoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "customerRef": {
            "title": "CustomerRef",
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "minLength": 1,
                "type": "string"
              },
              "companyName": {
                "type": "string",
                "nullable": true
              }
            },
            "additionalProperties": false
          },
          "salesOrderRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JournalEntry/properties/recordRef"
            },
            "nullable": true
          },
          "issueDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paidOnDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "currencyRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lineItems": {
            "type": "array",
            "items": {
              "title": "InvoiceLineItem",
              "required": [
                "quantity",
                "unitAmount"
              ],
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "unitAmount": {
                  "type": "number",
                  "format": "double"
                },
                "quantity": {
                  "type": "number",
                  "format": "double"
                },
                "discountAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "subTotal": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "taxAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "totalAmount": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "accountRef": {
                  "$ref": "#/components/schemas/Payment/properties/accountRef"
                },
                "discountPercentage": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "taxRateRef": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1items/get/responses/200/content/application~1json/schema/properties/results/items/properties/billItem/properties/taxRateRef"
                },
                "itemRef": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/properties/results/items/properties/lineItems/items/properties/itemRef"
                },
                "trackingCategoryRefs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transfer/properties/trackingCategoryRefs/items"
                  },
                  "nullable": true
                },
                "tracking": {
                  "title": "AccountsReceivableTracking",
                  "required": [
                    "categoryRefs",
                    "isBilledTo",
                    "isRebilledTo"
                  ],
                  "type": "object",
                  "properties": {
                    "categoryRefs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Transfer/properties/trackingCategoryRefs/items"
                      }
                    },
                    "projectRef": {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/properties/results/items/properties/lineItems/items/properties/tracking/properties/projectRef"
                    },
                    "customerRef": {
                      "$ref": "#/components/schemas/Invoice/properties/customerRef"
                    },
                    "isBilledTo": {
                      "title": "AccountsReceivableIsBilledToType",
                      "enum": [
                        "Unknown",
                        "NotApplicable",
                        "Project"
                      ],
                      "type": "string"
                    },
                    "isRebilledTo": {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1invoices/get/responses/200/content/application~1json/schema/properties/results/items/properties/lineItems/items/properties/tracking/properties/isBilledTo"
                    }
                  },
                  "additionalProperties": false
                },
                "isDirectIncome": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "nullable": true
          },
          "paymentAllocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bill/properties/paymentAllocations/items"
            },
            "nullable": true
          },
          "withholdingTax": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bill/properties/withholdingTax/items"
            },
            "nullable": true
          },
          "totalDiscount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "subTotal": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "additionalTaxAmount": {
            "type": "number",
            "format": "double"
          },
          "additionalTaxPercentage": {
            "type": "number",
            "format": "double"
          },
          "totalTaxAmount": {
            "type": "number",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "amountDue": {
            "type": "number",
            "format": "double"
          },
          "discountPercentage": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "status": {
            "title": "InvoiceStatus",
            "enum": [
              "Unknown",
              "Draft",
              "Submitted",
              "PartiallyPaid",
              "Paid",
              "Void"
            ],
            "type": "string"
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          },
          "supplementalData": {
            "$ref": "#/components/schemas/Bill/properties/supplementalData"
          }
        },
        "additionalProperties": false,
        "description": "> View the coverage for invoices in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=invoices\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nAn invoice is an itemized record of goods sold or services provided to a [customer](https://docs.codat.io/docs/datamodel-accounting-customers).\n\nIn Codat, an invoice contains details of:\n\n- The timeline of the invoice—when it was raised, marked as paid, last edited, and so on.\n- How much the invoice is for, what portion of the invoice is tax or discounts, and what currency the amounts are represented in. \n- Who the invoice has been raised to; the _customer_.\n- The breakdown of what the invoice is for; the _line items_.\n- Any [payments](https://docs.codat.io/docs/datamodel-accounting-payments) assigned to the invoice; the _payment allocations_.\n\n> **Invoices or bills?**  \n>\n> In Codat, invoices represent accounts receivable only. For accounts payable invoices, see [Bills](https://docs.codat.io/docs/datamodel-accounting-bills).\n\n> **Invoice PDF downloads**  \n>\n> You can <a className=\"external\" href=\"https://api.codat.io/swagger/index.html#/Invoices/get_companies__companyId__data_invoices__invoiceId__pdf\" target=\"_blank\">download a PDF version</a> of an invoice for supported integrations.\n> \n> The filename will be invoice-{number}.pdf."
      },
      "Item": {
        "title": "Item",
        "required": [
          "isBillItem",
          "isInvoiceItem",
          "itemStatus",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "itemStatus": {
            "title": "ItemStatus",
            "enum": [
              "Unknown",
              "Active",
              "Archived"
            ],
            "type": "string"
          },
          "type": {
            "title": "ItemType",
            "enum": [
              "Unknown",
              "Inventory",
              "NonInventory",
              "Service"
            ],
            "type": "string"
          },
          "isBillItem": {
            "type": "boolean"
          },
          "billItem": {
            "title": "BillItem",
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "nullable": true
              },
              "unitPrice": {
                "type": "number",
                "format": "double",
                "nullable": true
              },
              "accountRef": {
                "$ref": "#/components/schemas/Payment/properties/accountRef"
              },
              "taxRateRef": {
                "title": "TaxRateRef",
                "required": [
                  "id"
                ],
                "type": "object",
                "properties": {
                  "id": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true
                  },
                  "effectiveTaxRate": {
                    "type": "number",
                    "format": "double",
                    "nullable": true
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "isInvoiceItem": {
            "type": "boolean"
          },
          "invoiceItem": {
            "title": "InvoiceItem",
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "nullable": true
              },
              "unitPrice": {
                "type": "number",
                "format": "double",
                "nullable": true
              },
              "accountRef": {
                "$ref": "#/components/schemas/Payment/properties/accountRef"
              },
              "taxRateRef": {
                "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1items/get/responses/200/content/application~1json/schema/properties/results/items/properties/billItem/properties/taxRateRef"
              }
            },
            "additionalProperties": false
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          }
        },
        "additionalProperties": false,
        "description": "> View the coverage for items in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=items\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\n**Items** allow your customers to save and track details of the products and services that they buy and sell.\n"
      },
      "Journal": {
        "title": "Journal",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "journalCode": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "string",
            "nullable": true
          },
          "hasChildren": {
            "type": "boolean"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "title": "JournalStatus",
            "enum": [
              "Unknown",
              "Active",
              "Archived"
            ],
            "type": "string"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          }
        },
        "additionalProperties": false,
        "description": "> **Language tip:** For line items, or individual transactions, of a company's financial documents, refer to the [Journal entries](https://docs.codat.io/docs/datamodel-accounting-journalentries) data type\n\n> View the coverage for journals in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=journals\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nIn accounting software, journals are used to record all the financial transactions of a company. Each transaction in a journal is represented by a separate [journal entry](https://docs.codat.io/docs/datamodel-accounting-journalentries). These entries are used to create the general ledger, which is then used to create the financial statements of a business.\n\nWhen a company records all their transactions in a single journal, it can become large and difficult to maintain and track. This is why large companies often use multiple journals (also known as subjournals) to categorize and manage journal entries.\n\nSuch journals can be divided into two categories:\n\n- Special journals: journals used to record specific types of transactions; for example, a purchases journal, a sales journal, or a cash management journal.\n- General journals: journals used to record transactions that fall outside the scope of the special journals.\n\nMultiple journals or subjournals are used in the following Codat integrations:\n\n- [Sage Intacct](https://docs.codat.io/docs/accounting-sage-intacct)  (mandatory)\n- [Exact Online](https://docs.codat.io/docs/accounting-exact)  (mandatory)\n- [Oracle NetSuite](https://docs.codat.io/docs/accounting-netsuite) (optional)\n\n> When pushing journal entries to an accounting platform that doesn’t support multiple journals (multi-book accounting), the entries will be linked to the platform-generic journal. The Journals data type will only include one object.\n"
      },
      "JournalEntry": {
        "title": "JournalEntry",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "postedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "journalRef": {
            "title": "JournalRef",
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "minLength": 1,
                "type": "string"
              },
              "name": {
                "type": "string",
                "nullable": true
              }
            },
            "additionalProperties": false
          },
          "journalLines": {
            "type": "array",
            "items": {
              "title": "JournalLine",
              "required": [
                "netAmount"
              ],
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "netAmount": {
                  "type": "number",
                  "format": "double"
                },
                "currency": {
                  "type": "string",
                  "nullable": true
                },
                "accountRef": {
                  "$ref": "#/components/schemas/Payment/properties/accountRef"
                },
                "tracking": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1salesOrders/get/responses/200/content/application~1json/schema/properties/results/items/properties/lineItems/items/properties/tracking"
                }
              },
              "additionalProperties": false
            },
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "recordRef": {
            "title": "RecordRef",
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "minLength": 1,
                "type": "string"
              },
              "dataType": {
                "type": "string",
                "nullable": true
              }
            },
            "additionalProperties": false
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          },
          "supplementalData": {
            "$ref": "#/components/schemas/Bill/properties/supplementalData"
          }
        },
        "additionalProperties": false,
        "description": "> **Language tip:** For the top-level record of a company's financial transactions, refer to the [Journals](https://docs.codat.io/docs/journals) data type\n\n> View the coverage for journal entries in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=journalEntries\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nA journal entry report shows the entries made in a company's general ledger, or [chart of accounts](https://api.codat.io/swagger/index.html#/Accounts/get_companies__companyId__data_accounts), when transactions are approved. The journal line items for each journal entry should balance.\n\nA journal entry line item is a single transaction line on the journal entry. For example: \n\n- When a journal entry is recording a receipt of cash, the credit to accounts receivable and the debit to cash are separate line items. \n- When a company needs to recognise revenue from an annual contract on a monthly basis, on receipt of cash for month one, they make a debit to deferred income and a credit to revenue.\n\nIn Codat a journal entry contains details of:\n\n- The date on which the entry was created and posted.\n- Itemised lines, including amounts and currency.\n- A reference to the associated accounts.\n- A reference to the underlying record. For example, the invoice, bill, or other data type that triggered the posting of the journal entry to the general ledger. \n\n> **Pushing journal entries **  \n> Codat only supports journal entries in the base currency of the company that are pushed into accounts denominated in the same base currency."
      },
      "Payment": {
        "title": "Payment",
        "required": [
          "date"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "customerRef": {
            "$ref": "#/components/schemas/Invoice/properties/customerRef"
          },
          "accountRef": {
            "title": "AccountRef",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "nullable": true
              },
              "name": {
                "type": "string",
                "nullable": true
              }
            },
            "additionalProperties": false
          },
          "paymentMethodRef": {
            "title": "PaymentMethodRef",
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "minLength": 1,
                "type": "string"
              },
              "name": {
                "type": "string",
                "nullable": true
              }
            },
            "additionalProperties": false
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "currencyRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "lines": {
            "type": "array",
            "items": {
              "title": "PaymentLine",
              "required": [
                "amount"
              ],
              "type": "object",
              "properties": {
                "amount": {
                  "type": "number",
                  "format": "double"
                },
                "links": {
                  "type": "array",
                  "items": {
                    "title": "PaymentLineLink",
                    "required": [
                      "type"
                    ],
                    "type": "object",
                    "properties": {
                      "type": {
                        "title": "PaymentLinkType",
                        "enum": [
                          "Unknown",
                          "Unlinked",
                          "Invoice",
                          "CreditNote",
                          "Other",
                          "Refund",
                          "Payment",
                          "PaymentOnAccount",
                          "ManualJournal",
                          "Discount"
                        ],
                        "type": "string"
                      },
                      "id": {
                        "type": "string",
                        "nullable": true
                      },
                      "amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                      },
                      "currencyRate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                      }
                    },
                    "additionalProperties": false
                  },
                  "nullable": true
                },
                "allocatedOnDate": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                }
              },
              "additionalProperties": false
            },
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          },
          "supplementalData": {
            "$ref": "#/components/schemas/Bill/properties/supplementalData"
          }
        },
        "additionalProperties": false,
        "description": "> View the coverage for payments in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=payments\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nPayments include all accounts receivable transaction data. This includes [invoices](https://docs.codat.io/docs/datamodel-accounting-invoices) and [credit notes](https://docs.codat.io/docs/datamodel-accounting-creditnotes).\n\nA payment in Codat usually represents an allocation of money within any customer accounts receivable account. This includes, but is not strictly limited to: \n\n- A payment made against an invoice, like a credit card, cheque, or cash payment.\n- An allocation of a customer's credit note, either to an invoice or maybe a refund.\n- A payment made directly to that accounts receivable account. This might be an overpayment or a prepayment. It might also be the refund of a payment made directly to an accounts receivable account.\n\nDepending on the payments allowed by the underlying accounting package, some payment types may be combined. Please see the [Example data](#section-example-data) below for more details.\n\nIn Codat, a payment contains details of:\n\n- When the payment was recorded in the accounting system.\n- How much it is for and in what currency that amount is in.\n- Who the payment was _paid by_ – the _customer_.\n- The payment method used.\n- The breakdown of the types of payments – the _line items_.\n\nPayments is a child data type of [account transactions](https://docs.codat.io/docs/datamodel-accounting-account-transactions).\n\n:::note Payments or bill payments?\nIn Codat, payments represent accounts receivable only. For accounts payable, see [bill payments](https://docs.codat.io/docs/datamodel-accounting-billpayments). These include [bills](https://docs.codat.io/docs/datamodel-accounting-bills) and credit notes against bills.\n:::"
      },
      "PaymentMethod": {
        "title": "PaymentMethod",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "title": "PaymentMethodType",
            "enum": [
              "Unknown",
              "Cash",
              "Check",
              "CreditCard",
              "DebitCard",
              "BankTransfer",
              "Other"
            ],
            "type": "string"
          },
          "status": {
            "title": "PaymentMethodStatus",
            "enum": [
              "Unknown",
              "Active",
              "Archived"
            ],
            "type": "string"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          }
        },
        "additionalProperties": false,
        "description": "> View the coverage for payment methods in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=paymentMethods\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nA Payment Method represents the payment method(s) used to pay a Bill. Payment Methods are referenced on [Bill Payments](https://docs.codat.io/docs/datamodel-accounting-billpayments) and [Payments](https://docs.codat.io/docs/datamodel-accounting-payments).\n\nFrom the Payment Methods endpoints you can retrieve:\n\n- A list of all the Payment Methods used by a company: `GET/companies/{companyId}/data/paymentMethods`.\n- The details of an individual Payment Method:  \n  `GET /companies/{companyId}/data/paymentMethods/{paymentMethodId}`."
      },
      "ProfitAndLossReport": {
        "title": "ProfitAndLossReport",
        "required": [
          "grossProfit",
          "netOperatingProfit",
          "netOtherIncome",
          "netProfit"
        ],
        "type": "object",
        "properties": {
          "fromDate": {
            "type": "string",
            "format": "date-time"
          },
          "toDate": {
            "type": "string",
            "format": "date-time"
          },
          "income": {
            "$ref": "#/components/schemas/BalanceSheet/properties/assets"
          },
          "costOfSales": {
            "$ref": "#/components/schemas/BalanceSheet/properties/assets"
          },
          "grossProfit": {
            "type": "number",
            "format": "double"
          },
          "expenses": {
            "$ref": "#/components/schemas/BalanceSheet/properties/assets"
          },
          "netOperatingProfit": {
            "type": "number",
            "format": "double"
          },
          "otherExpenses": {
            "$ref": "#/components/schemas/BalanceSheet/properties/assets"
          },
          "otherIncome": {
            "$ref": "#/components/schemas/BalanceSheet/properties/assets"
          },
          "netOtherIncome": {
            "type": "number",
            "format": "double"
          },
          "netProfit": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "> **Language tip:** Profit and loss statement is also referred to as **income statement** under US GAAP (Generally Accepted Accounting Principles).\n\n> View the coverage for profit and loss in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=profitAndLoss\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nThe purpose of a profit and loss report is to present the financial performance of a company over a specified time period.\n\nA profit and loss report shows a company's total income and expenses for a specified period of time and whether a profit or loss has been made.\n\n> **Profit and loss or balance sheet?**  \n> Profit and loss reports summarise the total revenue, expenses, and profit or loss over a specified time period. A balance sheet report presents all assets, liability, and equity for a given date.\n\n\n**Structure of this report**  \nThis report will reflect the structure and line descriptions that the business has set in their own accounting platform.\n\n**History**  \nBy default, Codat pulls (up to) 24 months of profit and loss history for a company. You can adjust this to fetch more history, where available, by updating the `monthsToSync` value for `profitAndLoss` on the [data type settings endpoint](https://docs.codat.io/reference/post_profile-syncsettings).\n\n**Want to pull this in a standardised structure?**  \nOur [Enhanced Financials](https://docs.codat.io/docs/assess-enhanced-financials) endpoints provide the same report under standardized headings, allowing you to pull it in the same format for all of your business customers."
      },
      "PurchaseOrder": {
        "title": "PurchaseOrder",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "purchaseOrderNumber": {
            "type": "string",
            "nullable": true
          },
          "issueDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expectedDeliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "shipTo": {
            "$ref": "#/components/schemas/SalesOrder/properties/shipTo"
          },
          "supplierRef": {
            "$ref": "#/components/schemas/Bill/properties/supplierRef"
          },
          "status": {
            "title": "PurchaseOrderStatus",
            "enum": [
              "Unknown",
              "Draft",
              "Open",
              "Closed",
              "Void"
            ],
            "type": "string"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "currencyRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lineItems": {
            "type": "array",
            "items": {
              "title": "PurchaseOrderLineItem",
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "accountRef": {
                  "$ref": "#/components/schemas/Payment/properties/accountRef"
                },
                "itemRef": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/properties/results/items/properties/lineItems/items/properties/itemRef"
                },
                "trackingCategoryRefs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transfer/properties/trackingCategoryRefs/items"
                  },
                  "nullable": true
                },
                "unitAmount": {
                  "type": "number",
                  "format": "double"
                },
                "quantity": {
                  "type": "number",
                  "format": "double"
                },
                "discountAmount": {
                  "type": "number",
                  "format": "double"
                },
                "discountPercentage": {
                  "type": "number",
                  "format": "double"
                },
                "subTotal": {
                  "type": "number",
                  "format": "double"
                },
                "taxAmount": {
                  "type": "number",
                  "format": "double"
                },
                "taxRateRef": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1items/get/responses/200/content/application~1json/schema/properties/results/items/properties/billItem/properties/taxRateRef"
                },
                "totalAmount": {
                  "type": "number",
                  "format": "double"
                }
              },
              "additionalProperties": false
            },
            "nullable": true
          },
          "totalDiscount": {
            "type": "number",
            "format": "double"
          },
          "subTotal": {
            "type": "number",
            "format": "double"
          },
          "totalTaxAmount": {
            "type": "number",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          }
        },
        "additionalProperties": false,
        "description": "> View the coverage for purchase orders in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=purchaseOrders\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nPurchase orders represent a business's intent to purchase goods or services from a supplier and normally include information such as expected delivery dates and shipping details.  \n\nThis information can be used to provide visibility on a business's expected payables and to track a purchase through the full procurement process."
      },
      "SalesOrder": {
        "title": "SalesOrder",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "salesOrderNumber": {
            "type": "string",
            "nullable": true
          },
          "customerPurchaseOrderNumber": {
            "type": "string",
            "nullable": true
          },
          "issueDate": {
            "type": "string",
            "format": "date-time"
          },
          "expectedDeliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "shipTo": {
            "title": "ShipTo",
            "type": "object",
            "properties": {
              "contact": {
                "title": "ShipToContact",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "nullable": true
                  },
                  "email": {
                    "type": "string",
                    "nullable": true
                  },
                  "phone": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "additionalProperties": false
              },
              "address": {
                "$ref": "#/components/schemas/Customer/properties/addresses/items"
              }
            },
            "additionalProperties": false
          },
          "customerRef": {
            "$ref": "#/components/schemas/Invoice/properties/customerRef"
          },
          "status": {
            "title": "SalesOrderStatus",
            "enum": [
              "Unknown",
              "Draft",
              "Open",
              "Closed",
              "Void"
            ],
            "type": "string"
          },
          "invoicingStatus": {
            "title": "InvoicingStatus",
            "enum": [
              "Unknown",
              "PartiallyInvoiced",
              "Invoiced",
              "NotInvoiced"
            ],
            "type": "string"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "currencyRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lineItems": {
            "type": "array",
            "items": {
              "title": "SalesOrderLineItem",
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "accountRef": {
                  "$ref": "#/components/schemas/Payment/properties/accountRef"
                },
                "itemRef": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1bills/get/responses/200/content/application~1json/schema/properties/results/items/properties/lineItems/items/properties/itemRef"
                },
                "tracking": {
                  "title": "Tracking",
                  "type": "object",
                  "properties": {
                    "recordRefs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/JournalEntry/properties/recordRef"
                      },
                      "nullable": true
                    }
                  },
                  "additionalProperties": false
                },
                "unitAmount": {
                  "type": "number",
                  "format": "double"
                },
                "quantity": {
                  "type": "number",
                  "format": "double"
                },
                "discountAmount": {
                  "type": "number",
                  "format": "double"
                },
                "discountPercentage": {
                  "type": "number",
                  "format": "double"
                },
                "subTotal": {
                  "type": "number",
                  "format": "double"
                },
                "taxAmount": {
                  "type": "number",
                  "format": "double"
                },
                "taxRateRef": {
                  "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1items/get/responses/200/content/application~1json/schema/properties/results/items/properties/billItem/properties/taxRateRef"
                },
                "totalAmount": {
                  "type": "number",
                  "format": "double"
                }
              },
              "additionalProperties": false
            },
            "nullable": true
          },
          "totalDiscount": {
            "type": "number",
            "format": "double"
          },
          "subTotal": {
            "type": "number",
            "format": "double"
          },
          "totalTaxAmount": {
            "type": "number",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          }
        },
        "additionalProperties": false,
        "description": "> View the coverage for sales orders in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=salesOrders\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nA sales order represents a customer's intention to purchase goods or services from a seller and usually includes information such as the expected delivery date and shipping details. This information can be used to provide visibility on a business's expected receivables and to track sales through the full procurement process.\n\nA sales order is typically converted to an [invoice](https://docs.codat.io/docs/datamodel-accounting-invoices) after approval."
      },
      "Supplier": {
        "title": "Supplier",
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "supplierName": {
            "type": "string",
            "nullable": true
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Customer/properties/addresses/items"
            },
            "nullable": true
          },
          "registrationNumber": {
            "type": "string",
            "nullable": true
          },
          "taxNumber": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "title": "SupplierStatus",
            "enum": [
              "Unknown",
              "Active",
              "Archived"
            ],
            "type": "string"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "defaultCurrency": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          },
          "supplementalData": {
            "$ref": "#/components/schemas/Bill/properties/supplementalData"
          }
        },
        "additionalProperties": false,
        "description": "> View the coverage for suppliers in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=suppliers\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nFrom the **Suppliers** endpoints, you can retrieve a list of [all the suppliers for a company](https://api.codat.io/swagger/index.html#/Suppliers/get_companies__companyId__data_suppliers). Suppliers' data links to accounts payable [bills](https://docs.codat.io/docs/datamodel-accounting-bills)."
      },
      "TaxRate": {
        "title": "TaxRate",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "title": "TaxRateStatus",
            "enum": [
              "Unknown",
              "Active",
              "Archived"
            ],
            "type": "string"
          },
          "effectiveTaxRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalTaxRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "components": {
            "type": "array",
            "items": {
              "title": "TaxRateComponent",
              "required": [
                "isCompound"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "nullable": true
                },
                "rate": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                },
                "isCompound": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "validDatatypeLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account/properties/validDatatypeLinks/items"
            },
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          }
        },
        "additionalProperties": false,
        "description": "> View the coverage for tax rates in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=taxRates\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nAccounting systems typically store a set of taxes and associated rates within the accounting package. This means that users don't have to look up or remember the rates for each type of tax. For example: Applying the tax \"UK sales VAT\" to line items of an invoice adds the correct rate of 20%. \n\n### Tax components\n\nIn some cases, a tax is made up of multiple sub taxes, often called _components_ of the tax.  For example: You may have an item that is charged a tax rate called \"City import tax (8%)\" that has two components: \n\n- A city tax of 5%. \n- An import tax of 3%.\n\n> **Effective tax rates**  \n> Where there are multiple components of a tax, each component may be calculated on the original amount and added together. Alternatively, one tax may be calculated on the sub-total of the original amount plus another tax, which is referred to as _compounding_. When there is compounding, the effective tax rate is the rate that, if applied to the original amount, would result in the total amount of tax with compounding.  \n>\n> **Example:**  \n> A tax has two components. Both components have a rate of 10%, and one component is compound. In this case, there is a total tax rate of 20% but an effective tax rate of 21%. [Also see _Compound tax example_](#section-compound-tax-example).\n> - For QuickBooks Online, Codat doesn't use compound rates. Instead, the calculated effective tax rate for each component is shown. This means that the effective and total rates are the same because the total tax rate is a sum of the component rates."
      },
      "Transfer": {
        "title": "Transfer",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "contactRef": {
            "title": "ContactRef",
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "minLength": 1,
                "type": "string"
              },
              "dataType": {
                "type": "string",
                "nullable": true
              }
            },
            "additionalProperties": false
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "from": {
            "title": "FromAccount",
            "type": "object",
            "properties": {
              "accountRef": {
                "$ref": "#/components/schemas/JournalEntry/properties/recordRef"
              },
              "currency": {
                "type": "string",
                "nullable": true
              },
              "amount": {
                "type": "number",
                "format": "double"
              }
            },
            "additionalProperties": false
          },
          "to": {
            "title": "ToAccount",
            "type": "object",
            "properties": {
              "accountRef": {
                "$ref": "#/components/schemas/JournalEntry/properties/recordRef"
              },
              "currency": {
                "type": "string",
                "nullable": true
              },
              "amount": {
                "type": "number",
                "format": "double"
              }
            },
            "additionalProperties": false
          },
          "trackingCategoryRefs": {
            "type": "array",
            "items": {
              "title": "TrackingCategoryRef",
              "required": [
                "id"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "minLength": 1,
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "nullable": true
                }
              },
              "additionalProperties": false
            },
            "nullable": true
          },
          "depositedRecordRefs": {
            "type": "array",
            "items": {
              "title": "recordRef",
              "x-stoplight": {
                "id": "4b2a84ad58afb"
              },
              "type": "object",
              "properties": {
                "id": {
                  "description": "The unique identitifer of the record being referenced",
                  "type": "string",
                  "examples": [
                    "13d946f0-c5d5-42bc-b092-97ece17923ab",
                    "9wg4lep4ush5cxs79pl8sozmsndbaukll3ind4g7buqbm1h2",
                    7110701885,
                    "EILBDVJVNUAGVKRQ"
                  ]
                },
                "type": {
                  "description": "The type of record being referenced.",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ],
              "description": ""
            },
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sourceModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Bill/properties/metadata"
          },
          "supplementalData": {
            "$ref": "#/components/schemas/Bill/properties/supplementalData"
          }
        },
        "additionalProperties": false,
        "description": "> View the coverage for transfers in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=transfers\" target=\"_blank\">Data coverage explorer</a>.\n\nFrom the **Transfers** endpoints, you can:\n\n- [Retrieve a list of all transfers for a specified company](https://api.codat.io/swagger/index.html#/Transfers/get_companies__companyId__connections__connectionId__data_transfers)\n- [Retrieve a single transfer for a specified company](https://api.codat.io/swagger/index.html#/Transfers/get_companies__companyId__connections__connectionId__data_transfers__transferId_) \n- [Add a new transfer for a specified company](https://api.codat.io/swagger/index.html#/Transfers/post_companies__companyId__connections__connectionId__push_transfers) \n\n**Transfers** is a child data type of [account transactions](https://docs.codat.io/docs/datamodel-accounting-account-transactions)."
      }
    },
    "parameters": {
      "accountId": {
        "name": "accountId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "8a210b68-6988-11ed-a1eb-0242ac120002"
        },
        "description": "Unique identifier for an account"
      },
      "bankAccountId": {
        "name": "bankAccountId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "8a210b68-6988-11ed-a1eb-0242ac120002"
        },
        "description": "Unique identifier for a bank account"
      },
      "timeoutInMinutes": {
        "name": "timeoutInMinutes",
        "in": "query",
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "forceUpdate": {
        "name": "forceUpdate",
        "in": "query",
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "invoiceId": {
        "name": "invoiceId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "8a210b68-6988-11ed-a1eb-0242ac120002"
        },
        "description": "Unique identifier for an invoice"
      },
      "attachmentId": {
        "name": "attachmentId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "8a210b68-6988-11ed-a1eb-0242ac120002"
        },
        "description": "Unique identifier for an attachment"
      },
      "supplierId": {
        "name": "supplierId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "example": "8a210b68-6988-11ed-a1eb-0242ac120002"
        },
        "description": "Unique identifier for a supplier"
      },
      "allowSyncOnPushComplete": {
        "name": "allowSyncOnPushComplete",
        "in": "query",
        "schema": {
          "type": "boolean",
          "default": true
        }
      },
      "billId": {
        "name": "billId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "8a210b68-6988-11ed-a1eb-0242ac120002"
        },
        "description": "Unique identifier for a bill"
      },
      "directCostId": {
        "name": "directCostId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "8a210b68-6988-11ed-a1eb-0242ac120002"
        },
        "description": "Unique identifier for a direct cost"
      },
      "directIncomeId": {
        "name": "directIncomeId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "8a210b68-6988-11ed-a1eb-0242ac120002"
        },
        "description": "Unique identifier for a direct income"
      }
    },
    "securitySchemes": {
      "API_Key": {
        "type": "apiKey",
        "description": "The word \"Basic\" followed by a space and your API Key, base64 encoded, which can be found [here](https://app.codat.io/#/profile)",
        "name": "Your Base 64 encoded API Key",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "API_Key": []
    }
  ]
}
