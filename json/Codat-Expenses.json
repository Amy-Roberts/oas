{
  "openapi": "3.0.1",
  "x-stoplight": {
    "id": "1pm6xajcwr4a0"
  },
  "info": {
    "title": "Codat Expense API",
    "version": "prealpha",
    "contact": {
      "name": "Codat",
      "url": "https://www.codat.io/",
      "email": "expenses@codat.io"
    },
    "description": "The API for Sync for Expenses.\nSync for Expenses is an API and a set of supporting tools. It has been built to enable corporate card and expense management platforms to provide high-quality integrations with multiple accounting platforms through a standardized API.\n\n[Read more...](https://codat-docs.vercel.app/sync-for-expenses/overview)",
    "termsOfService": "https://www.codat.io/legals/"
  },
  "tags": [
    {
      "name": "Configuration",
      "description": "Companies sync configuration."
    },
    {
      "name": "Mapping Options",
      "description": "Mapping options for a companies expenses."
    },
    {
      "name": "Sync",
      "description": "Triggering a new sync of expenses to accounting software."
    },
    {
      "name": "Sync Status",
      "description": "Check the status of ongoing or previous expense syncs."
    },
    {
      "name": "Expenses",
      "description": "Create expense datasets and upload receipts."
    },
    {
      "name": "Transaction Status",
      "description": "Retrieve the status of transactions within a sync."
    }
  ],
  "servers": [
    {
      "url": "https://expensesync.codat.io"
    }
  ],
  "paths": {
    "/companies/{companyId}/config": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "unique identifer for company"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyConfigResourceRepresentation"
                },
                "examples": {}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyConfigResourceRepresentation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyConfigResourceRepresentation"
                }
              }
            }
          }
        },
        "summary": "Get Company Configuration",
        "description": "Gets a companies expense sync configuration",
        "operationId": "get-company-configuration"
      },
      "post": {
        "tags": [
          "Configuration"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "unique identifer for company"
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyConfigResourceRepresentation"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyConfigResourceRepresentation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyConfigResourceRepresentation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyConfigResourceRepresentation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyConfigResourceRepresentation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyConfigResourceRepresentation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyConfigResourceRepresentation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodatErrorMessage"
                }
              }
            }
          }
        },
        "summary": "Set Company Configuration",
        "description": "Sets a companies expense sync configuration",
        "operationId": "save-company-configuration"
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "companyId",
          "in": "path",
          "description": "Unique identifier for a company",
          "required": true
        }
      ]
    },
    "/companies/{companyId}/mappingoptions": {
      "get": {
        "tags": [
          "Mapping Options"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "unique identifer for company"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MappingOptions"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MappingOptions"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MappingOptions"
                }
              }
            }
          }
        },
        "description": "Gets the expense mapping options for a companies accounting software",
        "summary": "Mapping Options",
        "operationId": "get-mapping-options"
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "companyId",
          "in": "path",
          "required": true,
          "description": "Unique identifier for a company"
        }
      ]
    },
    "/companies/{companyId}/syncs": {
      "post": {
        "tags": [
          "Sync"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "unique identifer for company"
          }
        ],
        "summary": "Initiate Sync",
        "description": "initiate sync of pending transactions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "datasetIds": {
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 100,
                    "items": {
                      "type": "string",
                      "format": "uuid",
                      "example": "fd4cc60e-8666-4443-8fad-12c56d7420ee",
                      "writeOnly": true
                    }
                  }
                },
                "required": [
                  "datasetIds"
                ]
              },
              "examples": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "Example 1": {
                      "syncId": "0d5fd262-35af-4a1a-bdf2-c6b7ed2988fe"
                    }
                  },
                  "properties": {
                    "syncId": {
                      "type": "string",
                      "description": "Unique Sync Id",
                      "format": "uuid",
                      "example": "6686f945-4a8b-4f16-8edc-1c4d87c25d82"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "intiate-sync"
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "companyId",
          "in": "path",
          "required": true,
          "description": "Unique identifier for a company"
        }
      ]
    },
    "/companies/{companyId}/syncs/lastSuccessful/status": {
      "get": {
        "tags": [
          "Sync Status"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "unique identifer for company"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySyncStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySyncStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySyncStatus"
                }
              }
            }
          }
        },
        "description": "Gets the status of the last successfull sync",
        "summary": "Last successful sync",
        "operationId": "get-last-successful-sync"
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "companyId",
          "in": "path",
          "required": true,
          "description": "Unique identifier for a company"
        }
      ]
    },
    "/companies/{companyId}/syncs/latest/status": {
      "get": {
        "tags": [
          "Sync Status"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "unique identifer for company"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySyncStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySyncStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySyncStatus"
                }
              }
            }
          }
        },
        "description": "Gets the latest sync status",
        "summary": "Latest sync status",
        "operationId": "get-latest-sync"
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "companyId",
          "in": "path",
          "required": true,
          "description": "Unique identifier for a company"
        }
      ]
    },
    "/companies/{companyId}/syncs/list/status": {
      "get": {
        "tags": [
          "Sync Status"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "unique identifer for company"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySyncStatus"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySyncStatus"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySyncStatus"
                  }
                }
              }
            }
          }
        },
        "summary": "List sync statuses",
        "description": "Gets a list of sync statuses",
        "operationId": "list-syncs"
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "companyId",
          "in": "path",
          "required": true,
          "description": "Unique identifier for a company"
        }
      ]
    },
    "/companies/{companyId}/syncs/{syncId}/status": {
      "get": {
        "tags": [
          "Sync Status"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "unique identifer for company"
          },
          {
            "name": "syncId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifier for sync"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySyncStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySyncStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySyncStatus"
                }
              }
            }
          }
        },
        "summary": "Get Sync Status",
        "description": "Get the sync status for a specified sync",
        "operationId": "get-sync-by-id"
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "companyId",
          "in": "path",
          "required": true,
          "description": "Unique identifier for a company"
        },
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "syncId",
          "in": "path",
          "required": true,
          "description": "Unique identifier for a sync"
        }
      ]
    },
    "/companies/{companyId}/syncs/{syncId}/transactions": {
      "get": {
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifer for company"
          },
          {
            "name": "syncId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifer for sync"
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionMetadataPagedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionMetadataPagedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionMetadataPagedResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Transaction Status"
        ],
        "summary": "Get Sync Transactions",
        "description": "Get's the transactions and status for a sync",
        "operationId": "get-sync-transactions"
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "companyId",
          "in": "path",
          "required": true,
          "description": "Unique identifier for a company"
        },
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "syncId",
          "in": "path",
          "required": true,
          "description": "Unique identifier for a sync"
        }
      ]
    },
    "/companies/{companyId}/syncs/{syncId}/transactions/{TransactionId}": {
      "get": {
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifer for a company"
          },
          {
            "name": "syncId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifer for sync"
          },
          {
            "name": "TransactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Unique identifer for transaction"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionMetadata"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionMetadata"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionMetadata"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Transaction Status"
        ],
        "summary": "Get Sync Transaction",
        "description": "Gets the status of a transaction for a sync",
        "operationId": "get-sync-transaction"
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "companyId",
          "in": "path",
          "required": true,
          "description": "Unique identifier for a company"
        },
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "syncId",
          "in": "path",
          "required": true,
          "description": "Unique identifier for a sync"
        },
        {
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "d32ceabf-67e0-4dce-b48d-ff391f17ca0b"
          },
          "name": "TransactionId",
          "in": "path",
          "description": "Your unique identifier for a transaction",
          "required": true
        }
      ]
    },
    "/companies/{companyId}/data/expense-transactions": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "companyId",
          "in": "path",
          "required": true,
          "description": "Unique identifier for a company"
        }
      ],
      "post": {
        "summary": "Create expense-transactions",
        "operationId": "create-expense-dataset",
        "description": "Create an expense transaction",
        "tags": [
          "Expenses"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "x-examples": {
                    "Example 1": {
                      "datasetId": "cd937d46-8e41-43a9-9477-a79158ffd98a"
                    }
                  },
                  "properties": {
                    "datasetId": {
                      "type": "string",
                      "example": "cd937d46-8e41-43a9-9477-a79158ffd98a",
                      "format": "uuid",
                      "description": "Unique id of dataset created"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 50,
                    "items": {
                      "$ref": "#/components/schemas/ExpenseReconciliation"
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "items": [
                      {
                        "id": "08ca1f02-0374-11ed-b939-0242ac120002",
                        "type": "payment",
                        "issueDate": "2021-05-21T00:00:00+00:00",
                        "currency": "GBP",
                        "currencyRate": 1.18,
                        "merchantName": "Amazon UK",
                        "lines": [
                          {
                            "netAmount": 110.42,
                            "taxAmount": 14.43,
                            "taxRateRef": {
                              "id": "08ca1c6e-0374-11ed-b939-0242ac120002"
                            },
                            "accountRef": {
                              "id": "08ca1c6e-0374-11ed-b939-0242ac120002"
                            },
                            "trackingRefs": [
                              {
                                "id": "08ca1c6e-0374-11ed-b939-0242ac120002"
                              }
                            ]
                          }
                        ],
                        "notes": "string"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/syncs/{syncId}/transactions/{transactionId}/attachments": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "companyId",
          "in": "path",
          "required": true,
          "description": "Unique identifier for a company"
        },
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "transactionId",
          "in": "path",
          "required": true,
          "description": "Your unique identifier for a transaction"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "syncId",
          "in": "path",
          "required": true,
          "description": "The unique identifier for the sync"
        }
      ],
      "post": {
        "summary": "Upload Attachment",
        "operationId": "upload-attachment",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/attachment"
                }
              }
            }
          }
        },
        "tags": [
          "Expenses"
        ],
        "description": "Creates an attachment in the accounting software against the given transactionId"
      }
    }
  },
  "components": {
    "schemas": {
      "AccountMappingInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of account."
          },
          "name": {
            "type": "string",
            "description": "Name of the account as it appears in the companies accounting software.",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "Currency of the account.",
            "nullable": true
          },
          "accountType": {
            "type": "string",
            "description": "Type of the account.",
            "nullable": true
          },
          "validTransactionTypes": {
            "type": "array",
            "description": "Supported transaction types for the account.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CompanySyncStatus": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "companyId": {
            "type": "string",
            "description": "Unique identifier for company."
          },
          "syncId": {
            "type": "string",
            "description": "Unique identifier of the sync.",
            "nullable": true
          },
          "syncStatusCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code of the sync."
          },
          "syncStatus": {
            "type": "string",
            "description": "Text status of the sync.",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message of the sync.",
            "nullable": true
          },
          "syncExceptionMessage": {
            "type": "string",
            "description": "Exception message of the sync.",
            "nullable": true
          },
          "syncUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Datetime of the sync.",
            "nullable": true
          },
          "dataPushed": {
            "type": "boolean",
            "description": "Boolean of whether the sync resulted in data being pushed."
          }
        }
      },
      "MappingOptions": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "expenseProvider": {
            "type": "string",
            "description": "Name of the expense integration.",
            "nullable": true
          },
          "accounts": {
            "type": "array",
            "description": "Array of available accounts for mapping.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AccountMappingInfo"
            }
          },
          "trackingCategories": {
            "type": "array",
            "description": "Array of available tracking categories for mapping.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TrackingCategoryMappingInfo"
            }
          },
          "taxRates": {
            "type": "array",
            "description": "Array of available tax rates for mapping.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TaxRateMappingInfo"
            }
          }
        }
      },
      "TaxRateMappingInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of tax rate.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the tax rate in the accounting platform.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Code for the tax rate from the accounting platform.",
            "nullable": true
          },
          "effectiveTaxRate": {
            "type": "number",
            "format": "double",
            "description": "Effective tax rate."
          },
          "totalTaxRate": {
            "type": "number",
            "format": "double",
            "description": "Total (not compounded) sum of the components of a tax rate."
          },
          "validTransactionTypes": {
            "type": "array",
            "description": "Supported transaction types for the account.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TrackingCategoryMappingInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the tracking category.",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "description": "Datetime when the tracking category was last modified.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the tracking category as it appears in the accounting software.",
            "nullable": true
          },
          "hasChildren": {
            "type": "boolean",
            "description": "Boolean of whether the tracking category has child categories."
          },
          "parentId": {
            "type": "string",
            "description": "Id of the parent tracking category",
            "example": "833d0b9a-21ef-46d2-ab7d-e6866af0a921"
          }
        }
      },
      "TransactionMetadata": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "Your unique idenfier of the transaction.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status of the transaction.",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Metadata such as validation errors or the resulting record created in the accounting software.",
            "nullable": true
          },
          "integrationType": {
            "type": "string",
            "description": "Type of transaction that has been processed e.g. Expense or Bank Feed.",
            "nullable": true
          }
        }
      },
      "TransactionMetadataPagedResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "results": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TransactionMetadata"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32",
            "description": "Page of current request"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "description": "Page size of current request."
          },
          "totalResults": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of transactions."
          },
          "links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/HalLink"
            },
            "nullable": true
          }
        },
        "required": [
          "pageNumber",
          "pageSize",
          "totalResults"
        ]
      },
      "ExpenseReconciliation": {
        "type": "object",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "string",
            "example": "08ca1f02-0374-11ed-b939-0242ac120002",
            "format": "uuid",
            "description": "Your unique idenfier for the transaction."
          },
          "type": {
            "type": "string",
            "enum": [
              "payment",
              "refund",
              "reward",
              "chargeback",
              "adjustment",
              "transfer"
            ],
            "example": "payment",
            "description": "The type of transaction."
          },
          "issueDate": {
            "type": "string",
            "format": "date-time",
            "example": "2021-05-21T00:00:00+00:00",
            "description": "Date of the transaction was recorded."
          },
          "currency": {
            "type": "string",
            "example": "GBP",
            "description": "Currency the transaction was recorded in."
          },
          "currencyRate": {
            "type": "number",
            "example": 1.18,
            "description": "Conversion rate between the currency of the transaction and the base currency of the company."
          },
          "merchantName": {
            "type": "string",
            "example": "Amazon UK",
            "description": "Name of the merchant where the purchase took place"
          },
          "lines": {
            "type": "array",
            "description": "Array of transaction lines.",
            "items": {
              "$ref": "#/components/schemas/ExpenseReconciliationLines"
            }
          },
          "notes": {
            "type": "string",
            "description": "Any private, company notes about the transaction."
          }
        },
        "required": [
          "id",
          "type",
          "issueDate",
          "currency"
        ]
      },
      "RecordRef": {
        "type": "object",
        "x-examples": {},
        "title": "RecordRef",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "08ca1c6e-0374-11ed-b939-0242ac120002",
            "description": "identifier of linked reference from mapping options."
          }
        },
        "required": [
          "id"
        ]
      },
      "ExpenseReconciliationLines": {
        "type": "object",
        "x-examples": {},
        "properties": {
          "netAmount": {
            "type": "number",
            "example": 110.42,
            "description": "Amount of the line, exclusive of tax."
          },
          "taxAmount": {
            "type": "number",
            "example": 14.43,
            "description": "Amount of tax for the line."
          },
          "taxRateRef": {
            "$ref": "#/components/schemas/RecordRef"
          },
          "accountRef": {
            "$ref": "#/components/schemas/RecordRef"
          },
          "trackingRefs": {
            "type": "array",
            "minItems": 1,
            "maxItems": 10,
            "items": {
              "$ref": "#/components/schemas/RecordRef"
            }
          }
        },
        "required": [
          "netAmount",
          "taxAmount",
          "taxRateRef",
          "accountRef"
        ]
      },
      "attachment": {
        "type": "object",
        "x-examples": {
          "Example 1": {
            "companyId": "bf1e0242-5b7a-418b-a307-9e09dbf9f39a",
            "id": "1400000000122699154",
            "transactionId": "f8f00edd-ddb0-4ca5-b36b-8f932e6b5160"
          }
        },
        "properties": {
          "companyId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique Id of Company in Codat"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of attachment"
          },
          "transactionId": {
            "type": "string",
            "description": "Unique identifier of transaction"
          }
        }
      },
      "CompanyConfigResourceRepresentation": {
        "type": "object",
        "x-examples": {
          "Example 1": {
            "bankAccount": {
              "id": "89"
            },
            "supplier": {
              "id": "124"
            },
            "customer": {
              "id": "140"
            }
          }
        },
        "properties": {
          "bankAccount": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The id of the account from which purchases are made"
              }
            }
          },
          "supplier": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "id of the supplier for all purchases to be associated to"
              }
            }
          },
          "customer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "id of the customer for all income related activities to be associated to."
              }
            }
          }
        }
      },
      "CodatErrorMessage": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer"
          },
          "service": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "correlationId": {
            "type": "string"
          },
          "validation": {
            "type": "object",
            "properties": {
              "hasErrors": {
                "type": "boolean"
              },
              "hasWarnings": {
                "type": "boolean"
              },
              "hasInternals": {
                "type": "boolean"
              },
              "errors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "itemId": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "validatorName": {
                      "type": "string"
                    },
                    "ruleId": {
                      "type": "string"
                    }
                  }
                }
              },
              "warnings": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "itemId": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "validatorName": {
                      "type": "string"
                    },
                    "ruleId": {
                      "type": "string"
                    }
                  }
                }
              },
              "internals": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "itemId": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "validatorName": {
                      "type": "string"
                    },
                    "ruleId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "inner": {
            "type": "string"
          },
          "canBeRetried": {
            "type": "string"
          },
          "detailedErrorCode": {
            "type": "integer"
          }
        },
        "x-examples": {
          "Example 1": {
            "statusCode": 0,
            "service": "string",
            "error": "string",
            "correlationId": "string",
            "validation": {
              "hasErrors": true,
              "hasWarnings": true,
              "hasInternals": true,
              "errors": [
                {
                  "itemId": "string",
                  "message": "string",
                  "validatorName": "string",
                  "ruleId": "string"
                }
              ],
              "warnings": [
                {
                  "itemId": "string",
                  "message": "string",
                  "validatorName": "string",
                  "ruleId": "string"
                }
              ],
              "internals": [
                {
                  "itemId": "string",
                  "message": "string",
                  "validatorName": "string",
                  "ruleId": "string"
                }
              ]
            },
            "inner": "string",
            "canBeRetried": "Unknown",
            "detailedErrorCode": 0
          }
        }
      },
      "HalLink": {
        "title": "HalLink",
        "x-stoplight": {
          "id": "3n3soodfnbykk"
        },
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "description": "Link to next page in paginated response",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "apiKey",
        "description": "The Authorization header used to authenticate to the Codat api, the word \"Basic\" followed by your base64-encoded api key",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Authorization": []
    }
  ]
}
