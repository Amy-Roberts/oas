{
  "openapi": "3.1.0",
  "info": {
    "title": "Banking API",
    "description": "Codat's Banking API allows you to access standardised data from over bank accounts via third party providers.\n\nStandardize how you connect to your customersâ€™ bank accounts. Retrieve bank account and bank transaction data in the same way via our partnerships with Plaid and TrueLayer.\n\n[Read more...](https://codat-docs.vercel.app/banking-api/overview)",
    "version": "2.1.0",
    "summary": "Codat's standardized API for accessing banking data ",
    "contact": {
      "name": "Codat",
      "email": "support@codat.io"
    },
    "termsOfService": "https://www.codat.io/legals/"
  },
  "servers": [
    {
      "url": "https://api.codat.io",
      "description": "Codat"
    }
  ],
  "tags": [
    {
      "name": "Account balances",
      "description": "Retrieve standardized data from linked bank accounts."
    },
    {
      "name": "Accounts",
      "description": "Retrieve standardized data from linked bank accounts."
    },
    {
      "name": "Transactions",
      "description": "Retrieve standardized data from linked bank accounts."
    }
  ],
  "paths": {
    "/companies/{companyId}/connections/{connectionId}/data/banking-accountBalances": {
      "get": {
        "tags": [
          "Account balances"
        ],
        "summary": "List bank balances",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1banking-transactions/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1banking-transactions/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1banking-transactions/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1banking-transactions/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "$ref": "#/components/schemas/AccountBalance"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1banking-accounts/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "operationId": "list-banking-account-balances",
        "description": "Gets a list of balances for a bank account including end-of-day batch balance or running balances per transaction."
      },
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1banking-transactions/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1banking-accounts/parameters/1"
        }
      ]
    },
    "/companies/{companyId}/connections/{connectionId}/data/banking-accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "List bank accounts",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1banking-transactions/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1banking-transactions/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1banking-transactions/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1banking-transactions/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "$ref": "#/components/schemas/Account"
                        }
                      }
                    },
                    {
                      "title": "_Links",
                      "description": "Codat's Paging Model",
                      "examples": [
                        {
                          "_links": {
                            "self": {
                              "href": "/companies/{id}/data/{dataType}"
                            },
                            "current": {
                              "href": "/companies/{id}/data/{dataType}?page=1&pageSize=10"
                            }
                          },
                          "pageNumber": 1,
                          "pageSize": 10,
                          "totalResults": 1
                        }
                      ],
                      "type": "object",
                      "allOf": [
                        {
                          "properties": {
                            "_links": {
                              "type": "object",
                              "required": [
                                "self",
                                "current"
                              ],
                              "properties": {
                                "self": {
                                  "type": "object",
                                  "required": [
                                    "href"
                                  ],
                                  "properties": {
                                    "href": {
                                      "type": "string",
                                      "format": "uri-reference"
                                    }
                                  }
                                },
                                "current": {
                                  "type": "object",
                                  "required": [
                                    "href"
                                  ],
                                  "properties": {
                                    "href": {
                                      "type": "string",
                                      "format": "uri-reference"
                                    }
                                  }
                                },
                                "next": {
                                  "type": "object",
                                  "properties": {
                                    "href": {
                                      "type": "string",
                                      "format": "uri-reference"
                                    }
                                  }
                                },
                                "previous": {
                                  "type": "object",
                                  "properties": {
                                    "href": {
                                      "type": "string",
                                      "format": "uri-reference"
                                    }
                                  }
                                }
                              }
                            },
                            "pageNumber": {
                              "type": "integer"
                            },
                            "pageSize": {
                              "type": "integer"
                            },
                            "totalResults": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "_links",
                            "pageNumber",
                            "pageSize",
                            "totalResults"
                          ]
                        }
                      ],
                      "x-stoplight": {
                        "id": "5wohczray2nz5"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "operationId": "list-banking-accounts",
        "description": "Gets a list of all bank accounts of the SMB, with rich data like balances, account numbers and institutions holdingthe accounts."
      },
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1banking-transactions/parameters/0"
        },
        {
          "name": "connectionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "2e9d2c44-f675-40ba-8049-353bfcb5e171",
            "description": "Unique identifier for a company's data connection."
          }
        }
      ]
    },
    "/companies/{companyId}/connections/{connectionId}/data/banking-accounts/{accountId}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get a bank account for a company",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "operationId": "get-bank-account",
        "deprecated": true,
        "description": "Gets a specified bank account for a given company",
        "x-internal": true
      },
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1banking-transactions/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1banking-accounts/parameters/1"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "accountId",
          "in": "path",
          "required": true,
          "description": "The unique identifier for a banking account"
        }
      ]
    },
    "/companies/{companyId}/connections/{connectionId}/data/banking-transactionCategories": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "List bank transaction categories",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1banking-transactions/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1banking-transactions/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1banking-transactions/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1banking-transactions/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "$ref": "#/components/schemas/TransactionCategory"
                        }
                      }
                    },
                    {
                      "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1banking-accounts/get/responses/200/content/application~1json/schema/allOf/1"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets a list of hierarchical categories associated with a transaction for greater contextual meaning to transactionactivity.",
        "operationId": "list-bank-transaction-categories"
      },
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1banking-transactions/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1banking-accounts/parameters/1"
        }
      ]
    },
    "/companies/{companyId}/connections/{connectionId}/data/banking-transactionCategories/{transactionCategoryId}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get a bank transaction category for a company",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionCategory"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "deprecated": true,
        "operationId": "get-bank-transaction-category",
        "description": "Gets a specified bank transaction category for a given company",
        "x-internal": true
      },
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1banking-transactions/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1banking-accounts/parameters/1"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "transactionCategoryId",
          "in": "path",
          "required": true,
          "description": "The unique identifier for a banking transaction category"
        }
      ]
    },
    "/companies/{companyId}/connections/{connectionId}/data/banking-transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "List transactions for a bank account",
        "parameters": [
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1banking-transactions/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1banking-transactions/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1banking-transactions/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1banking-transactions/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "$ref": "#/components/schemas/Transaction"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets a list of transactions incurred by a bank account.",
        "operationId": "list-banking-transactions"
      },
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1banking-transactions/parameters/0"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1banking-accounts/parameters/1"
        }
      ]
    },
    "/companies/{companyId}/data/banking-transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "List banking transactions for a company",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "minimum": 0,
              "example": 1,
              "default": 1
            },
            "description": "Page number. [Read more](https://codat-docs.vercel.app/using-the-api/paging)."
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "number",
              "default": 100,
              "example": 100,
              "minimum": 1,
              "maximum": 5000
            },
            "description": "Number of records to return in a page. [Read more](https://codat-docs.vercel.app/using-the-api/paging)."
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Codat query string. [Read more](https://codat-docs.vercel.app/using-the-api/querying)."
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "-modifiedDate"
            },
            "description": "Field to order results by. [Read more](https://codat-docs.vercel.app/using-the-api/ordering-results)."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "$ref": "#/components/schemas/Transaction"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets a list of transactions incurred by a company across all bank accounts.",
        "operationId": "list-all-banking-transactions"
      },
      "parameters": [
        {
          "name": "companyId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "8a210b68-6988-11ed-a1eb-0242ac120002",
            "description": "Unique identifier for your SMB in Codat."
          }
        }
      ]
    },
    "/companies/{companyId}/connections/{connectionId}/data/banking-transactions/{transactionId}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get a bank transaction for a company",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_Key": []
          }
        ],
        "description": "Gets a specified bank transaction for a given company",
        "operationId": "get-banking-transaction",
        "deprecated": true,
        "x-internal": true
      },
      "parameters": [
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1data~1banking-transactions/parameters/0"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "transactionId",
          "in": "path",
          "required": true,
          "description": "The unique identifier for a transaction"
        },
        {
          "$ref": "#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1data~1banking-accounts/parameters/1"
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "AccountBalance": {
        "type": "object",
        "properties": {
          "accountId": {
            "minLength": 1,
            "type": "string",
            "description": "The unique identifier of the account."
          },
          "balance": {
            "type": "object",
            "required": [
              "current"
            ],
            "description": "An object containing bank balance data.",
            "properties": {
              "available": {
                "type": "number",
                "format": "double",
                "nullable": true,
                "description": "The funds available to withdraw from the bank account."
              },
              "current": {
                "type": "number",
                "format": "double",
                "description": "The funds in or owed by the bank account."
              },
              "limit": {
                "type": "number",
                "format": "double",
                "nullable": true,
                "description": "The credit limit or overdraft limit of the bank account."
              }
            }
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Date of the balance."
          }
        },
        "required": [
          "accountId",
          "balance",
          "date"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/Transaction/allOf/0"
          }
        ],
        "x-stoplight": {
          "id": "3293652f3df8e"
        },
        "title": "Account Balance",
        "description": "The Banking Account Balances data type provides a list of balances for a bank account including end-of-day batch balance or running balances per transaction."
      },
      "Account": {
        "title": "Account",
        "x-stoplight": {
          "id": "1ic677fzr6az4"
        },
        "description": "An account where payments are made or received, and bank transactions are recorded.\n\nExplore our [data coverage](https://knowledge.codat.io/supported-features/banking?view=tab-by-data-type&dataType=banking-accounts).",
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The ID of the account from the provider."
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "The name of the account according to the provider."
          },
          "informalName": {
            "type": "string",
            "nullable": true,
            "description": "The friendly name of the account, chosen by the holder. This may not have been set by the account holder and therefore is not always available."
          },
          "holder": {
            "type": "string",
            "nullable": true,
            "description": "The name of the person or company who holds the account."
          },
          "type": {
            "type": "string",
            "enum": [
              "Unknown",
              "Credit",
              "Debit"
            ],
            "description": "The type of transactions and balances on the account.\nFor Credit accounts, positive balances are liabilities and positive transactions reduce liabilities.\nFor Debit accounts, positive balances are assets and positive transactions increase assets."
          },
          "balance": {
            "description": "An object containing bank balance data.",
            "title": "Account Balance Amounts",
            "x-stoplight": {
              "id": "jmyqs1xu3c11z"
            },
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "available": {
                "type": "number",
                "format": "double",
                "nullable": true,
                "description": "The balance available in the account, including any pending transactions. This doesn't include additional funds available from any overdrafts."
              },
              "current": {
                "type": "number",
                "format": "double",
                "description": "The balance of the account only including cleared transactions."
              },
              "limit": {
                "type": "number",
                "format": "double",
                "nullable": true,
                "description": "The minimum allowed balance for the account. For example, a $100.00 overdraft would show as a limit of -100.00"
              }
            }
          },
          "identifiers": {
            "description": "An object containing bank account identification information.",
            "title": "Account Identifiers",
            "x-stoplight": {
              "id": "ldkvbe2lb7nab"
            },
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of account",
                "enum": [
                  "Account",
                  "Card",
                  "Credit",
                  "Depository",
                  "Investment",
                  "Loan",
                  "Other"
                ]
              },
              "subtype": {
                "type": "string",
                "nullable": true,
                "description": "Detailed account category"
              },
              "number": {
                "type": "string",
                "nullable": true,
                "description": "The account number for the account. When combined with the`bankCode`, this is usually enough to uniquely identify an account within a jurisdiction."
              },
              "bankCode": {
                "type": "string",
                "nullable": true,
                "description": "The local (usually national) routing number for the account.\n\nThis is known by different names in different countries:\n* BSB code (Australia)\n* routing number (Canada, USA)\n* sort code (UK)"
              },
              "iban": {
                "type": "string",
                "nullable": true,
                "description": "The international bank account number (IBAN) for the account, if known."
              },
              "bic": {
                "type": "string",
                "nullable": true,
                "description": "The ISO 9362 code (commonly called SWIFT code, SWIFT-BIC or BIC) for the account."
              },
              "maskedAccountNumber": {
                "type": "string",
                "nullable": true,
                "description": "A portion of the actual account `number` to help account identification where number is tokenised (Plaid only)"
              }
            },
            "required": [
              "type"
            ]
          },
          "currency": {
            "minLength": 1,
            "type": "string",
            "description": "The currency code for the account."
          },
          "institution": {
            "description": "The bank or other financial institution providing the account.",
            "title": "Account Institution",
            "x-stoplight": {
              "id": "5y3yc3euy8v6a"
            },
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "description": "The institution's ID, according to the provider."
              },
              "name": {
                "type": "string",
                "description": "The institution's name, according to the underlying provider."
              }
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Transaction/allOf/0",
            "required": [
              "id",
              "name",
              "type",
              "balance",
              "identifiers",
              "currency",
              "institution"
            ]
          }
        ]
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The unique identifier of the bank transaction."
          },
          "accountId": {
            "minLength": 1,
            "type": "string",
            "description": "The unique identifier of the bank account."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "The description of the bank transaction."
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The amount of the bank transaction."
          },
          "currency": {
            "minLength": 1,
            "type": "string",
            "description": "The currency of the bank transaction."
          },
          "postedDate": {
            "description": "The date the bank transaction was cleared.",
            "type": "string",
            "example": "2022-10-23T00:00:00Z",
            "format": "date-time",
            "title": "DateTime"
          },
          "authorizedDate": {
            "$ref": "#/components/schemas/Transaction/properties/postedDate",
            "description": "The date the bank transaction was authorized."
          },
          "code": {
            "type": "string",
            "enum": [
              "Unknown",
              "Fee",
              "Payment",
              "Cash",
              "Transfer",
              "Interest",
              "Cashback",
              "Cheque",
              "DirectDebit",
              "Purchase",
              "StandingOrder",
              "Adjustment",
              "Credit",
              "Other",
              "NotSupported"
            ]
          },
          "merchantName": {
            "type": "string",
            "nullable": true,
            "description": "The name of the merchant."
          },
          "transactionCategoryRef": {
            "type": "object",
            "description": "An object of bank transaction category reference data.",
            "properties": {
              "id": {
                "minLength": 1,
                "type": "string",
                "description": "The unique category reference id for the bank transaction."
              },
              "name": {
                "type": "string",
                "nullable": true,
                "description": "The category name reference for the bank transaction."
              }
            },
            "required": [
              "id"
            ]
          }
        },
        "required": [
          "id",
          "accountId",
          "currency"
        ],
        "allOf": [
          {
            "allOf": [
              {
                "title": "ModifiedDate",
                "x-stoplight": {
                  "id": "z5gfpfg4fsp6v"
                },
                "type": "object",
                "properties": {
                  "modifiedDate": {
                    "$ref": "#/components/schemas/Transaction/properties/postedDate",
                    "description": "The date on which this record was last modified in Codat. [Read more...](https://docs.codat.io/docs/modified-dates)."
                  }
                }
              },
              {
                "title": "SourceModifiedDate",
                "x-stoplight": {
                  "id": "s0oihleme8suj"
                },
                "type": "object",
                "properties": {
                  "sourceModifiedDate": {
                    "$ref": "#/components/schemas/Transaction/properties/postedDate",
                    "description": "The date on which this record was last modified in the originating system"
                  }
                }
              }
            ]
          }
        ],
        "title": "Transaction",
        "description": "The Banking Transactions data type provides an immutable source of up-to-date information on income and expenditure.\n\nView the coverage for banking transactions in the [Data Coverage Explorer](https://knowledge.codat.io/supported-features/banking?view=tab-by-data-type&dataType=banking-transactions)."
      },
      "TransactionCategory": {
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The unique identifier of the bank transaction category."
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "The name of the bank transaction category."
          },
          "parentId": {
            "type": "string",
            "nullable": true,
            "description": "The unique identifier of the parent bank transaction category."
          },
          "hasChildren": {
            "type": "boolean",
            "description": "A Boolean indicating whether there are other bank transaction categories beneath this one in the hierarchy."
          },
          "status": {
            "type": "string",
            "enum": [
              "Unknown",
              "Active",
              "Archived"
            ],
            "description": "Status of the bank transaction category."
          }
        },
        "required": [
          "id",
          "name"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/Transaction/allOf/0"
          }
        ],
        "title": "Transaction Category",
        "description": "The Banking Transaction Categories data type provides a list of hierarchical categories associated with a transaction for greater contextual meaning to transaction activity."
      }
    },
    "securitySchemes": {
      "API_Key": {
        "type": "apiKey",
        "description": "The word \"Basic\" followed by a space and your API Key, base64 encoded, which can be found [here](https://app.codat.io/#/profile)",
        "name": "Your Base 64 encoded API Key",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "API_Key": []
    }
  ]
}
