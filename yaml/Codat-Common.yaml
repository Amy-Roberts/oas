openapi: 3.1.0
x-stoplight:
  id: 466k6ayziv9at
info:
  title: Common API
  version: 2.1.0
  summary: Common API
  description: |-
    An API for the common components of all of Codat's products.

    These end points cover creating and managing your companies, data connections, and integrations.

    [Read about the building blocks of Codat...](https://codat-docs.vercel.app/core-concepts/companies)
  contact:
    name: Codat
    email: support@codat.io
  termsOfService: 'https://www.codat.io/legals/'
servers:
  - url: 'https://api.codat.io'
    description: Codat
tags:
  - name: Companies
    description: Endpoints to manage your Codat companies.
  - name: Connections
    description: Endpoints to manage your companies' data connections.
  - name: Migrations
    description: Endpoints that allow you to migrate existing connections into Codat.
  - name: Webhooks
    description: 'Endpoints to manage webhooks, rules and alerts.'
  - name: Data status
    description: Understand the state of data within Codat.
  - name: Integrations
    description: View and manage your available integrations in Codat.
  - name: Refresh data
    description: Queue pull operations to refresh data in Codat.
  - name: Settings
    description: Endpoints to manage your Codat instance.
  - name: Push
    description: Endpoints to view push options and get push statuses.
paths:
  /companies:
    get:
      summary: List companies
      tags:
        - Companies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/paths/~1companies~1%7BcompanyId%7D/get/responses/200/content/application~1json/schema'
                  - $ref: '#/paths/~1rules/get/responses/200/content/application~1json/schema/allOf/1'
              examples:
                List of Companies:
                  value:
                    results:
                      - id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                        name: My Test Company
                        platform: ''
                        redirect: 'https://link.codat.io/company/3fa85f64-5717-4562-b3fc-2c963f66afa6'
                        lastSync: '2022-01-01T12:30:00.000Z'
                        dataConnections:
                          - id: 51baa045-4836-4317-a42e-3542e991e581
                            integrationId: 1c312d69-e638-46d4-ad31-72e6c3ba8390
                            integrationKey: vjms
                            sourceId: 396c3158-5dd7-481b-a7c4-a795ca31792b
                            platformName: Pandle
                            linkUrl: 'https://link-api.codat.io/companies/3fa85f64-5717-4562-b3fc-2c963f66afa6/connections/51baa045-4836-4317-a42e-3542e991e581/start'
                            status: Linked
                            lastSync: '2022-01-01T12:30:00.000Z'
                            created: '2022-01-01T11:30:00Z'
                            sourceType: Accounting
                        created: '2022-01-01T11:30:00Z'
                        createdByUserName: Mike Smith
                    pageNumber: 1
                    pageSize: 1
                    totalResults: 1
                    _links:
                      current:
                        href: /companies?page=1&pageSize=100
                      self:
                        href: /companies
        '400':
          $ref: '#/components/responses/Malformed-Query'
        '401':
          $ref: '#/components/responses/Unauthorized'
      operationId: list-companies
      description: List all companies that you have created in Codat.
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/orderBy'
    post:
      summary: Create a company
      tags:
        - Companies
      operationId: create-company
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  platform:
                    type: string
                  redirect:
                    type: string
                  dataConnections:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  createdByUserName:
                    type: string
                x-examples:
                  example-1:
                    id: ab12c58d-a678-4ebf-a159-ae99e1807bd0
                    name: My First Company
                    platform: ''
                    redirect: 'https://link.codat.io/company/ab12c58d-a678-4ebf-a159-ae99e1807bd0'
                    dataConnections: []
                    created: '2022-11-10T10:45:18.1950523Z'
                    createdByUserName: Dan Tzabar
        '401':
          $ref: '#/components/responses/Unauthorized'
      description: Create a new company
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  name: string
                  platformType: string
              properties:
                name:
                  type: string
                platformType:
                  type: string
                  example: gbol
                  pattern: '[a-z][a-z][a-z][a-z]'
                  maxLength: 4
                  minLength: 4
              required:
                - name
            examples:
              Example with platform key:
                value:
                  name: My first company
                  platformType: gbol
              Example without platform key:
                value:
                  name: My second company
  '/companies/{companyId}':
    parameters:
      - $ref: '#/components/parameters/companyId'
    get:
      summary: Get company
      tags:
        - Companies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Company
                description: 'A company in Codat represent a small or medium sized business, whose data you wish to share'
                examples:
                  - id: 0498e921-9b53-4396-a412-4f2f5983b0a2
                    name: string
                    platform: string
                    redirect: 'https://link.codat.io/company/27628208-459c-46a2-a705-5641ce25f739'
                    lastSync: '2022-01-01T12:00:00.000Z'
                    created: '2022-01-01T12:00:00.000Z'
                    createdByUserName: string
                    dataConnections:
                      - id: ee2eb431-c0fa-4dc9-93fa-d29781c12bcd
                        integrationId: bf083d72-62c7-493e-aec9-81b4dbba7e2c
                        integrationKey: dfxm
                        sourceId: bdd831ce-eebd-4896-89a7-20e5ee8989ee
                        platformName: Basiq
                        linkUrl: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start'
                        status: Linked
                        lastSync: '2022-10-27T10:22:43.6464237Z'
                        created: '2022-10-27T09:53:29Z'
                        sourceType: Banking
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 0498e921-9b53-4396-a412-4f2f5983b0a2
                  name:
                    type: string
                  platform:
                    type: string
                    deprecated: true
                  redirect:
                    type: string
                    format: uri
                    example: 'https://link.codat.io/company/27628208-459c-46a2-a705-5641ce25f739'
                  lastSync:
                    type: string
                    format: date-time
                    example: '2022-01-01T12:00:00.000Z'
                  created:
                    type: string
                    format: date-time
                    example: '2022-01-01T12:00:00.000Z'
                  createdByUserName:
                    type: string
                  dataConnections:
                    type: array
                    items:
                      $ref: '#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D/get/responses/200/content/application~1json/schema'
                required:
                  - id
                  - name
                  - redirect
              examples:
                Example:
                  value:
                    id: ab12c58d-a678-4ebf-a159-ae99e1807bd0
                    name: My First Company
                    platform: ''
                    redirect: 'https://link.codat.io/company/ab12c58d-a678-4ebf-a159-ae99e1807bd0'
                    dataConnections: []
                    created: '2022-11-10T10:45:18Z'
                    createdByUserName: Dan Tzabar
        '401':
          $ref: '#/components/responses/Unauthorized'
      operationId: get-companies-companyId
      description: Get metadata for a single company
    delete:
      summary: Delete a company
      operationId: delete-companies-companyId
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
      description: |-
        Delete the given company from Codat.
        This operation is not reversible.
      tags:
        - Companies
    put:
      summary: Update a company name
      operationId: put-companies-companyId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/paths/~1companies~1%7BcompanyId%7D/get/responses/200/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/Unauthorized'
      description: Updates the given company with a new name
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              x-examples:
                example-1:
                  name: foo
            examples:
              example-1:
                value:
                  name: New Name
      tags:
        - Companies
  '/companies/{companyId}/connections':
    parameters:
      - $ref: '#/components/parameters/companyId'
    get:
      summary: List connections
      tags:
        - Connections
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                x-examples:
                  example-1:
                    results:
                      - id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                        integrationId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                        integrationKey: string
                        sourceId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                        platformName: string
                        linkUrl: string
                        status: string
                        lastSync: '2022-11-10T11:42:26.059Z'
                        created: '2022-11-10T11:42:26.059Z'
                        sourceType: string
                        dataConnectionErrors:
                          - statusCode: string
                            statusText: string
                            errorMessage: string
                            erroredOnUtc: '2022-11-10T11:42:26.059Z'
                        connectionInfo:
                          additionalProp1: string
                          additionalProp2: string
                          additionalProp3: string
                    pageNumber: 0
                    pageSize: 0
                    totalResults: 0
                    _links:
                      self:
                        href: string
                      current:
                        href: string
                      next:
                        href: string
                      previous:
                        href: string
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D/get/responses/200/content/application~1json/schema'
                  - $ref: '#/paths/~1rules/get/responses/200/content/application~1json/schema/allOf/1'
              examples:
                example-1:
                  value:
                    results:
                      - id: ee2eb431-c0fa-4dc9-93fa-d29781c12bcd
                        integrationId: bf083d72-62c7-493e-aec9-81b4dbba7e2c
                        integrationKey: dfxm
                        sourceId: bdd831ce-eebd-4896-89a7-20e5ee8989ee
                        platformName: Basiq
                        linkUrl: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start'
                        status: Linked
                        lastSync: '2022-10-27T10:22:43.6464237Z'
                        created: '2022-10-27T09:53:29Z'
                        sourceType: Banking
                    pageNumber: 0
                    pageSize: 0
                    totalResults: 0
                    _links:
                      self:
                        href: string
                      current:
                        href: string
                      next:
                        href: string
                      previous:
                        href: string
        '400':
          $ref: '#/components/responses/Malformed-Query'
        '401':
          $ref: '#/components/responses/Unauthorized'
      operationId: list-company-connections
      description: List the connections for a company
      parameters:
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/orderBy'
    post:
      summary: Create a data connection
      operationId: create-data-connection
      responses:
        '200':
          description: OK
      description: Create a data connection for a company
      tags:
        - Connections
  '/companies/{companyId}/connections/{connectionId}':
    parameters:
      - $ref: '#/components/parameters/companyId'
      - $ref: '#/components/parameters/connectionId'
    get:
      summary: Get connection
      tags:
        - Connections
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Connection
                description: A connection represents the link between a `company` and a source of data.
                examples:
                  - id: ee2eb431-c0fa-4dc9-93fa-d29781c12bcd
                    integrationId: bf083d72-62c7-493e-aec9-81b4dbba7e2c
                    integrationKey: dfxm
                    sourceId: bdd831ce-eebd-4896-89a7-20e5ee8989ee
                    platformName: Basiq
                    linkUrl: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start'
                    status: Linked
                    lastSync: '2022-10-27T10:22:43.6464237Z'
                    created: '2022-10-27T09:53:29Z'
                    sourceType: Banking
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 33e35bb4-93e7-441f-b651-f46ca049367b
                  integrationId:
                    type: string
                    format: uuid
                    example: fd321cb6-7963-4506-b873-e99593a45e30
                  integrationKey:
                    type: string
                  sourceId:
                    type: string
                    format: uuid
                    example: 35b92968-9851-4095-ad60-395c95cbcba4
                  platformName:
                    type: string
                  linkUrl:
                    type: string
                    format: uri
                    example: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/2e2eb431-c1fa-4dc9-93fa-d29781c12bcd/start'
                  status:
                    type: string
                    enum:
                      - PendingAuth
                      - Linked
                      - Unlinked
                      - Deauthorized
                    example: Linked
                  lastSync:
                    type: string
                    format: date-time
                    example: '2022-01-01T12:00:00.000Z'
                  created:
                    type: string
                    format: date-time
                    example: '2022-01-01T12:00:00.000Z'
                  sourceType:
                    type: string
                    example: Accounting
                    enum:
                      - Accounting
                      - Banking
                      - Commerce
                  dataConnectionErrors:
                    type: array
                    items:
                      type: object
                      properties:
                        statusCode:
                          type: string
                        statusText:
                          type: string
                        errorMessage:
                          type: string
                        erroredOnUtc:
                          type: string
                          format: date-time
                          example: '2022-01-01T12:00:00.000Z'
                  connectionInfo:
                    type: object
                    properties:
                      additionalProp1:
                        type: string
                      additionalProp2:
                        type: string
                      additionalProp3:
                        type: string
                required:
                  - id
                  - integrationId
                  - integrationKey
                  - sourceId
                  - platformName
                  - linkUrl
                  - status
                  - created
                  - sourceType
              examples:
                example-1:
                  value:
                    id: ee2eb431-c0fa-4dc9-93fa-d29781c12bcd
                    integrationId: bf083d72-62c7-493e-aec9-81b4dbba7e2c
                    integrationKey: dfxm
                    sourceId: bdd831ce-eebd-4896-89a7-20e5ee8989ee
                    platformName: Basiq
                    linkUrl: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start'
                    status: Linked
                    lastSync: '2022-10-27T10:22:43.6464237Z'
                    created: '2022-10-27T09:53:29Z'
                    sourceType: Banking
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/Not-Found'
      operationId: get-company-connection
      description: Get a single connection for a company
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
            examples:
              Example:
                value: true
        description: ''
    delete:
      summary: Delete connection
      operationId: delete-company-connection
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/Not-Found'
      description: |-
        Revoke and remove a connection from a company.
        This operation is not reversible - the end user would need to reauthorize a new data connection if you wish to view new data for this company.
      tags:
        - Connections
    patch:
      summary: Unlink connection
      operationId: patch-company-connection
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D/get/responses/200/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/Not-Found'
      description: 'This allows you to deauthorize a connection, without deleting it from Codat. This means you can still view any data that has previously been pulled into Codat, and also lets you re-authorize in future if your customer wishes to resume sharing their data.'
      tags:
        - Connections
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
              x-examples:
                example-1:
                  status: unlinked
            examples:
              Example:
                value:
                  status: unlinked
        description: ''
  '/companies/{companyId}/connections/{connectionId}/authorization':
    parameters:
      - $ref: '#/components/parameters/companyId'
      - $ref: '#/components/parameters/connectionId'
    put:
      summary: Update authorization
      tags:
        - Connections
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D/get/responses/200/content/application~1json/schema'
      operationId: get-companies-companyId-connections-connectionId-authorization
      description: Update data connection's authorization.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                property1:
                  type: string
                property2:
                  type: string
                property3:
                  type: string
        description: ''
  '/companies/{companyId}/data/all':
    parameters:
      - $ref: '#/components/parameters/companyId'
    post:
      summary: Queue pull operations
      operationId: create--many-pull-operations
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/Not-Found'
      description: Initiate the pull of all data types that are enabled for this company
      tags:
        - Refresh data
  '/companies/{companyId}/data/queue/{dataType}':
    parameters:
      - $ref: '#/components/parameters/companyId'
      - $ref: '#/components/parameters/dataType'
    post:
      summary: Queue pull operation
      operationId: create-pull-operation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Pull Operation
                description: |-
                  Information about a queued, in progress or completed pull operation.
                  *Formally called `dataset`*
                examples:
                  - id: 97d60846-f07a-4d42-b5a0-0bdcc6ebf56b
                    companyId: 4645bd78-8988-45bc-ac9e-67ba5df6e4e5
                    connectionId: 51baa045-4836-4317-a42e-3542e991e581
                    dataType: invoices
                    status: Initial
                    requested: '2022-11-14T11:18:37.2798351Z'
                    progress: 10
                    isCompleted: false
                    isErrored: false
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 943accd0-4247-42d8-865b-363c8629e1da
                  companyId:
                    type: string
                    format: uuid
                    example: 22ece347-e5f6-4896-95e0-35a4c7f17023
                  connectionId:
                    type: string
                    format: uuid
                    example: 50830828-7d39-4367-b0eb-5ddb2de5faa5
                  dataType:
                    type: string
                  status:
                    type: string
                    enum:
                      - Initial
                      - Queued
                      - Fetching
                      - MapQueued
                      - Mapping
                      - Complete
                      - FetchError
                      - MapError
                      - InternalError
                      - ProcessingQueued
                      - Processing
                      - ProcessingError
                      - ValidationQueued
                      - Validating
                      - ValidationError
                      - AuthError
                      - Cancelled
                      - Routing
                      - RoutingError
                      - NotSupported
                      - RateLimitError
                      - PermissionsError
                      - PrerequisiteNotMet
                    example: Complete
                  requested:
                    type: string
                    format: date-time
                    example: '2022-01-01T12:00:00.000Z'
                  progress:
                    type: integer
                  isCompleted:
                    type: boolean
                  isErrored:
                    type: boolean
                required:
                  - id
                  - companyId
                  - connectionId
                  - dataType
                  - status
                  - requested
                  - progress
                  - isCompleted
                  - isErrored
                x-stoplight:
                  id: hvk8xbvt7ekyg
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/Not-Found'
      description: |-
        Queue a single pull operation for the given company and data type.

        This will bring updated data into Codat from the linked integration for you to view.
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: connectionId
          description: 'Optionally, provide a data connection id to only queue pull operations on that connection.'
      tags:
        - Refresh data
  /rules:
    get:
      summary: List webhooks
      tags:
        - Webhooks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                x-examples:
                  example-1:
                    results:
                      - id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                        type: string
                        companyId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                        notifiers:
                          emails:
                            - string
                          webhook: string
                    pageNumber: 0
                    pageSize: 0
                    totalResults: 0
                    _links:
                      self:
                        href: string
                      current:
                        href: string
                      next:
                        href: string
                      previous:
                        href: string
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/paths/~1rules/post/requestBody/content/application~1json/schema'
                allOf:
                  - type: object
                  - title: _Links
                    description: Codat's Paging Model
                    examples:
                      - _links:
                          self:
                            href: '/companies/{id}/data/{dataType}'
                          current:
                            href: '/companies/{id}/data/{dataType}?page=1&pageSize=10'
                        pageNumber: 1
                        pageSize: 10
                        totalResults: 1
                    type: object
                    allOf:
                      - properties:
                          _links:
                            type: object
                            required:
                              - self
                              - current
                            properties:
                              self:
                                type: object
                                required:
                                  - href
                                properties:
                                  href:
                                    type: string
                                    format: uri-reference
                              current:
                                type: object
                                required:
                                  - href
                                properties:
                                  href:
                                    type: string
                                    format: uri-reference
                              next:
                                type: object
                                properties:
                                  href:
                                    type: string
                                    format: uri-reference
                              previous:
                                type: object
                                properties:
                                  href:
                                    type: string
                                    format: uri-reference
                          pageNumber:
                            type: integer
                          pageSize:
                            type: integer
                          totalResults:
                            type: integer
                        required:
                          - _links
                          - pageNumber
                          - pageSize
                          - totalResults
                    x-stoplight:
                      id: 5wohczray2nz5
              examples:
                Example:
                  value:
                    results:
                      - id: fcfbfe0b-fe73-47ed-a7fe-0018567f5da2
                        type: DataConnectionStatusChanged
                        notifiers:
                          emails: []
                          webhook: 'https://webhook.site/6d385ea9-bcf9-48e4-9103-1958ccb54997'
                    pageNumber: 1
                    pageSize: 100
                    totalResults: 1
                    _links:
                      current:
                        href: /rules?page=1&pageSize=100
                      self:
                        href: /rules
        '400':
          $ref: '#/components/responses/Malformed-Query'
        '401':
          $ref: '#/components/responses/Unauthorized'
      operationId: list-rules
      description: List webhooks that you are subscribed to.
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/orderBy'
    post:
      summary: Create webhook
      operationId: post-rules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/paths/~1rules/post/requestBody/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/Unauthorized'
      description: Create a new webhook configuration
      requestBody:
        content:
          application/json:
            schema:
              title: Webhook
              description: Configuration to alert to a url or list of email addresses based on the given type / condition.
              examples:
                - id: ff89c50e-a719-4ef5-a182-9917e53927b6
                  type: string
                  companyId: 39b73b17-cc2e-429e-915d-71654e9dcd1e
                  notifiers:
                    emails:
                      - info@client.com
                    webhook: 'https://webhook.client.com'
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                  example: ff89c50e-a719-4ef5-a182-9917e53927b6
                type:
                  type: string
                companyId:
                  type: string
                  format: uuid
                  example: 39b73b17-cc2e-429e-915d-71654e9dcd1e
                notifiers:
                  type: object
                  properties:
                    emails:
                      type: array
                      items:
                        type: string
                        format: email
                        example: info@client.com
                    webhook:
                      type: string
                      format: uri
                      example: 'https://webhook.client.com'
              required:
                - id
                - type
                - notifiers
              x-stoplight:
                id: m6zh3ardbld2w
        description: Create a webhook with the given configuration.
      tags:
        - Webhooks
  '/rules/{ruleId}':
    parameters:
      - $ref: '#/components/parameters/ruleId'
    get:
      summary: Get webhook
      tags:
        - Webhooks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/paths/~1rules/post/requestBody/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/Not-Found'
      operationId: get-webhook
      description: Get a single webhook
  '/companies/{companyId}/dataStatus':
    parameters:
      - $ref: '#/components/parameters/companyId'
    get:
      summary: Get data status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  dataType1:
                    title: DataStatus
                    description: Describes the state of data in the Codat cache for a company and data type
                    type: object
                    required:
                      - dataType
                      - lastSuccessfulSync
                      - currentStatus
                    properties:
                      dataType:
                        type: string
                      lastSuccessfulSync:
                        type: string
                        format: date-time
                        example: '2022-01-01T13:00:00.000Z'
                      currentStatus:
                        type: string
                      latestSyncId:
                        type: string
                        format: uuid
                        example: ad474a37-2003-478e-baee-9af9f1ec2fe3
                      latestSuccessfulSyncId:
                        type: string
                        format: uuid
                        example: 8220fc90-55b6-47bc-9417-48ac6ea93101
                    examples:
                      - dataType: string
                        lastSuccessfulSync: '2022-01-01T13:00:00.000Z'
                        currentStatus: string
                        latestSyncId: ad474a37-2003-478e-baee-9af9f1ec2fe3
                        latestSuccessfulSyncId: 8220fc90-55b6-47bc-9417-48ac6ea93101
                  dataType2:
                    $ref: '#/paths/~1companies~1%7BcompanyId%7D~1dataStatus/get/responses/200/content/application~1json/schema/properties/dataType1'
              examples:
                Example:
                  value:
                    invoices:
                      dataType: invoices
                      lastSuccessfulSync: '2022-01-01T00:00:00.000Z'
                      currentStatus: success
                      latestSyncId: d03b6979-eb3b-447a-a27a-13cf457a9f48
                      latestSuccessfulSyncId: 6883bba8-514d-423f-ba7f-c38285a80b7f
                    bills:
                      dataType: bills
                      lastSuccessfulSync: '2022-01-01T00:00:00.000Z'
                      currentStatus: failure
                      latestSyncId: d03b6979-eb3b-447a-a27a-13cf457a9f48
                      latestSuccessfulSyncId: 6883bba8-514d-423f-ba7f-c38285a80b7f
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/Not-Found'
      operationId: get-companies-companyId-dataStatus
      description: Get the state of each data type for a company
      tags:
        - Data status
  '/companies/{companyId}/data/history':
    parameters:
      - $ref: '#/components/parameters/companyId'
    get:
      summary: Get pull operations
      tags:
        - Data status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/paths/~1companies~1%7BcompanyId%7D~1data~1queue~1%7BdataType%7D/post/responses/200/content/application~1json/schema'
                  - $ref: '#/paths/~1rules/get/responses/200/content/application~1json/schema/allOf/1'
              examples:
                Example:
                  value:
                    results:
                      - id: 97d60846-f07a-4d42-b5a0-0bdcc6ebf56b
                        companyId: 4645bd78-8988-45bc-ac9e-67ba5df6e4e5
                        connectionId: 51baa045-4836-4317-a42e-3542e991e581
                        dataType: invoices
                        status: Initial
                        requested: '2022-11-14T11:18:37.2798351Z'
                        progress: 10
                        isCompleted: false
                        isErrored: false
                    _links:
                      self:
                        href: ../dictionary
                      current:
                        href: ../dictionary
                      next:
                        href: ../dictionary
                      previous:
                        href: ../dictionary
                    pageNumber: 0
                    pageSize: 0
                    totalResults: 0
        '400':
          $ref: '#/components/responses/Malformed-Query'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/Not-Found'
      operationId: get-company-data-history
      description: Gets the pull operation history (datasets) for a given company.
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/orderBy'
  '/companies/{companyId}/data/history/{datasetId}':
    parameters:
      - $ref: '#/components/parameters/companyId'
      - $ref: '#/components/parameters/datasetId'
    get:
      summary: Get pull operation
      tags:
        - Data status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/paths/~1companies~1%7BcompanyId%7D~1data~1queue~1%7BdataType%7D/post/responses/200/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/Not-Found'
      operationId: get-pull-operation
      description: Retrieve information about a single dataset or pull operation.
  /integrations:
    get:
      summary: List integrations
      tags:
        - Integrations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/paths/~1integrations~1%7BplatformKey%7D/get/responses/200/content/application~1json/schema'
                  - $ref: '#/paths/~1rules/get/responses/200/content/application~1json/schema/allOf/1'
        '400':
          $ref: '#/components/responses/Malformed-Query'
        '401':
          $ref: '#/components/responses/Unauthorized'
      operationId: list-integrations
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/orderBy'
      description: List your available integrations
  '/integrations/{platformKey}':
    parameters:
      - $ref: '#/components/parameters/platformKey'
    get:
      summary: Get integration
      tags:
        - Integrations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Integration
                description: An integration that Codat supports
                examples:
                  - key: gbol
                    logoUrl: 'http://example.com'
                    name: Xero
                    enabled: true
                    sourceId: accounting
                    integrationId: 497a18ca-284e-40c0-985d-f72be35d468e
                    sourceType: 8193a927-ab7a-45a3-9dc2-d357a4932dfe
                    isOfflineConnector: true
                    isBeta: true
                    dataProvidedBy: string
                    datatypeFeatures:
                      - datatype: invoices
                        supportedFeatures:
                          - featureType: get
                            featureState: release
                type: object
                properties:
                  key:
                    type: string
                    maxLength: 4
                    minLength: 4
                    pattern: '[a-z]{4}'
                    example: gbol
                  logoUrl:
                    type: string
                    format: uri
                  name:
                    type: string
                    example: Xero
                  enabled:
                    type: boolean
                    description: Whether this integration is enabled for your customers to use
                  sourceId:
                    type: string
                    enum:
                      - accounting
                      - banking
                      - commerce
                      - other
                      - unknown
                    example: accounting
                  integrationId:
                    type: string
                    format: uuid
                  sourceType:
                    type: string
                    format: uuid
                  isOfflineConnector:
                    type: boolean
                  isBeta:
                    type: boolean
                  dataProvidedBy:
                    type: string
                  datatypeFeatures:
                    type: array
                    items:
                      title: DatatypeFeature
                      description: Describes support for a given datatype and associated operations
                      examples:
                        - datatype: invoices
                          supportedFeatures:
                            - featureType: get
                              featureState: release
                      type: object
                      x-stoplight:
                        id: ry1x0fplpj8ck
                      properties:
                        datatype:
                          type: string
                        supportedFeatures:
                          type: array
                          items:
                            type: object
                            properties:
                              featureType:
                                type: string
                                enum:
                                  - Get
                                  - Post
                                  - Categorization
                                  - Delete
                                  - Put
                                  - GetAsPdf
                                  - DownloadAttachment
                                  - GetAttachment
                                  - GetAttachments
                                  - UploadAttachment
                                example: Get
                              featureState:
                                type: string
                                example: Release
                                enum:
                                  - Release
                                  - Beta
                                  - Deprecated
                                  - NotSupported
                                  - NotImplemented
                            required:
                              - featureType
                              - featureState
                      required:
                        - datatype
                        - supportedFeatures
                required:
                  - key
                  - logoUrl
                  - name
                  - enabled
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/Not-Found'
      operationId: get-integrations-platformKey
      description: 'Get single integration, by platformKey'
  /profile:
    get:
      summary: Get profile
      tags:
        - Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/paths/~1profile/put/requestBody/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/Unauthorized'
      operationId: get-settings-profile
      description: Fetch your Codat profile.
      deprecated: true
      x-internal: true
    put:
      summary: Update profile
      operationId: put-profile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/paths/~1profile/put/requestBody/content/application~1json/schema'
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
        - Settings
      description: Update your Codat profile
      requestBody:
        content:
          application/json:
            schema:
              title: Profile
              description: Describes your Codat client instance
              examples:
                - name: Bob's Burgers
                  logoUrl: string
                  iconUrl: string
                  redirectUrl: string
                  whiteListUrls:
                    - 'https://bobs-burgers.com/redirect'
                  apiKey: string
                  alertAuthHeader: string
                  confirmCompanyName: true
              type: object
              properties:
                name:
                  type: string
                  example: Bob's Burgers
                logoUrl:
                  type: string
                iconUrl:
                  type: string
                redirectUrl:
                  type: string
                whiteListUrls:
                  type: array
                  items:
                    type: string
                    format: uri
                    example: 'https://bobs-burgers.com/redirect'
                apiKey:
                  type: string
                  deprecated: true
                alertAuthHeader:
                  type: string
                confirmCompanyName:
                  type: boolean
                  deprecated: true
              required:
                - name
                - redirectUrl
              x-stoplight:
                id: b1fyq05edangf
        description: All fields should be included when updating your profile.
  /profile/syncSettings:
    get:
      summary: Get sync settings
      tags:
        - Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      clientId:
                        type: string
                        format: uuid
                        example: 367f7975-267b-439b-90c6-a6040ee680f3
                      settings:
                        type: array
                        items:
                          $ref: '#/paths/~1profile~1syncSettings/post/requestBody/content/application~1json/schema/allOf/0/properties/settings/items'
                      overridesDefaults:
                        type: boolean
                type: object
              examples:
                Example:
                  value:
                    clientId: 367f7975-267b-439b-90c6-a6040ee680f3
                    settings:
                      - dataType: invoices
                        fetchOnFirstLink: true
                        syncSchedule: 24
                        syncOrder: 0
                        syncFromUtc: '2020-01-01T12:00:00.000Z'
                        syncFromWindow: 24
                        monthsToSync: 24
                        isLocked: true
                    overridesDefaults: true
        '401':
          $ref: '#/components/responses/Unauthorized'
      operationId: get-profile-syncSettings
      description: 'Retrieve the sync settings for your client. This includes how often data types should be queued to be updated, and how much history should be fetched.'
      x-internal: true
      deprecated: true
    post:
      summary: Update all sync settings
      operationId: post-profile-syncSettings
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
      description: Update sync settings for all data types.
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - properties:
                    clientId:
                      type: string
                      format: uuid
                      example: 367f7975-267b-439b-90c6-a6040ee680f3
                    settings:
                      type: array
                      items:
                        title: SyncSetting
                        description: 'Describes how often, and how much history, should be fetched for the given data type when a pull operation is queued.'
                        examples:
                          - dataType: invoices
                            fetchOnFirstLink: true
                            syncSchedule: 24
                            syncOrder: 0
                            syncFromUtc: '2020-01-01T12:00:00.000Z'
                            syncFromWindow: 24
                            monthsToSync: 24
                            isLocked: true
                        type: object
                        properties:
                          dataType:
                            type: string
                            example: invoices
                          fetchOnFirstLink:
                            type: boolean
                            description: Whether this data type should be queued after a company has authorized a connection.
                          syncSchedule:
                            type: integer
                            example: 24
                            description: Number of hours after which this data type should be refreshed.
                          syncOrder:
                            type: integer
                          syncFromUtc:
                            type: string
                            format: date-time
                            example: '2020-01-01T12:00:00.000Z'
                            description: Date from which data should be fetched. Set this *or* `syncFromWindow`
                          syncFromWindow:
                            type: integer
                            example: 24
                            description: Number of months of data to be fetched. Set this *or* `syncFromUTC`
                          monthsToSync:
                            type: integer
                            example: 24
                            description: 'Months of data to fetch, for report data types (`balanceSheet` & `profitAndLoss`) only.'
                          isLocked:
                            type: boolean
                        required:
                          - dataType
                          - fetchOnFirstLink
                          - syncSchedule
                          - syncOrder
                        x-stoplight:
                          id: dhbv5wyl1xr4w
                    overridesDefaults:
                      type: boolean
                      default: true
                  required:
                    - clientId
                    - settings
                    - overridesDefaults
              type: object
        description: |-
          Include a `syncSetting` object for each data type.
          `syncFromWindow`, `syncFromUTC` & `monthsToSync` only need to be included if you wish to set a value for them.
  '/companies/{companyId}/connections/{connectionId}/options/{dataType}':
    parameters:
      - $ref: '#/components/parameters/companyId'
      - $ref: '#/components/parameters/connectionId'
      - $ref: '#/components/parameters/dataType'
    get:
      summary: List push options
      tags:
        - Push
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: PushOption
                required:
                  - description
                  - displayName
                  - required
                  - type
                type: object
                properties:
                  type:
                    title: OptionType
                    enum:
                      - Array
                      - Object
                      - String
                      - Number
                      - Boolean
                      - DateTime
                      - File
                      - MultiPart
                    type: string
                  displayName:
                    minLength: 1
                    type: string
                  description:
                    minLength: 1
                    type: string
                  options:
                    type: array
                    items:
                      title: PushOptionChoice
                      required:
                        - description
                        - displayName
                        - required
                        - type
                        - value
                      type: object
                      properties:
                        value:
                          minLength: 1
                          type: string
                        type:
                          $ref: '#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1options~1%7BdataType%7D/get/responses/200/content/application~1json/schema/properties/type'
                        displayName:
                          minLength: 1
                          type: string
                        description:
                          minLength: 1
                          type: string
                        options:
                          type: array
                          items:
                            $ref: '#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1options~1%7BdataType%7D/get/responses/200/content/application~1json/schema/properties/options/items'
                          nullable: true
                        required:
                          type: boolean
                        validation:
                          $ref: '#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1options~1%7BdataType%7D/get/responses/200/content/application~1json/schema/properties/validation'
                        rel:
                          type: string
                          nullable: true
                      additionalProperties: false
                    nullable: true
                  required:
                    type: boolean
                  validation:
                    title: PushValidationInfo
                    type: object
                    properties:
                      warnings:
                        type: array
                        items:
                          title: PushFieldValidation
                          required:
                            - details
                            - field
                          type: object
                          properties:
                            field:
                              minLength: 1
                              type: string
                            details:
                              minLength: 1
                              type: string
                            ref:
                              type: string
                              format: uri
                              nullable: true
                          additionalProperties: false
                        nullable: true
                      information:
                        type: array
                        items:
                          $ref: '#/paths/~1companies~1%7BcompanyId%7D~1connections~1%7BconnectionId%7D~1options~1%7BdataType%7D/get/responses/200/content/application~1json/schema/properties/validation/properties/warnings/items'
                        nullable: true
                    additionalProperties: false
                  rel:
                    type: string
                    nullable: true
                additionalProperties: false
              examples:
                Xero Push Options:
                  value:
                    type: Object
                    displayName: Invoice
                    description: An invoice is an itemised record of goods sold or services rendered to a customer
                    properties:
                      issueDate:
                        type: DateTime
                        displayName: Issue Date
                        description: The issuing date of the invoice
                        required: true
                        validation:
                          warnings: []
                          information:
                            - field: IssueDate
                              details: Must be provided.
                      dueDate:
                        type: DateTime
                        displayName: Due Date
                        description: The date the invoice is due to be paid by
                        required: true
                        validation:
                          warnings: []
                          information:
                            - field: DueDate
                              details: Must be provided.
                      currency:
                        type: String
                        displayName: Currency
                        description: Currency of the invoice
                        required: false
                      invoiceNumber:
                        type: String
                        displayName: Invoice Number
                        description: User friendly reference identifier for the invoice
                        required: false
                        validation:
                          warnings: []
                          information:
                            - field: InvoiceNumber
                              details: Must not exceed 255 charaters long.
                      currencyRate:
                        type: Number
                        displayName: Currency Exchange Rate
                        description: The exchange rate between the currency of the invoice and the base currency of the company
                        required: false
                        validation:
                          warnings: []
                          information:
                            - field: CurrencyRate
                              details: 'If no rate is specified, the Xero day rate will be applied.'
                              ref: 'https://central.xero.com/s/#CurrencySettings$Rates'
                      customerRef:
                        type: Object
                        displayName: Customer Reference
                        description: Reference to the customer the invoice has been sent to
                        properties:
                          id:
                            type: String
                            displayName: Identifier
                            description: The reference identifier for the customer
                            required: true
                            validation:
                              warnings:
                                - field: CustomerRef.Id
                                  details: Must be a valid GUID.
                                - field: CustomerRef.Id
                                  details: Must match the Id of an existing customer.
                              information:
                                - field: CustomerRef.Id
                                  details: Must be provided.
                        required: true
                        validation:
                          warnings: []
                          information:
                            - field: CustomerRef
                              details: Must be provided.
                      status:
                        type: String
                        displayName: Invoice Status
                        description: The current state of the invoice
                        options:
                          - value: Draft
                            type: String
                            displayName: Draft
                            required: false
                          - value: Submitted
                            type: String
                            displayName: Submitted
                            required: false
                        required: true
                        validation:
                          warnings: []
                          information:
                            - field: Status
                              details: Must be provided.
                      lineItems:
                        type: Array
                        displayName: Line Items
                        description: A collection of lines that detail items related to the invoice
                        properties:
                          description:
                            type: String
                            displayName: Description
                            description: Friendly name of the goods or services purchased
                            required: true
                            validation:
                              warnings: []
                              information:
                                - field: LineItems.Description
                                  details: Must not be longer than 4000 characters long.
                          quantity:
                            type: Number
                            displayName: Quantity
                            description: The number of units of goods or services purchased
                            required: true
                            validation:
                              warnings: []
                              information:
                                - field: LineItems.Quantity
                                  details: Must be provided.
                          unitAmount:
                            type: Number
                            displayName: Unit Amount
                            description: The price of each unit of goods or services
                            required: true
                            validation:
                              warnings: []
                              information:
                                - field: LineItems.UnitAmount
                                  details: Must be provided.
                          discountPercentage:
                            type: Number
                            displayName: Discount Percentage
                            description: The percentage rate of any discount that has been applied
                            required: false
                          taxAmount:
                            type: Number
                            displayName: Tax Amount
                            description: The amount of tax for the line
                            required: true
                            validation:
                              warnings: []
                              information:
                                - field: LineItems.TaxAmount
                                  details: Must be provided.
                          accountRef:
                            type: Object
                            displayName: Nominal Account Reference
                            description: Reference to the nominal account the line item is linked to
                            properties:
                              id:
                                type: String
                                displayName: Account ID
                                description: The identifier for the account
                                required: true
                                validation:
                                  warnings:
                                    - field: AccountRef.Id
                                      details: Must be a valid GUID.
                                    - field: AccountRef.Id
                                      details: Must match the Id of an existing account.
                                  information:
                                    - field: AccountRef.Id
                                      details: Must be provided.
                            required: true
                            validation:
                              warnings: []
                              information:
                                - field: LineItems.AccountRef
                                  details: Must be provided.
                          trackingCategoryRefs:
                            type: Array
                            displayName: Tracking Category References
                            description: A collection of categories this item is being tracked against
                            properties:
                              id:
                                type: String
                                displayName: Identifier
                                description: 'The identifier for the item, unique per tracking category'
                                required: true
                                validation:
                                  warnings: []
                                  information:
                                    - field: TrackingCategoryRefs.Id
                                      details: Must not be a parent tracking category.
                                    - field: TrackingCategoryRefs.Id
                                      details: Must be provided.
                            required: false
                            validation:
                              warnings: []
                              information:
                                - field: LineItems.TrackingCategoryRefs
                                  details: Tracking categories must not have the same parent tracking category.
                                - field: LineItems.TrackingCategoryRefs
                                  details: Maximum of 2 Tracking Categories.
                          taxRateRef:
                            type: Object
                            displayName: Tax Rate Reference
                            description: Reference to the tax rate code the line item is linked to
                            properties:
                              id:
                                type: String
                                displayName: Identifier
                                description: The reference identifier for the tax rate
                                required: false
                                validation:
                                  warnings:
                                    - field: TaxRateRef.Id
                                      details: Must be a valid GUID.
                                    - field: TaxRateRef.Id
                                      details: Must match the ID of an existing tax rate.
                                  information: []
                            required: false
                          itemRef:
                            type: Object
                            displayName: Item Reference
                            description: 'Reference to the product or service type, or inventory item, the line item is linked to'
                            properties:
                              id:
                                type: String
                                displayName: Identifier
                                description: The reference identifier for the item
                                required: false
                                validation:
                                  warnings:
                                    - field: ItemRef.Id
                                      details: Must be a valid GUID.
                                    - field: ItemRef.Id
                                      details: Must match the ID of an existing item.
                                  information: []
                            required: false
                        required: true
                        validation:
                          warnings: []
                          information:
                            - field: LineItems
                              details: Must be provided.
                    required: true
      operationId: get-companies-companyId-connections-connectionId-push
      description: |-
        Before pushing data into accounting software, it is often necessary to collect some details from the user as to how they would like the data to be inserted. This includes names and amounts on transactional entities, but also factors such as categorisation of entities, which is often handled differently between different accounting packages. A good example of this is specifying where on the balance sheet/profit and loss reports the user would like a newly-created nominal account to appear.

        Codat does not wish to limit users to pushing to a very limited number of standard categories, so we have implemented an "options" endpoint, which allows us to expose to our clients the fields which are required to be pushed for a specific linked company, and the options which may be selected for each field.


        > **Supported Integrations**
        > 
        > Check out our [Knowledge UI](https://knowledge.codat.io/) for integrations that support push (POST/PUT methods).
  '/companies/{companyId}/push':
    parameters:
      - $ref: '#/components/parameters/companyId'
    get:
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/orderBy'
      summary: Lists push operations
      tags:
        - Push
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/paths/~1companies~1%7BcompanyId%7D~1push~1%7BpushOperationKey%7D/get/responses/200/content/application~1json/schema/allOf/1'
                  - $ref: '#/paths/~1rules/get/responses/200/content/application~1json/schema/allOf/1'
      operationId: get-companies-companyId-push
      description: List push operation records.
  '/companies/{companyId}/push/{pushOperationKey}':
    parameters:
      - $ref: '#/components/parameters/companyId'
      - schema:
          type: string
          format: uuid
        name: pushOperationKey
        in: path
        required: true
        description: Push operation key.
    get:
      summary: Get push operation
      tags:
        - Push
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: object
                        description: Object submitted in push operation.
                  - required:
                      - companyId
                      - dataConnectionKey
                      - pushOperationKey
                      - requestedOnUtc
                      - status
                      - statusCode
                    x-stoplight:
                      id: b992228353df1
                    type: object
                    properties:
                      changes:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              enum:
                                - Unknown
                                - Created
                                - Modified
                                - Deleted
                                - AttachmentUploaded
                              type: string
                            recordRef:
                              type: object
                              properties:
                                id:
                                  type: string
                                  nullable: true
                                dataType:
                                  type: string
                                  nullable: true
                            attachmentId:
                              type: string
                              nullable: true
                        nullable: true
                      dataType:
                        type: string
                        nullable: true
                      companyId:
                        type: string
                        format: uuid
                      pushOperationKey:
                        type: string
                        format: uuid
                      dataConnectionKey:
                        type: string
                        format: uuid
                      requestedOnUtc:
                        type: string
                        format: date-time
                      completedOnUtc:
                        type: string
                        format: date-time
                        nullable: true
                      timeoutInMinutes:
                        type: integer
                        format: int32
                        nullable: true
                      timeoutInSeconds:
                        type: integer
                        format: int32
                        nullable: true
                        deprecated: true
                      status:
                        minLength: 1
                        type: string
                      errorMessage:
                        type: string
                        nullable: true
                      validation:
                        type: object
                        properties:
                          errors:
                            type: array
                            items:
                              type: object
                              properties:
                                itemId:
                                  type: string
                                  nullable: true
                                message:
                                  type: string
                                  nullable: true
                                validatorName:
                                  type: string
                                  nullable: true
                            nullable: true
                          warnings:
                            type: array
                            items:
                              $ref: '#/paths/~1companies~1%7BcompanyId%7D~1push~1%7BpushOperationKey%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/validation/properties/errors/items'
                            nullable: true
                      statusCode:
                        type: integer
                        format: int32
      operationId: get-companies-companyId-push-pushOperationKey
      description: Retreive push operation.
components:
  schemas: {}
  securitySchemes:
    API_Key:
      name: Your Base 64 encoded API Key
      type: apiKey
      in: header
      description: Your base 64 encoded Codat API Key
  responses:
    Unauthorized:
      description: Your API request was not properly authorized.
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              service:
                type: string
              error:
                type: string
              correlationId:
                type: string
              canBeRetried:
                type: string
              detailedErrorCode:
                type: integer
            x-examples:
              example-1:
                statusCode: 401
                service: PublicApi
                error: Unauthorized
                correlationId: 7eb40d6b415d7bcd99ce658268284056
                canBeRetried: Unknown
                detailedErrorCode: 0
          examples:
            example-1:
              value:
                statusCode: 401
                service: PublicApi
                error: Unauthorized
                correlationId: 7eb40d6b415d7bcd99ce658268284056
                canBeRetried: Unknown
                detailedErrorCode: 0
    Malformed-Query:
      description: Your `query` parameter was not correctly formed
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              service:
                type: string
              error:
                type: string
              correlationId:
                type: string
              canBeRetried:
                type: string
              detailedErrorCode:
                type: integer
            x-examples:
              example-1:
                statusCode: 400
                service: ClientsApi
                error: Error parsing query - Malformed query.
                correlationId: bc997528a9d7abb9161ef45f05d38599
                canBeRetried: Unknown
                detailedErrorCode: 0
          examples:
            example-1:
              value:
                statusCode: 400
                service: ClientsApi
                error: Error parsing query - Malformed query.
                correlationId: bc997528a9d7abb9161ef45f05d38599
                canBeRetried: Unknown
                detailedErrorCode: 0
    Not-Found:
      description: |-
        One or more of the resources you referenced could not be found.
        This might be because your company or data connection id is wrong, or was already deleted.
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              service:
                type: string
              error:
                type: string
              correlationId:
                type: string
              canBeRetried:
                type: string
              detailedErrorCode:
                type: integer
            x-examples:
              example-1:
                statusCode: 404
                service: PublicApi
                error: Data connection a22dd66b-564a-4832-9b37-7b3ce4aeb7de not found
                correlationId: 8fa2b5f4794970a4ee73758f612e8df0
                canBeRetried: Unknown
                detailedErrorCode: 0
          examples:
            Data connection not found:
              value:
                statusCode: 404
                service: PublicApi
                error: Data connection a22dd66b-564a-4832-9b37-7b3ce4aeb7de not found
                correlationId: 8fa2b5f4794970a4ee73758f612e8df0
                canBeRetried: Unknown
                detailedErrorCode: 0
            Company not found:
              value:
                statusCode: 404
                service: ClientsApi
                error: No company was found with ID 846ed55c-974b-4392-a1f1-87b6fdbf3c5e
                correlationId: 0a40c2f31fc8f992fb88b0853e4166f3
                canBeRetried: Unknown
                detailedErrorCode: 0
  parameters:
    companyId:
      name: companyId
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: 8a210b68-6988-11ed-a1eb-0242ac120002
      description: Unique identifier for your SMB in Codat.
    connectionId:
      name: connectionId
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: 2e9d2c44-f675-40ba-8049-353bfcb5e171
      description: Unique identifier for a company's data connection.
    pageSize:
      name: pageSize
      in: query
      schema:
        type: number
        default: 100
        example: 100
        minimum: 1
        maximum: 5000
      description: 'Number of records to return in a page. [Read more](https://codat-docs.vercel.app/using-the-api/paging).'
    page:
      name: page
      in: query
      required: true
      schema:
        type: number
        minimum: 0
        example: 1
        default: 1
      description: 'Page number. [Read more](https://codat-docs.vercel.app/using-the-api/paging).'
    query:
      name: query
      in: query
      required: false
      schema:
        type: string
      description: 'Codat query string. [Read more](https://codat-docs.vercel.app/using-the-api/querying).'
    orderBy:
      name: orderBy
      in: query
      required: false
      schema:
        type: string
        example: '-modifiedDate'
      description: 'Field to order results by. [Read more](https://codat-docs.vercel.app/using-the-api/ordering-results).'
    dataType:
      name: dataType
      in: path
      required: true
      schema:
        type: string
        enum:
          - invoices
          - accounts
          - commerce-payments
          - banking-accounts
          - company
          - profitAndLoss
          - commerce-transactions
          - bills
          - customers
        example: customers
      description: A key for a Codat data type
    ruleId:
      name: ruleId
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: 7318949f-c008-4936-a8ff-10d7ab563fa6
      description: Unique ID of the webhook or rule.
    datasetId:
      name: datasetId
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: eaed9f0f-e77b-4bc9-a58f-ab8b4b99ab18
      description: Unique ID of a dataset or pull operation.
    platformKey:
      name: platformKey
      in: path
      required: true
      schema:
        type: string
        minLength: 4
        maxLength: 4
        pattern: '[a-z]{4}'
        example: gbol
      description: '4 letter key for an integration. [Read more](https://codat-docs.vercel.app/integrations/accounting/accounting-platform-keys).'
security:
  - API_Key: []
